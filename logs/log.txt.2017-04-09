2017-04-09 11:12:30,712 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 11:12:30,727 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 11:13:10,155 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 11:13:10,155 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 11:13:25,297 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 11:13:25,306 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 12:39:55,729 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 12:39:55,729 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 12:39:55,747 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 12:39:55,751 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:40:53,948 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:40:53,948 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:40:54,057 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:40:54,064 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:40:54,594 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:40:54,605 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:40:54,723 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:40:54,723 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:40:54,864 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:40:54,910 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:40:57,140 global_function.py[line: 77] ERROR: 测试项目[project：pj_pos]获取失败，暂时无法执行：problems connecting the TestLink Server http://localhost/testlink/lib/api/xmlrpc.php
[WinError 10061] 由于目标计算机积极拒绝，无法连接。
2017-04-09 14:40:57,140 main.py[line: 80] CRITICAL: 初始化用例所在项目配置存在问题，提前终止程序运行
2017-04-09 14:43:24,349 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:43:24,349 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:43:24,402 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:43:24,408 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:43:24,748 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:43:24,748 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:43:24,750 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:43:24,750 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:43:24,752 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:43:24,779 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:43:26,786 global_function.py[line: 77] ERROR: 测试项目[project：pj_pos]获取失败，暂时无法执行：problems connecting the TestLink Server http://localhost/testlink/lib/api/xmlrpc.php
[WinError 10061] 由于目标计算机积极拒绝，无法连接。
2017-04-09 14:43:26,787 main.py[line: 80] CRITICAL: 初始化用例所在项目配置存在问题，提前终止程序运行
2017-04-09 14:44:21,700 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:44:21,701 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:44:21,753 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:44:21,759 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:44:21,851 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:44:21,851 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:44:21,854 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:44:21,854 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:44:21,856 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:44:21,860 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:44:21,866 global_function.py[line: 77] ERROR: 测试项目[project：pj_pos]获取失败，暂时无法执行：problems connecting the TestLink Server http://192.168.1.100:8080/testlinklib/api/xmlrpc/v1/xmlrpc.php
<ProtocolError for 192.168.1.100:8080/testlinklib/api/xmlrpc/v1/xmlrpc.php: 404 Not Found>
2017-04-09 14:44:21,866 main.py[line: 80] CRITICAL: 初始化用例所在项目配置存在问题，提前终止程序运行
2017-04-09 14:46:49,887 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:46:49,888 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:46:49,910 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:46:49,916 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:46:49,997 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:46:49,997 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:46:49,999 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:46:49,999 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:46:50,001 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:46:50,004 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:46:52,534 global_function.py[line: 77] ERROR: 测试项目[project：pj_pos]获取失败，暂时无法执行：2000: Can not authenticate client: invalid developer key
getTestProjectByName({'testprojectname': 'pj_pos', 'devKey': '42'})
2017-04-09 14:46:52,534 main.py[line: 80] CRITICAL: 初始化用例所在项目配置存在问题，提前终止程序运行
2017-04-09 14:47:49,385 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:47:49,385 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:47:49,400 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:47:49,403 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:47:49,470 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:47:49,470 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:47:49,473 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:47:49,474 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:47:49,476 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:47:49,478 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:47:50,741 global_function.py[line: 77] ERROR: 测试项目[project：pj_pos]获取失败，暂时无法执行：2000: Can not authenticate client: invalid developer key
getTestProjectByName({'devKey': '42', 'testprojectname': 'pj_pos'})
2017-04-09 14:47:50,742 main.py[line: 80] CRITICAL: 初始化用例所在项目配置存在问题，提前终止程序运行
2017-04-09 14:49:46,882 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:49:46,882 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:49:46,910 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:49:46,927 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:49:47,031 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:49:47,031 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:49:47,041 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:49:47,041 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:49:47,044 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:49:47,048 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:49:48,365 global_function.py[line: 77] ERROR: 测试项目[project：pj_pos]获取失败，暂时无法执行：7011: Test Project (name:pj_pos) does not exist.
getTestProjectByName({'devKey': '965a88dd56a1fe1c4d0d7891ed87272d', 'testprojectname': 'pj_pos'})
2017-04-09 14:49:48,366 main.py[line: 80] CRITICAL: 初始化用例所在项目配置存在问题，提前终止程序运行
2017-04-09 14:50:31,034 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:50:31,034 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:50:31,054 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:50:31,058 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:50:31,129 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:50:31,129 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:50:31,131 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:50:31,131 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:50:31,133 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:50:31,135 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:50:31,135 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 14:50:31,136 main.py[line: 205] INFO: 待运行用例id列表：[68]
2017-04-09 14:50:32,396 global_function.py[line: 20] ERROR: 获取用例信息失败 5000: (getTestCase) - The Test Case ID (testcaseid: 68) provided does not exist!
getTestCase({'testcaseid': 68, 'devKey': '965a88dd56a1fe1c4d0d7891ed87272d'}),,暂停执行该用例
2017-04-09 14:50:32,397 main.py[line: 208] INFO: 用例[68]运行结果：('Fail', [('global_funtion_module', "获取用例信息失败 5000: (getTestCase) - The Test Case ID (testcaseid: 68) provided does not exist!\ngetTestCase({'testcaseid': 68, 'devKey': '965a88dd56a1fe1c4d0d7891ed87272d'})")])
2017-04-09 14:50:32,397 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 14:51:34,964 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:51:34,965 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:51:34,979 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:51:34,983 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:51:35,040 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:51:35,040 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:51:35,042 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:51:35,042 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:51:35,044 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:51:35,046 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:51:35,046 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 14:51:35,046 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 14:51:35,678 global_function.py[line: 18] INFO: 获取测试用例信息 [{'importance': '2', 'name': '获取天气服务', 'testsuite_id': '65', 'is_open': '1', 'author_id': '1', 'updater_first_name': 'Testlink', 'summary': '', 'full_tc_external_id': 'tc-12', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'updater_login': 'admin', 'active': '1', 'creation_ts': '2016-04-06 21:14:49', 'version': '1', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;params&quot;:</p>\n<p align="left">\n\t&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'layout': '1', 'status': '1', 'updater_last_name': 'Administrator', 'execution_type': '1', 'testcase_id': '66', 'modification_ts': '2017-04-09 11:06:46', 'updater_id': '1', 'id': '67', 'tc_external_id': '12', 'author_login': 'admin', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'node_order': '1000', 'author_last_name': 'Administrator'}]
2017-04-09 14:51:37,230 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 14:51:37,231 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 14:51:37,231 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 14:51:37,675 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 14:51:37,675 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145134', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 14:51:37,677 mydb.py[line: 66] ERROR: 执行数据库插入操作失败：1054 (42S22): Unknown column 'tc_external_id' in 'field list'
2017-04-09 14:53:39,721 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:53:39,721 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:53:39,736 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:53:39,741 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:53:39,803 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:53:39,803 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:53:39,811 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:53:39,811 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:53:39,818 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:53:39,820 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:53:39,821 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 14:53:39,821 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 14:53:40,438 global_function.py[line: 18] INFO: 获取测试用例信息 [{'estimated_exec_duration': '', 'updater_login': 'admin', 'active': '1', 'modification_ts': '2017-04-09 11:06:46', 'node_order': '1000', 'layout': '1', 'updater_id': '1', 'is_open': '1', 'updater_last_name': 'Administrator', 'tc_external_id': '12', 'version': '1', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'testsuite_id': '65', 'summary': '', 'steps': [{'step_number': '1', 'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;params&quot;:</p>\n<p align="left">\n\t&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'id': '68'}], 'author_first_name': 'Testlink', 'creation_ts': '2016-04-06 21:14:49', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'status': '1', 'author_last_name': 'Administrator', 'importance': '2', 'execution_type': '1', 'author_login': 'admin', 'id': '67', 'author_id': '1'}]
2017-04-09 14:53:41,744 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 14:53:41,744 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 14:53:41,745 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 14:53:42,192 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 14:53:42,193 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145339', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 14:53:42,195 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 14:53:42,196 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","params":""}
2017-04-09 14:53:42,196 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":"{"success":"value","shouke":2016}", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 14:53:42,196 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 14:53:42,196 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145342', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","params":""}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":"{"success":"value","shouke":2016}", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 14:53:42,199 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 46 (char 45),停止执行用例[id=66, name=获取天气服务]
2017-04-09 14:53:42,199 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 14:53:42,199 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 46 (char 45)", protocol_method="post", runtime="2017-04-09 14:53:42" WHERE executed_history_id = 20170409145342 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 14:53:42,200 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 14:53:42,201 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 14:53:42", case_exec_history_id="20170409145342" WHERE executed_history_id = 20170409145339 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 14:53:42,202 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 14:53:42,202 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 46 (char 45),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 14:53:42,203 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 14:57:14,462 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:57:14,462 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:57:14,479 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:57:14,482 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:57:14,549 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:57:14,550 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:57:14,551 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:57:14,551 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:57:14,553 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:57:14,555 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:57:14,555 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 14:57:14,555 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 14:57:14,787 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_first_name': 'Testlink', 'node_order': '1000', 'tc_external_id': '12', 'testsuite_id': '65', 'updater_last_name': 'Administrator', 'steps': [{'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:</p>\n<p align="left">\n\t&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'active': '1', 'step_number': '1'}], 'importance': '2', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'version': '1', 'summary': '', 'updater_first_name': 'Testlink', 'author_id': '1', 'full_tc_external_id': 'tc-12', 'is_open': '1', 'name': '获取天气服务', 'status': '1', 'execution_type': '1', 'creation_ts': '2016-04-06 21:14:49', 'modification_ts': '2017-04-09 14:57:09', 'layout': '1', 'updater_login': 'admin', 'author_login': 'admin', 'author_last_name': 'Administrator', 'updater_id': '1', 'id': '67', 'estimated_exec_duration': '', 'testcase_id': '66', 'active': '1'}]
2017-04-09 14:57:15,340 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 14:57:15,341 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 14:57:15,341 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 14:57:16,231 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 14:57:16,232 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145714', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 14:57:16,236 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 14:57:16,237 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":""}
2017-04-09 14:57:16,237 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":"{"success":"value","shouke":2016}", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 14:57:16,237 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 14:57:16,238 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145716', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":""}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":"{"success":"value","shouke":2016}", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 14:57:16,248 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 46 (char 45),停止执行用例[id=66, name=获取天气服务]
2017-04-09 14:57:16,248 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 14:57:16,249 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 46 (char 45)", protocol_method="post", runtime="2017-04-09 14:57:16" WHERE executed_history_id = 20170409145716 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 14:57:16,251 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 14:57:16,252 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 14:57:16", case_exec_history_id="20170409145716" WHERE executed_history_id = 20170409145714 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 14:57:16,254 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 14:57:16,255 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 46 (char 45),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 14:57:16,255 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 14:58:04,888 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:58:04,889 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:58:04,904 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:58:04,909 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:58:04,977 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:58:04,977 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:58:04,979 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:58:04,979 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:58:04,980 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:58:04,982 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:58:04,982 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 14:58:04,983 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 14:58:05,195 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_last_name': 'Administrator', 'importance': '2', 'estimated_exec_duration': '', 'updater_first_name': 'Testlink', 'author_id': '1', 'author_first_name': 'Testlink', 'steps': [{'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1'}], 'execution_type': '1', 'status': '1', 'node_order': '1000', 'updater_login': 'admin', 'author_login': 'admin', 'author_last_name': 'Administrator', 'version': '1', 'layout': '1', 'name': '获取天气服务', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'tc_external_id': '12', 'summary': '', 'is_open': '1', 'id': '67', 'testsuite_id': '65', 'full_tc_external_id': 'tc-12', 'updater_id': '1', 'modification_ts': '2017-04-09 14:58:00', 'active': '1', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49'}]
2017-04-09 14:58:05,665 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 14:58:05,665 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 14:58:05,665 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 14:58:06,135 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 14:58:06,135 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145804', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 14:58:06,137 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 14:58:06,137 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":""}
2017-04-09 14:58:06,137 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":"{"success":"value","shouke":2016}", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 14:58:06,138 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 14:58:06,138 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145806', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":""}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":"{"success":"value","shouke":2016}", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 14:58:06,140 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 46 (char 45),停止执行用例[id=66, name=获取天气服务]
2017-04-09 14:58:06,141 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 14:58:06,141 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 46 (char 45)", protocol_method="post", runtime="2017-04-09 14:58:06" WHERE executed_history_id = 20170409145806 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 14:58:06,142 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 14:58:06,142 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 14:58:06", case_exec_history_id="20170409145806" WHERE executed_history_id = 20170409145804 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 14:58:06,143 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 14:58:06,144 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 46 (char 45),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 14:58:06,144 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 14:59:04,696 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 14:59:04,696 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 14:59:04,711 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 14:59:04,715 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 14:59:04,781 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 14:59:04,781 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 14:59:04,783 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 14:59:04,783 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 14:59:04,784 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 14:59:04,787 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 14:59:04,788 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 14:59:04,788 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 14:59:05,029 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_id': '1', 'tc_external_id': '12', 'active': '1', 'id': '67', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'status': '1', 'testcase_id': '66', 'node_order': '1000', 'name': '获取天气服务', 'execution_type': '1', 'is_open': '1', 'steps': [{'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'id': '68'}], 'estimated_exec_duration': '', 'testsuite_id': '65', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'author_login': 'admin', 'layout': '1', 'summary': '', 'updater_login': 'admin', 'updater_id': '1', 'updater_first_name': 'Testlink', 'updater_last_name': 'Administrator', 'version': '1', 'full_tc_external_id': 'tc-12', 'importance': '2', 'creation_ts': '2016-04-06 21:14:49', 'modification_ts': '2017-04-09 14:59:01'}]
2017-04-09 14:59:05,406 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 14:59:05,406 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 14:59:05,406 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 14:59:05,889 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 14:59:05,889 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145904', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 14:59:05,891 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 14:59:05,891 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":""}
2017-04-09 14:59:05,891 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 14:59:05,892 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 14:59:05,892 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409145905', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":""}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 14:59:05,894 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 14:59:05,894 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 14:59:05,894 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 14:59:05,895 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 14:59:05,895 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 14:59:05,895 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 14:59:05,896 httpprotocol.py[line: 82] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/WebServices/WeatherWebService.asmx?
2017-04-09 14:59:05,896 httpprotocol.py[line: 83] INFO: 参数为：b''
2017-04-09 14:59:05,896 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 14:59:06,006 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden,正在进行第二次尝试
2017-04-09 14:59:06,083 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden
2017-04-09 14:59:06,085 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 14:59:06,085 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 14:59:06,085 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 403: Forbidden", protocol_method="post", runtime="2017-04-09 14:59:05",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx?', '参数': ''}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'success': 'value', 'shouke': 2016}}]}" WHERE executed_history_id = 20170409145905 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 14:59:06,087 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 14:59:06,087 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 14:59:05", case_exec_history_id="20170409145905" WHERE executed_history_id = 20170409145904 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 14:59:06,089 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 14:59:06,089 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 403: Forbidden\n')])
2017-04-09 14:59:06,089 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:07:23,279 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:07:23,279 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:07:23,297 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:07:23,301 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:07:23,386 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:07:23,386 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:07:23,388 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:07:23,389 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:07:23,391 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:07:23,393 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:07:23,393 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:07:23,394 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:07:23,624 global_function.py[line: 18] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'tc-12', 'is_open': '1', 'testsuite_id': '65', 'id': '67', 'author_id': '1', 'testcase_id': '66', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'creation_ts': '2016-04-06 21:14:49', 'status': '1', 'author_first_name': 'Testlink', 'estimated_exec_duration': '', 'tc_external_id': '12', 'updater_login': 'admin', 'importance': '2', 'modification_ts': '2017-04-09 14:59:01', 'author_login': 'admin', 'author_last_name': 'Administrator', 'layout': '1', 'version': '1', 'active': '1', 'summary': '', 'steps': [{'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'id': '68'}], 'updater_last_name': 'Administrator', 'updater_id': '1', 'node_order': '1000'}]
2017-04-09 15:07:24,131 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:07:24,132 global_function.py[line: 84] INFO: 成功读取配置信息：<p>{<p>"protocol":"http",<p>"host":"gc.ditu.aliyun.com",<p>"port":80<p>}
2017-04-09 15:07:24,132 global_function.py[line: 95] ERROR: 测试项目[project：项目1]协议，host，端口信息配置错误,暂时无法执行：No JSON object could be decoded
2017-04-09 15:07:24,132 global_function.py[line: 44] CRITICAL: 用例所在项目配置存在问题，停止执行该用例
2017-04-09 15:07:24,132 main.py[line: 208] INFO: 用例[66]运行结果：('Block', [('golbal_function_module', '用例所在项目配置存在问题，停止执行该用例')])
2017-04-09 15:07:24,132 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:09:58,615 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:09:58,615 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:10:19,709 mydb.py[line: 30] ERROR: 初始化数据连接失败：2003: Can't connect to MySQL server on '192.168.1.100:3306' (10060 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。)
2017-04-09 15:10:24,929 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:10:24,929 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:10:45,947 mydb.py[line: 30] ERROR: 初始化数据连接失败：2003: Can't connect to MySQL server on '192.168.1.100:3306' (10060 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。)
2017-04-09 15:13:57,954 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:13:57,954 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:14:00,903 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:14:00,915 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:14:01,383 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:14:01,383 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:14:01,388 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:14:01,388 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:14:01,393 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:14:01,396 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:14:01,396 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:14:01,396 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:14:01,858 global_function.py[line: 18] INFO: 获取测试用例信息 [{'status': '1', 'updater_login': 'admin', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'summary': '', 'steps': [{'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'active': '1', 'execution_type': '1'}], 'author_id': '1', 'modification_ts': '2017-04-09 14:59:01', 'importance': '2', 'is_open': '1', 'name': '获取天气服务', 'updater_last_name': 'Administrator', 'testcase_id': '66', 'updater_id': '1', 'layout': '1', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'id': '67', 'testsuite_id': '65', 'tc_external_id': '12', 'author_last_name': 'Administrator', 'estimated_exec_duration': '', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'active': '1', 'version': '1', 'execution_type': '1', 'node_order': '1000'}]
2017-04-09 15:14:02,245 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:14:02,245 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:14:02,245 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:14:02,703 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:14:02,703 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151400', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:14:02,705 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:14:02,705 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?",<p align="left">"参数":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:web=\"http://WebXml.com.cn/\"><p align="left"><soapenv:Header/><p align="left"><soapenv:Body><p align="left"><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}
2017-04-09 15:14:02,705 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:14:02,706 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:14:02,706 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151402', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?",<p align="left">"参数":"<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"  xmlns:web=\\"http://WebXml.com.cn/\\"><p align="left"><soapenv:Header/><p align="left"><soapenv:Body><p align="left"><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:14:02,708 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting property name enclosed in double quotes: line 1 column 88 (char 87),停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:14:02,708 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 15:14:02,709 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting property name enclosed in double quotes: line 1 column 88 (char 87)", protocol_method="未获取到", runtime="2017-04-09 15:14:02" WHERE executed_history_id = 20170409151402 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 15:14:02,710 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:14:02,710 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:14:02", case_exec_history_id="20170409151402" WHERE executed_history_id = 20170409151400 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:14:02,711 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:14:02,712 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', '步骤[1]信息填写错误: Expecting property name enclosed in double quotes: line 1 column 88 (char 87),停止执行用例[id=66, name=获取天气服务]')])
2017-04-09 15:14:02,712 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:14:44,594 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:14:44,595 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:14:44,610 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:14:44,616 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:14:44,723 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:14:44,723 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:14:44,730 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:14:44,730 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:14:44,733 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:14:44,737 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:14:44,737 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:14:44,737 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:14:44,972 global_function.py[line: 18] INFO: 获取测试用例信息 [{'importance': '2', 'modification_ts': '2017-04-09 14:59:01', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'status': '1', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'name': '获取天气服务', 'layout': '1', 'node_order': '1000', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/WebServices/WeatherWebService.asmx?&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'id': '68', 'active': '1'}], 'is_open': '1', 'updater_first_name': 'Testlink', 'version': '1', 'author_last_name': 'Administrator', 'author_login': 'admin', 'author_first_name': 'Testlink', 'testcase_id': '66', 'active': '1', 'execution_type': '1', 'author_id': '1', 'updater_id': '1', 'summary': '', 'estimated_exec_duration': '', 'tc_external_id': '12', 'id': '67', 'testsuite_id': '65'}]
2017-04-09 15:14:45,461 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:14:45,462 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:14:45,462 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:14:45,952 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:14:45,953 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151444', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:14:45,954 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:14:45,955 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:web=\"http://WebXml.com.cn/\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}
2017-04-09 15:14:45,955 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:14:45,955 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:14:45,955 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151445', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx?","参数":"<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"  xmlns:web=\\"http://WebXml.com.cn/\\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:14:45,958 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:14:45,958 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:14:45,958 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:14:45,958 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:14:45,959 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:14:45,959 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:14:45,959 httpprotocol.py[line: 82] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/WebServices/WeatherWebService.asmx?
2017-04-09 15:14:45,959 httpprotocol.py[line: 83] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"  xmlns:web="http://WebXml.com.cn/"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'
2017-04-09 15:14:45,959 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 15:14:57,965 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：<urlopen error [Errno 11004] getaddrinfo failed>,正在进行第二次尝试
2017-04-09 15:14:58,107 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden
2017-04-09 15:14:58,111 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:14:58,112 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:14:58,112 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 403: Forbidden", protocol_method="post", runtime="2017-04-09 15:14:45",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx?', '参数': '<soapenv:Envelope xmlns:soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'  xmlns:web=\'http://WebXml.com.cn/\'><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'success': 'value', 'shouke': 2016}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409151445 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:14:58,118 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:14:58,119 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:14:45", case_exec_history_id="20170409151445" WHERE executed_history_id = 20170409151444 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:14:58,125 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:14:58,126 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 403: Forbidden\n')])
2017-04-09 15:14:58,127 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:17:12,630 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:17:12,630 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:17:12,645 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:17:12,648 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:17:12,714 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:17:12,714 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:17:12,716 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:17:12,716 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:17:12,718 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:17:12,720 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:17:12,720 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:17:12,720 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:17:12,929 global_function.py[line: 18] INFO: 获取测试用例信息 [{'importance': '2', 'full_tc_external_id': 'tc-12', 'updater_last_name': 'Administrator', 'estimated_exec_duration': '', 'execution_type': '1', 'author_id': '1', 'steps': [{'execution_type': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>http://WebXml.com.cn/getSupportProvinc</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}], 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_login': 'admin', 'status': '1', 'updater_login': 'admin', 'node_order': '1000', 'name': '获取天气服务', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'layout': '1', 'version': '1', 'summary': '', 'is_open': '1', 'tc_external_id': '12', 'updater_first_name': 'Testlink', 'updater_id': '1', 'testsuite_id': '65', 'id': '67', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'active': '1', 'modification_ts': '2017-04-09 15:17:06'}]
2017-04-09 15:17:13,285 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:17:13,285 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:17:13,285 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:17:13,752 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:17:13,752 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151712', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:17:13,754 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:17:13,754 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"http://WebXml.com.cn/getSupportProvinc","参数":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:web=\"http://WebXml.com.cn/\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}
2017-04-09 15:17:13,754 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:17:13,754 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:17:13,755 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151713', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"http://WebXml.com.cn/getSupportProvinc","参数":"<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"  xmlns:web=\\"http://WebXml.com.cn/\\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:17:13,756 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:17:13,757 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:17:13,757 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:17:13,757 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:17:13,757 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:17:13,758 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:17:13,758 httpprotocol.py[line: 82] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80http://WebXml.com.cn/getSupportProvinc
2017-04-09 15:17:13,758 httpprotocol.py[line: 83] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"  xmlns:web="http://WebXml.com.cn/"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'
2017-04-09 15:17:13,758 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 15:17:13,761 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：<urlopen error [Errno 11004] getaddrinfo failed>,正在进行第二次尝试
2017-04-09 15:17:13,762 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：<urlopen error [Errno 11004] getaddrinfo failed>
2017-04-09 15:17:13,763 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:17:13,764 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:17:13,764 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : <urlopen error [Errno 11004] getaddrinfo failed>", protocol_method="post", runtime="2017-04-09 15:17:13",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': 'http://WebXml.com.cn/getSupportProvinc', '参数': '<soapenv:Envelope xmlns:soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'  xmlns:web=\'http://WebXml.com.cn/\'><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'success': 'value', 'shouke': 2016}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409151713 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:17:13,768 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:17:13,824 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:17:13", case_exec_history_id="20170409151713" WHERE executed_history_id = 20170409151712 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:17:13,830 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:17:13,830 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : <urlopen error [Errno 11004] getaddrinfo failed>\n')])
2017-04-09 15:17:13,831 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:17:35,518 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:17:35,518 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:17:35,534 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:17:35,538 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:17:35,605 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:17:35,606 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:17:35,608 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:17:35,608 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:17:35,610 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:17:35,612 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:17:35,612 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:17:35,613 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:17:35,938 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'version': '1', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'author_login': 'admin', 'testcase_id': '66', 'active': '1', 'testsuite_id': '65', 'id': '67', 'estimated_exec_duration': '', 'updater_login': 'admin', 'modification_ts': '2017-04-09 15:17:29', 'execution_type': '1', 'tc_external_id': '12', 'name': '获取天气服务', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'tc-12', 'layout': '1', 'is_open': '1', 'importance': '2', 'updater_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebXml.com.cn/getSupportProvinc</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'id': '68', 'active': '1'}], 'author_id': '1', 'updater_id': '1', 'creation_ts': '2016-04-06 21:14:49', 'node_order': '1000', 'summary': '', 'status': '1'}]
2017-04-09 15:17:36,305 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:17:36,305 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:17:36,305 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:17:36,781 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:17:36,781 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151735', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:17:36,783 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:17:36,783 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebXml.com.cn/getSupportProvinc","参数":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:web=\"http://WebXml.com.cn/\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}
2017-04-09 15:17:36,784 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:17:36,784 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:17:36,784 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151736', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebXml.com.cn/getSupportProvinc","参数":"<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"  xmlns:web=\\"http://WebXml.com.cn/\\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:17:36,786 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:17:36,786 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:17:36,786 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:17:36,786 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:17:36,786 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:17:36,787 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:17:36,787 httpprotocol.py[line: 82] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/WebXml.com.cn/getSupportProvinc
2017-04-09 15:17:36,787 httpprotocol.py[line: 83] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"  xmlns:web="http://WebXml.com.cn/"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'
2017-04-09 15:17:36,787 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 15:17:36,909 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden,正在进行第二次尝试
2017-04-09 15:17:37,037 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden
2017-04-09 15:17:37,038 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:17:37,038 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:17:37,038 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 403: Forbidden", protocol_method="post", runtime="2017-04-09 15:17:36",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': '/WebXml.com.cn/getSupportProvinc', '参数': '<soapenv:Envelope xmlns:soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'  xmlns:web=\'http://WebXml.com.cn/\'><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'success': 'value', 'shouke': 2016}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409151736 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:17:37,041 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:17:37,041 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:17:36", case_exec_history_id="20170409151736" WHERE executed_history_id = 20170409151735 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:17:37,044 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:17:37,044 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 403: Forbidden\n')])
2017-04-09 15:17:37,044 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:18:06,024 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:18:06,024 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:18:06,038 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:18:06,041 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:18:06,101 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:18:06,102 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:18:06,103 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:18:06,104 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:18:06,105 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:18:06,107 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:18:06,107 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:18:06,108 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:18:06,298 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'layout': '1', 'testcase_id': '66', 'updater_id': '1', 'active': '1', 'summary': '', 'author_last_name': 'Administrator', 'id': '67', 'status': '1', 'name': '获取天气服务', 'is_open': '1', 'creation_ts': '2016-04-06 21:14:49', 'execution_type': '1', 'version': '1', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'modification_ts': '2017-04-09 15:17:57', 'tc_external_id': '12', 'author_id': '1', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'author_first_name': 'Testlink', 'estimated_exec_duration': '', 'steps': [{'execution_type': '1', 'step_number': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebXml.com.cn/getSupportProvinc</span></span>e&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&nbsp; xmlns:web=\\&quot;http://WebXml.com.cn/\\&quot;&gt;</p>\n<p align="left">\n\t&lt;soapenv:Header/&gt;</p>\n<p align="left">\n\t&lt;soapenv:Body&gt;</p>\n<p align="left">\n\t&lt;web:getSupportProvince/&gt;</p>\n<p>\n\t&lt;/soapenv:Body&gt;</p>\n<p>\n\t&lt;/soapenv:Envelope&gt;&quot;</p>\n<p>\n\t}</p>\n', 'id': '68'}], 'importance': '2', 'author_login': 'admin', 'testsuite_id': '65'}]
2017-04-09 15:18:06,643 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:18:06,644 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:18:06,644 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:18:07,101 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:18:07,102 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151806', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:18:07,103 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:18:07,104 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebXml.com.cn/getSupportProvince","参数":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:web=\"http://WebXml.com.cn/\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}
2017-04-09 15:18:07,104 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:18:07,104 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:18:07,104 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409151807', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebXml.com.cn/getSupportProvince","参数":"<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"  xmlns:web=\\"http://WebXml.com.cn/\\"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:18:07,106 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:18:07,106 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:18:07,107 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:18:07,107 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:18:07,107 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:18:07,107 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:18:07,108 httpprotocol.py[line: 82] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/WebXml.com.cn/getSupportProvince
2017-04-09 15:18:07,108 httpprotocol.py[line: 83] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"  xmlns:web="http://WebXml.com.cn/"><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'
2017-04-09 15:18:07,108 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 15:18:07,244 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden,正在进行第二次尝试
2017-04-09 15:18:07,378 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden
2017-04-09 15:18:07,381 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:18:07,381 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:18:07,382 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 403: Forbidden", protocol_method="post", runtime="2017-04-09 15:18:07",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': '/WebXml.com.cn/getSupportProvince', '参数': '<soapenv:Envelope xmlns:soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'  xmlns:web=\'http://WebXml.com.cn/\'><soapenv:Header/><soapenv:Body><web:getSupportProvince/></soapenv:Body></soapenv:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'shouke': 2016, 'success': 'value'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409151807 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:18:07,388 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:18:07,388 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:18:07", case_exec_history_id="20170409151807" WHERE executed_history_id = 20170409151806 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:18:07,391 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:18:07,391 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 403: Forbidden\n')])
2017-04-09 15:18:07,391 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:21:08,542 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:21:08,542 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:21:08,558 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:21:08,562 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:21:08,628 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:21:08,628 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:21:08,630 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:21:08,630 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:21:08,632 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:21:08,635 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:21:08,635 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:21:08,636 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:21:08,944 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_login': 'admin', 'testsuite_id': '65', 'estimated_exec_duration': '', 'modification_ts': '2017-04-09 15:21:04', 'name': '获取天气服务', 'version': '1', 'updater_login': 'admin', 'execution_type': '1', 'is_open': '1', 'updater_id': '1', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'summary': '', 'author_id': '1', 'active': '1', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator', 'tc_external_id': '12', 'layout': '1', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span></p>\n<p>\n\t&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1'}], 'id': '67', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'status': '1', 'author_first_name': 'Testlink'}]
2017-04-09 15:21:09,304 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:21:09,305 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:21:09,305 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:21:09,787 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:21:09,787 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152108', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:21:09,789 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:21:09,789 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:21:09,789 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:21:09,790 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:21:09,790 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152109', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:21:09,792 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 108 (char 107),停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:21:09,792 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 15:21:09,792 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 108 (char 107)", protocol_method="未获取到", runtime="2017-04-09 15:21:09" WHERE executed_history_id = 20170409152109 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 15:21:09,793 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:21:09,794 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:21:09", case_exec_history_id="20170409152109" WHERE executed_history_id = 20170409152108 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:21:09,795 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:21:09,796 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 108 (char 107),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 15:21:09,796 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:22:10,071 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:22:10,071 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:22:10,087 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:22:10,091 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:22:10,154 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:22:10,155 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:22:10,156 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:22:10,156 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:22:10,158 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:22:10,160 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:22:10,160 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:22:10,160 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:22:10,485 global_function.py[line: 18] INFO: 获取测试用例信息 [{'name': '获取天气服务', 'is_open': '1', 'summary': '', 'status': '1', 'steps': [{'execution_type': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'execution_type': '1', 'author_id': '1', 'layout': '1', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'id': '67', 'updater_id': '1', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'testcase_id': '66', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'node_order': '1000', 'testsuite_id': '65', 'author_login': 'admin', 'importance': '2', 'preconditions': '<p>\n\t读取上级配置</p>\n', 'version': '1', 'full_tc_external_id': 'tc-12', 'tc_external_id': '12', 'modification_ts': '2017-04-09 15:22:06', 'updater_first_name': 'Testlink'}]
2017-04-09 15:22:10,858 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:22:10,858 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:22:10,859 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:22:11,316 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:22:11,316 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152210', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:22:11,318 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:22:11,319 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:22:11,319 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:22:11,319 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:22:11,319 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152211', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:22:11,321 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:22:11,321 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:22:11,322 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:22:11,322 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:22:11,322 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:22:11,323 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:22:11,323 httpprotocol.py[line: 82] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/WebServices/WeatherWebService.asmx
2017-04-09 15:22:11,323 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:22:11,323 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 15:22:23,331 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：<urlopen error [Errno 11004] getaddrinfo failed>,正在进行第二次尝试
2017-04-09 15:22:23,477 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 403: Forbidden
2017-04-09 15:22:23,480 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:22:23,481 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:22:23,481 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 403: Forbidden", protocol_method="post", runtime="2017-04-09 15:22:11",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'success': 'value', 'shouke': 2016}}], '检查': 'body', '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409152211 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:22:23,488 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:22:23,489 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:22:11", case_exec_history_id="20170409152211" WHERE executed_history_id = 20170409152210 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:22:23,494 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:22:23,494 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 403: Forbidden\n')])
2017-04-09 15:22:23,495 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:23:13,662 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:23:13,662 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:23:13,676 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:23:13,680 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:23:13,744 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:23:13,744 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:23:13,746 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:23:13,746 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:23:13,748 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:23:13,750 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:23:13,750 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:23:13,750 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:23:13,945 global_function.py[line: 18] INFO: 获取测试用例信息 [{'node_order': '1000', 'updater_id': '1', 'updater_last_name': 'Administrator', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'summary': '', 'active': '1', 'layout': '1', 'version': '1', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'modification_ts': '2017-04-09 15:23:09', 'is_open': '1', 'updater_login': 'admin', 'tc_external_id': '12', 'estimated_exec_duration': '', 'importance': '2', 'status': '1', 'creation_ts': '2016-04-06 21:14:49', 'name': '获取天气服务', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'testcase_id': '66', 'author_id': '1', 'id': '67', 'testsuite_id': '65', 'author_login': 'admin', 'full_tc_external_id': 'tc-12', 'execution_type': '1'}]
2017-04-09 15:23:14,339 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:23:14,339 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:23:14,339 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:23:14,817 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:23:14,817 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152313', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:23:14,819 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:23:14,820 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:23:14,820 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:23:15,065 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:23:15,065 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:23:15,065 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:23:15,066 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152314', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:23:15,068 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:23:15,068 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:23:15,068 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:23:15,068 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:23:15,069 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:23:15,069 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:23:15,069 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:23:15,069 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:23:15,069 httpprotocol.py[line: 84] INFO: 请求头为：{}
2017-04-09 15:23:15,221 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：HTTP Error 415: Unsupported Media Type,正在进行第二次尝试
2017-04-09 15:23:15,357 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 415: Unsupported Media Type
2017-04-09 15:23:15,359 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:23:15,359 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:23:15,359 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 415: Unsupported Media Type", protocol_method="post", runtime="2017-04-09 15:23:15",step_action="{'函数': 'test_interface_of_xml', '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'shouke': 2016, 'success': 'value'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409152314 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:23:15,363 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:23:15,363 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:23:14", case_exec_history_id="20170409152314" WHERE executed_history_id = 20170409152313 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:23:15,366 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:23:15,367 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 415: Unsupported Media Type\n')])
2017-04-09 15:23:15,367 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:24:26,508 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:24:26,508 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:24:26,522 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:24:26,526 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:24:26,589 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:24:26,589 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:24:26,592 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:24:26,592 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:24:26,593 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:24:26,596 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:24:26,596 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:24:26,596 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:24:26,861 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_login': 'admin', 'author_last_name': 'Administrator', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'updater_login': 'admin', 'status': '1', 'execution_type': '1', 'author_first_name': 'Testlink', 'steps': [{'step_number': '1', 'active': '1', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:&quot;{&quot;charset&quot;:&quot;utf-8&quot;}&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68'}], 'author_id': '1', 'estimated_exec_duration': '', 'importance': '2', 'updater_last_name': 'Administrator', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'modification_ts': '2017-04-09 15:24:22', 'active': '1', 'updater_id': '1', 'id': '67', 'testsuite_id': '65', 'is_open': '1', 'summary': '', 'updater_first_name': 'Testlink', 'tc_external_id': '12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'name': '获取天气服务', 'version': '1', 'layout': '1'}]
2017-04-09 15:24:27,228 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:24:27,229 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:24:27,229 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:24:27,696 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:24:27,696 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152426', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:24:27,698 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:24:27,699 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:24:27,699 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:24:27,925 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":"{"charset":"utf-8"}","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:24:27,925 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:24:27,926 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:24:27,926 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152427', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":"{"charset":"utf-8"}","方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:24:27,929 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 40 (char 39),停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:24:27,929 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 15:24:27,929 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 40 (char 39)", protocol_method="未获取到", runtime="2017-04-09 15:24:27" WHERE executed_history_id = 20170409152427 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 15:24:27,930 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:24:27,931 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:24:27", case_exec_history_id="20170409152427" WHERE executed_history_id = 20170409152426 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:24:27,932 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:24:27,932 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 40 (char 39),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 15:24:27,932 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:24:44,478 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:24:44,478 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:24:44,492 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:24:44,496 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:24:44,557 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:24:44,557 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:24:44,559 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:24:44,560 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:24:44,561 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:24:44,563 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:24:44,563 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:24:44,564 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:24:44,842 global_function.py[line: 18] INFO: 获取测试用例信息 [{'version': '1', 'updater_last_name': 'Administrator', 'name': '获取天气服务', 'importance': '2', 'author_login': 'admin', 'is_open': '1', 'execution_type': '1', 'node_order': '1000', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'steps': [{'id': '68', 'active': '1', 'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:&quot;{&quot;charset&quot;:&quot;utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1'}], 'author_last_name': 'Administrator', 'id': '67', 'active': '1', 'tc_external_id': '12', 'estimated_exec_duration': '', 'testcase_id': '66', 'status': '1', 'author_first_name': 'Testlink', 'summary': '', 'testsuite_id': '65', 'author_id': '1', 'modification_ts': '2017-04-09 15:24:41', 'creation_ts': '2016-04-06 21:14:49', 'updater_id': '1', 'updater_login': 'admin', 'layout': '1', 'full_tc_external_id': 'tc-12'}]
2017-04-09 15:24:45,200 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:24:45,200 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:24:45,200 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:24:45,680 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:24:45,680 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152444', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:24:45,682 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:24:45,682 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:24:45,682 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:24:45,883 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":"{"charset":"utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:24:45,884 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:24:45,884 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:24:45,884 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152445', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":"{"charset":"utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:24:45,886 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 40 (char 39),停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:24:45,887 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 15:24:45,887 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 40 (char 39)", protocol_method="未获取到", runtime="2017-04-09 15:24:45" WHERE executed_history_id = 20170409152445 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 15:24:45,889 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:24:45,889 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:24:45", case_exec_history_id="20170409152445" WHERE executed_history_id = 20170409152444 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:24:45,891 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:24:45,891 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 40 (char 39),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 15:24:45,891 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:25:02,913 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:25:02,914 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:25:02,929 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:25:02,933 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:25:03,003 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:25:03,003 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:25:03,005 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:25:03,006 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:25:03,008 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:25:03,010 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:25:03,010 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:25:03,010 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:25:03,208 global_function.py[line: 18] INFO: 获取测试用例信息 [{'execution_type': '1', 'steps': [{'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;charset&quot;:&quot;utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68'}], 'modification_ts': '2017-04-09 15:24:59', 'layout': '1', 'updater_last_name': 'Administrator', 'author_login': 'admin', 'author_last_name': 'Administrator', 'node_order': '1000', 'testcase_id': '66', 'updater_id': '1', 'estimated_exec_duration': '', 'status': '1', 'id': '67', 'author_id': '1', 'full_tc_external_id': 'tc-12', 'is_open': '1', 'summary': '', 'updater_first_name': 'Testlink', 'importance': '2', 'testsuite_id': '65', 'name': '获取天气服务', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'version': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_first_name': 'Testlink', 'updater_login': 'admin', 'tc_external_id': '12'}]
2017-04-09 15:25:03,645 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:25:03,646 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:25:03,646 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:25:04,115 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:25:04,115 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152502', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:25:04,117 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:25:04,117 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:25:04,117 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:25:04,412 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"charset":"utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:25:04,412 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:25:04,412 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:25:04,413 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152504', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"charset":"utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:25:04,415 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:25:04,415 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:25:04,415 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:25:04,416 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:25:04,416 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:25:04,416 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:25:04,416 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:25:04,417 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:25:04,417 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:25:04,417 httpprotocol.py[line: 84] INFO: 请求头为：{'charset': 'utf-8'}
2017-04-09 15:25:04,538 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：HTTP Error 415: Unsupported Media Type,正在进行第二次尝试
2017-04-09 15:25:04,694 httpprotocol.py[line: 100] ERROR: 发送请求失败，原因：HTTP Error 415: Unsupported Media Type
2017-04-09 15:25:04,695 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:25:04,696 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:25:04,696 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 165, in test_interface_of_xml    self.assertEqual(1, 0, msg=%s % response[1])AssertionError: 1 != 0 : HTTP Error 415: Unsupported Media Type", protocol_method="post", runtime="2017-04-09 15:25:04",step_action="{'函数': 'test_interface_of_xml', '请求头': {'charset': 'utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'success': 'value', 'shouke': 2016}}]}" WHERE executed_history_id = 20170409152504 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:25:04,698 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:25:04,698 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:25:04", case_exec_history_id="20170409152504" WHERE executed_history_id = 20170409152502 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:25:04,700 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:25:04,700 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 165, in test_interface_of_xml\n    self.assertEqual(1, 0, msg=\'%s\' % response[1])\nAssertionError: 1 != 0 : HTTP Error 415: Unsupported Media Type\n')])
2017-04-09 15:25:04,700 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:26:03,548 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:26:03,548 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:26:03,563 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:26:03,566 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:26:03,628 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:26:03,628 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:26:03,630 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:26:03,630 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:26:03,631 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:26:03,633 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:26:03,634 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:26:03,634 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:26:03,942 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'full_tc_external_id': 'tc-12', 'tc_external_id': '12', 'author_login': 'admin', 'id': '67', 'testcase_id': '66', 'status': '1', 'modification_ts': '2017-04-09 15:25:59', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'is_open': '1', 'name': '获取天气服务', 'steps': [{'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;&quot;text/xml; charset=utf-8&quot;&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1'}], 'layout': '1', 'node_order': '1000', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'estimated_exec_duration': '', 'updater_login': 'admin', 'updater_id': '1', 'updater_last_name': 'Administrator', 'summary': '', 'author_id': '1', 'version': '1', 'testsuite_id': '65', 'importance': '2', 'execution_type': '1'}]
2017-04-09 15:26:04,281 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:26:04,281 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:26:04,281 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:26:04,727 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:26:04,727 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152603', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:26:04,729 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:26:04,729 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:26:04,729 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:26:04,898 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":""text/xml; charset=utf-8""},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:26:04,898 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:26:04,898 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:26:04,898 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152604', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":""text/xml; charset=utf-8""},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:26:04,901 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 55 (char 54),停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:26:04,901 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 15:26:04,902 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 55 (char 54)", protocol_method="未获取到", runtime="2017-04-09 15:26:04" WHERE executed_history_id = 20170409152604 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 15:26:04,903 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:26:04,903 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:26:04", case_exec_history_id="20170409152604" WHERE executed_history_id = 20170409152603 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:26:04,905 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:26:04,905 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 55 (char 54),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 15:26:04,905 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:26:22,891 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:26:22,891 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:26:22,907 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:26:22,910 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:26:22,976 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:26:22,977 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:26:22,979 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:26:22,979 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:26:22,980 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:26:22,983 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:26:22,983 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:26:22,983 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:26:23,186 global_function.py[line: 18] INFO: 获取测试用例信息 [{'summary': '', 'creation_ts': '2016-04-06 21:14:49', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_first_name': 'Testlink', 'execution_type': '1', 'author_last_name': 'Administrator', 'author_login': 'admin', 'name': '获取天气服务', 'updater_login': 'admin', 'version': '1', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'updater_id': '1', 'testsuite_id': '65', 'layout': '1', 'tc_external_id': '12', 'testcase_id': '66', 'importance': '2', 'is_open': '1', 'updater_last_name': 'Administrator', 'id': '67', 'status': '1', 'full_tc_external_id': 'tc-12', 'author_id': '1', 'author_first_name': 'Testlink', 'active': '1', 'modification_ts': '2017-04-09 15:26:18', 'estimated_exec_duration': ''}]
2017-04-09 15:26:23,624 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:26:23,624 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:26:23,624 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:26:24,086 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:26:24,086 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152622', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:26:24,088 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:26:24,088 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:26:24,088 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:26:24,254 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8""},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:26:24,254 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:26:24,255 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:26:24,255 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152624', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8""},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:26:24,257 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 78 (char 77),停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:26:24,257 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 15:26:24,257 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 78 (char 77)", protocol_method="未获取到", runtime="2017-04-09 15:26:24" WHERE executed_history_id = 20170409152624 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 15:26:24,259 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:26:24,259 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:26:24", case_exec_history_id="20170409152624" WHERE executed_history_id = 20170409152622 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:26:24,260 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:26:24,260 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 78 (char 77),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 15:26:24,261 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:26:37,043 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:26:37,043 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:26:37,059 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:26:37,062 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:26:37,125 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:26:37,125 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:26:37,127 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:26:37,128 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:26:37,129 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:26:37,131 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:26:37,131 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:26:37,132 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:26:37,307 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_last_name': 'Administrator', 'id': '67', 'version': '1', 'full_tc_external_id': 'tc-12', 'importance': '2', 'modification_ts': '2017-04-09 15:26:33', 'creation_ts': '2016-04-06 21:14:49', 'estimated_exec_duration': '', 'testsuite_id': '65', 'author_login': 'admin', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'layout': '1', 'updater_id': '1', 'updater_login': 'admin', 'updater_first_name': 'Testlink', 'node_order': '1000', 'name': '获取天气服务', 'execution_type': '1', 'is_open': '1', 'author_id': '1', 'tc_external_id': '12', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'id': '68', 'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'summary': '', 'active': '1', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'testcase_id': '66', 'status': '1'}]
2017-04-09 15:26:37,681 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:26:37,681 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:26:37,681 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:26:38,140 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:26:38,141 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152637', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:26:38,144 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:26:38,144 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:26:38,144 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:26:38,316 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:26:38,316 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:26:38,316 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:26:38,316 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152638', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:26:38,321 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:26:38,321 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:26:38,322 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:26:38,322 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:26:38,322 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:26:38,323 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:26:38,323 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:26:38,324 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:26:38,324 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:26:38,324 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:26:38,630 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:26:38,631 InterfaceUnittestTestCase.py[line: 182] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 15:26:38,631 InterfaceUnittestTestCase.py[line: 183] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:26:39 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:26:38,631 InterfaceUnittestTestCase.py[line: 184] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:26:38,712 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:26:38,713 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 15:26:38,713 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 193, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 230, in assert_result    pattern_dic = eval(item[模式])TypeError: eval() arg 1 must be a string, bytes or code object", protocol_method="post", runtime="2017-04-09 15:26:38",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'success': 'value', 'shouke': 2016}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409152638 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 15:26:38,721 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:26:38,722 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:26:38", case_exec_history_id="20170409152638" WHERE executed_history_id = 20170409152637 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:26:38,728 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:26:38,729 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 193, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 230, in assert_result\n    pattern_dic = eval(item[\'模式\'])\nTypeError: eval() arg 1 must be a string, bytes or code object\n')])
2017-04-09 15:26:38,729 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:29:04,131 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:29:04,132 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:29:04,146 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:29:04,150 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:29:04,220 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:29:04,220 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:29:04,222 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:29:04,223 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:29:04,224 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:29:04,226 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:29:04,226 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:29:04,227 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:29:04,466 global_function.py[line: 18] INFO: 获取测试用例信息 [{'testsuite_id': '65', 'estimated_exec_duration': '', 'updater_id': '1', 'updater_login': 'admin', 'updater_first_name': 'Testlink', 'author_login': 'admin', 'summary': '', 'layout': '1', 'updater_last_name': 'Administrator', 'version': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'modification_ts': '2017-04-09 15:26:33', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'importance': '2', 'tc_external_id': '12', 'id': '67', 'active': '1', 'author_id': '1', 'testcase_id': '66', 'status': '1', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'steps': [{'execution_type': '1', 'id': '68', 'active': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'execution_type': '1', 'node_order': '1000', 'name': '获取天气服务', 'is_open': '1'}]
2017-04-09 15:29:04,850 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:29:04,850 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:29:04,850 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:29:05,305 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:29:05,305 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152904', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:29:05,307 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:29:05,307 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:29:05,307 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:29:05,492 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:29:05,492 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:29:05,492 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:29:05,492 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152905', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:29:05,495 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:29:05,495 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:29:05,495 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:05,495 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:05,495 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:05,496 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:05,496 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:29:05,496 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:29:05,496 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:29:05,497 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:29:05,888 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:29:05,889 InterfaceUnittestTestCase.py[line: 182] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 15:29:05,889 InterfaceUnittestTestCase.py[line: 183] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:29:07 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:29:05,889 InterfaceUnittestTestCase.py[line: 184] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:29:05,889 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'shouke': 2016, 'success': 'value'}
2017-04-09 15:29:05,889 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:29:05,890 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:29:05,890 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 15:29:05,890 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:29:05,890 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：shouke
2017-04-09 15:29:05,891 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 15:29:05,891 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:29:05,892 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:29:05,893 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 15:29:05,893 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 193, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 278, in assert_result    self.asssertEqual(content_to_check, expect_value, msg=item[消息])AttributeError: InterfaceUnittestTestCase object has no attribute asssertEqual", protocol_method="post", runtime="2017-04-09 15:29:05",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'shouke': 2016, 'success': 'value'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409152905 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 15:29:05,895 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:29:05,896 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:29:05", case_exec_history_id="20170409152905" WHERE executed_history_id = 20170409152904 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:29:05,897 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:29:05,898 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 193, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 278, in assert_result\n    self.asssertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAttributeError: \'InterfaceUnittestTestCase\' object has no attribute \'asssertEqual\'\n')])
2017-04-09 15:29:05,898 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:29:44,529 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:29:44,530 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:29:44,545 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:29:44,549 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:29:44,612 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:29:44,612 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:29:44,615 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:29:44,615 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:29:44,616 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:29:44,619 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:29:44,619 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:29:44,619 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:29:44,888 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'active': '1', 'modification_ts': '2017-04-09 15:26:33', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'author_login': 'admin', 'updater_id': '1', 'author_id': '1', 'steps': [{'active': '1', 'step_number': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'id': '67', 'summary': '', 'status': '1', 'creation_ts': '2016-04-06 21:14:49', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'estimated_exec_duration': '', 'execution_type': '1', 'updater_login': 'admin', 'layout': '1', 'version': '1', 'author_first_name': 'Testlink', 'testsuite_id': '65', 'updater_last_name': 'Administrator', 'importance': '2', 'is_open': '1', 'testcase_id': '66', 'tc_external_id': '12', 'author_last_name': 'Administrator'}]
2017-04-09 15:29:45,291 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:29:45,292 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:29:45,292 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:29:45,780 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:29:45,899 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152944', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:29:45,904 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:29:45,905 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:29:45,905 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:29:46,142 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:29:46,143 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:29:46,143 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:29:46,143 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409152945', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:29:46,145 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:29:46,146 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:29:46,146 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:46,146 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:46,146 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:46,147 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:29:46,147 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:29:46,147 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:29:46,147 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:29:46,147 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:29:46,533 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:29:46,533 InterfaceUnittestTestCase.py[line: 182] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 15:29:46,533 InterfaceUnittestTestCase.py[line: 183] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:29:47 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:29:46,533 InterfaceUnittestTestCase.py[line: 184] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:29:46,534 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'shouke': 2016, 'success': 'value'}
2017-04-09 15:29:46,534 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:29:46,534 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:29:46,535 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 15:29:46,535 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:29:46,535 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：shouke
2017-04-09 15:29:46,535 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 15:29:46,536 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:29:46,537 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:29:46,537 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:29:46,537 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 193, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 278, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 2016 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 15:29:46",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'shouke': 2016, 'success': 'value'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409152945 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:29:46,540 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:29:46,540 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:29:45", case_exec_history_id="20170409152945" WHERE executed_history_id = 20170409152944 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:29:46,542 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:29:46,542 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 193, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 278, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != 2016 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 15:29:46,542 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:32:37,424 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:32:37,425 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:32:37,440 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:32:37,443 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:32:37,512 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:32:37,512 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:32:37,514 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:32:37,514 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:32:37,516 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:32:37,518 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:32:37,519 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:32:37,519 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:32:37,779 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_last_name': 'Administrator', 'name': '获取天气服务', 'estimated_exec_duration': '', 'status': '1', 'author_login': 'admin', 'version': '1', 'updater_first_name': 'Testlink', 'is_open': '1', 'execution_type': '1', 'node_order': '1000', 'updater_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'tc_external_id': '12', 'id': '67', 'active': '1', 'steps': [{'execution_type': '1', 'id': '68', 'active': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:&quot;value&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'testcase_id': '66', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'importance': '2', 'summary': '', 'testsuite_id': '65', 'author_id': '1', 'updater_id': '1', 'modification_ts': '2017-04-09 15:26:33', 'author_last_name': 'Administrator', 'layout': '1'}]
2017-04-09 15:32:38,144 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:32:38,144 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:32:38,144 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:32:38,609 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:32:38,609 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153237', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:32:38,611 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:32:38,611 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:32:38,611 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:32:38,805 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:32:38,805 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:32:38,805 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:32:38,805 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153238', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"success":"value","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:32:38,808 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:32:38,808 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:32:38,808 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:32:38,808 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:32:38,809 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:32:38,809 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:32:38,809 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:32:38,809 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:32:38,810 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:32:38,810 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:32:39,192 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:32:39,193 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:32:39,193 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:32:40 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:32:39,193 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:32:39,193 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'shouke': 2016, 'success': 'value'}
2017-04-09 15:32:39,194 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:32:39,196 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:32:39,196 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 15:32:39,196 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 244, in assert_result    logger.info(xmlns定义为：% % xmlns)ValueError: incomplete format", protocol_method="post", runtime="2017-04-09 15:32:38",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'shouke': 2016, 'success': 'value'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409153238 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 15:32:39,198 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:32:39,198 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:32:38", case_exec_history_id="20170409153238" WHERE executed_history_id = 20170409153237 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:32:39,199 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:32:39,199 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 244, in assert_result\n    logger.info(\'xmlns定义为：%\' % xmlns)\nValueError: incomplete format\n')])
2017-04-09 15:32:39,199 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:35:34,127 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:35:34,127 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:35:34,144 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:35:34,148 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:36:23,679 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:36:23,680 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:36:23,694 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:36:23,699 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:36:23,774 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:36:23,775 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:36:23,779 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:36:23,779 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:36:23,781 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:36:23,783 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:36:23,783 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:36:23,783 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:36:23,985 global_function.py[line: 18] INFO: 获取测试用例信息 [{'full_tc_external_id': 'tc-12', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'status': '1', 'author_first_name': 'Testlink', 'author_id': '1', 'updater_login': 'admin', 'version': '1', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'active': '1', 'tc_external_id': '12', 'layout': '1', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;shouke&quot;:2016}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1'}], 'is_open': '1', 'author_last_name': 'Administrator', 'id': '67', 'updater_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_login': 'admin', 'testsuite_id': '65', 'estimated_exec_duration': '', 'modification_ts': '2017-04-09 15:35:30', 'execution_type': '1', 'summary': ''}]
2017-04-09 15:36:24,522 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:36:24,522 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:36:24,522 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:36:25,031 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:36:25,031 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153623', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:36:25,033 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:36:25,033 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:36:25,033 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:36:25,292 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:36:25,292 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith":"1.00","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:36:25,292 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:36:25,293 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153625', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith":"1.00","shouke":2016}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:36:25,295 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:36:25,295 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:36:25,295 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:36:25,296 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:36:25,296 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:36:25,296 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'shouke': 2016, './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 15:36:25,296 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:36:25,297 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:36:25,297 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:36:25,297 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:36:25,297 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:36:25,693 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:36:25,693 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:36:25,693 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:36:26 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:36:25,694 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:36:25,694 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'shouke': 2016, './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00'}
2017-04-09 15:36:25,694 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:36:25,694 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:36:25,695 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:36:25,695 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 15:36:25,695 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:36:25,695 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：shouke
2017-04-09 15:36:25,695 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 15:36:25,695 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:36:25,697 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:36:25,697 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:36:25,697 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 278, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 2016 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 15:36:25",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'模式': {'shouke': 2016, './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409153625 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:36:25,699 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:36:25,699 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:36:25", case_exec_history_id="20170409153625" WHERE executed_history_id = 20170409153623 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:36:25,701 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:36:25,701 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 278, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != 2016 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 15:36:25,701 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:38:07,038 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:38:07,038 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:38:07,053 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:38:07,056 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:38:07,124 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:38:07,124 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:38:07,126 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:38:07,126 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:38:07,127 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:38:07,130 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:38:07,130 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:38:07,130 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:38:07,332 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_login': 'admin', 'testsuite_id': '65', 'estimated_exec_duration': '', 'author_login': 'admin', 'updater_id': '1', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'importance': '2', 'author_last_name': 'Administrator', 'author_id': '1', 'id': '67', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'version': '1', 'creation_ts': '2016-04-06 21:14:49', 'updater_first_name': 'Testlink', 'execution_type': '1', 'active': '1', 'tc_external_id': '12', 'layout': '1', 'summary': '', 'is_open': '1', 'testcase_id': '66', 'status': '1', 'updater_last_name': 'Administrator', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlsn:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'modification_ts': '2017-04-09 15:37:59', 'author_first_name': 'Testlink'}]
2017-04-09 15:38:07,690 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:38:07,690 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:38:07,690 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:38:08,169 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:38:08,170 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153807', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:38:08,171 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:38:08,172 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:38:08,172 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:38:08,357 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:38:08,358 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlsn:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:38:08,358 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:38:08,358 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153808', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlsn:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:38:08,360 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:38:08,361 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:38:08,361 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:38:08,361 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:38:08,361 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[0]
2017-04-09 15:38:08,362 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:38:08,362 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlsn:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 15:38:08,362 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:38:08,362 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:38:08,363 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:38:08,363 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:38:08,363 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:38:08,754 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:38:08,754 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:38:08,755 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:38:09 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:38:08,755 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:38:08,755 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlsn:orderCode': 'DDT201704071952057186'}
2017-04-09 15:38:08,757 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:38:08,757 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:38:08,757 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:38:08,758 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 15:38:08,758 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:38:08,758 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/xmlsn:copeWith
2017-04-09 15:38:08,758 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlsn' not found in prefix map
2017-04-09 15:38:08,825 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:38:08,825 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 15:38:08,827 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/xmlsn:copeWithDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 269, in iterfind    token = next()  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 83, in xpath_tokenizer    raise SyntaxError(prefix %r not found in prefix map % prefix)  File <string>, line NoneSyntaxError: prefix xmlsn not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.asssertEqual(1, 0, msg=%s % e)AttributeError: InterfaceUnittestTestCase object has no attribute asssertEqual", protocol_method="post", runtime="2017-04-09 15:38:08",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlsn:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409153808 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 15:38:08,834 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:38:08,835 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:38:08", case_exec_history_id="20170409153808" WHERE executed_history_id = 20170409153807 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:38:08,839 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:38:08,840 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/xmlsn:copeWith\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 269, in iterfind\n    token = next()\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 83, in xpath_tokenizer\n    raise SyntaxError("prefix %r not found in prefix map" % prefix)\n  File "<string>", line None\nSyntaxError: prefix \'xmlsn\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.asssertEqual(1, 0, msg=\'%s\' % e)\nAttributeError: \'InterfaceUnittestTestCase\' object has no attribute \'asssertEqual\'\n')])
2017-04-09 15:38:08,841 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:39:15,572 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:39:15,572 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:39:15,588 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:39:15,592 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:39:15,664 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:39:15,665 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:39:15,667 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:39:15,667 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:39:15,668 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:39:15,670 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:39:15,670 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:39:15,670 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:39:15,877 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'testcase_id': '66', 'id': '67', 'estimated_exec_duration': '', 'author_login': 'admin', 'version': '1', 'author_last_name': 'Administrator', 'node_order': '1000', 'layout': '1', 'updater_last_name': 'Administrator', 'updater_id': '1', 'execution_type': '1', 'modification_ts': '2017-04-09 15:39:12', 'status': '1', 'updater_login': 'admin', 'active': '1', 'full_tc_external_id': 'tc-12', 'creation_ts': '2016-04-06 21:14:49', 'tc_external_id': '12', 'importance': '2', 'author_first_name': 'Testlink', 'testsuite_id': '65', 'name': '获取天气服务', 'is_open': '1', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'author_id': '1', 'updater_first_name': 'Testlink', 'summary': ''}]
2017-04-09 15:39:16,382 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:39:16,382 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:39:16,382 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:39:16,836 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:39:16,836 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153915', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:39:16,838 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:39:16,838 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:39:16,838 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:39:17,019 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:39:17,020 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:39:17,020 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:39:17,020 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153916', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:39:17,023 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:39:17,024 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:39:17,024 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:39:17,024 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:39:17,024 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:39:17,024 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[0]
2017-04-09 15:39:17,025 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}}]
2017-04-09 15:39:17,025 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:39:17,025 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:39:17,025 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:39:17,025 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:39:17,026 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:39:17,404 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:39:17,404 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:39:17,404 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:39:18 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:39:17,405 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:39:17,405 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 15:39:17,407 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:39:17,407 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:39:17,407 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:39:17,408 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}'}
2017-04-09 15:39:17,408 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:39:17,408 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/xmlsn:copeWith
2017-04-09 15:39:17,408 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlsn' not found in prefix map
2017-04-09 15:39:17,411 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:39:17,411 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:39:17,411 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/xmlsn:copeWithDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlsn not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlsn not found in prefix map", protocol_method="post", runtime="2017-04-09 15:39:17",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlsn:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}}], '检查': 'body', '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409153916 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:39:17,417 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:39:17,417 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:39:16", case_exec_history_id="20170409153916" WHERE executed_history_id = 20170409153915 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:39:17,419 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:39:17,419 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/xmlsn:copeWith\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlsn\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlsn\' not found in prefix map\n')])
2017-04-09 15:39:17,420 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:39:46,218 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:39:46,218 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:39:46,233 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:39:46,237 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:39:46,300 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:39:46,301 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:39:46,302 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:39:46,303 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:39:46,304 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:39:46,307 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:39:46,307 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:39:46,307 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:39:46,602 global_function.py[line: 18] INFO: 获取测试用例信息 [{'version': '1', 'author_first_name': 'Testlink', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'tc_external_id': '12', 'full_tc_external_id': 'tc-12', 'updater_login': 'admin', 'status': '1', 'updater_id': '1', 'steps': [{'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1'}], 'summary': '', 'updater_first_name': 'Testlink', 'author_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'is_open': '1', 'testsuite_id': '65', 'name': '获取天气服务', 'updater_last_name': 'Administrator', 'importance': '2', 'author_last_name': 'Administrator', 'node_order': '1000', 'estimated_exec_duration': '', 'author_login': 'admin', 'id': '67', 'testcase_id': '66', 'modification_ts': '2017-04-09 15:39:38', 'execution_type': '1', 'layout': '1'}]
2017-04-09 15:39:46,946 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:39:46,946 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:39:46,946 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:39:47,422 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:39:47,422 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153946', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:39:47,424 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:39:47,425 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:39:47,425 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:39:47,613 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:39:47,614 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:39:47,614 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:39:47,614 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409153947', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:39:47,617 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:39:47,617 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:39:47,618 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:39:47,618 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:39:47,618 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[0]
2017-04-09 15:39:47,618 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:39:47,619 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 15:39:47,619 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:39:47,619 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:39:47,619 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:39:47,619 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:39:47,620 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:39:47,959 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:39:47,960 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:39:47,960 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:39:49 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:39:47,960 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:39:47,960 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 15:39:47,963 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:39:47,963 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:39:47,963 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:39:47,964 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 15:39:47,964 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:39:47,964 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 15:39:47,965 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x032C9930>]
2017-04-09 15:39:47,965 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:39:47,966 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:39:47,966 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 15:39:47,966 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 278, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])UnboundLocalError: local variable expect_value referenced before assignment", protocol_method="post", runtime="2017-04-09 15:39:47",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409153947 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 15:39:47,969 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:39:47,969 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:39:47", case_exec_history_id="20170409153947" WHERE executed_history_id = 20170409153946 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:39:47,971 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:39:47,971 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 278, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nUnboundLocalError: local variable \'expect_value\' referenced before assignment\n')])
2017-04-09 15:39:47,971 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:40:15,765 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:40:15,765 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:40:15,780 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:40:15,784 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:40:15,855 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:40:15,855 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:40:15,857 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:40:15,858 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:40:15,860 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:40:15,862 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:40:15,862 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:40:15,862 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:40:16,061 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'version': '1', 'full_tc_external_id': 'tc-12', 'modification_ts': '2017-04-09 15:39:38', 'author_first_name': 'Testlink', 'tc_external_id': '12', 'node_order': '1000', 'testsuite_id': '65', 'author_login': 'admin', 'importance': '2', 'updater_first_name': 'Testlink', 'layout': '1', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'steps': [{'execution_type': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'id': '67', 'updater_id': '1', 'author_last_name': 'Administrator', 'active': '1', 'testcase_id': '66', 'estimated_exec_duration': '', 'name': '获取天气服务', 'is_open': '1', 'status': '1', 'execution_type': '1', 'author_id': '1', 'summary': '', 'creation_ts': '2016-04-06 21:14:49'}]
2017-04-09 15:40:16,393 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:40:16,393 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:40:16,393 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:40:16,859 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:40:16,859 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154015', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:40:16,861 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:40:16,861 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:40:16,861 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:40:17,049 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:40:17,050 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:40:17,050 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:40:17,050 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154016', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:40:17,052 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:40:17,052 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:40:17,053 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:40:17,053 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:40:17,053 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[0]
2017-04-09 15:40:17,053 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:40:17,053 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}]
2017-04-09 15:40:17,054 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:40:17,054 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:40:17,054 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:40:17,054 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:40:17,055 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:40:17,473 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:40:17,473 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:40:17,474 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:40:18 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:40:17,474 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:40:17,474 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 15:40:17,478 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:40:17,478 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:40:17,479 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:40:17,479 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}'}
2017-04-09 15:40:17,479 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:40:17,479 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[0]/{http://xxx.com}orderCode
2017-04-09 15:40:17,480 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x0327E450>]
2017-04-09 15:40:17,480 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:40:17,482 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:40:17,482 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:40:17,482 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 278, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError: DDT201704071845403738 != DDT201704071952057186- DDT201704071845403738+ DDT201704071952057186 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 15:40:17",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409154016 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:40:17,484 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:40:17,484 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:40:16", case_exec_history_id="20170409154016" WHERE executed_history_id = 20170409154015 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:40:17,486 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:40:17,486 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 278, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'DDT201704071845403738\' != \'DDT201704071952057186\'\n- DDT201704071845403738\n+ DDT201704071952057186\n : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 15:40:17,486 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:44:12,504 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:44:12,504 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:44:12,519 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:44:12,523 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:44:12,594 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:44:12,594 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:44:12,597 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:44:12,597 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:44:12,600 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:44:12,602 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:44:12,602 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:44:12,602 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:44:12,824 global_function.py[line: 18] INFO: 获取测试用例信息 [{'id': '67', 'testsuite_id': '65', 'author_login': 'admin', 'importance': '2', 'creation_ts': '2016-04-06 21:14:49', 'author_first_name': 'Testlink', 'tc_external_id': '12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'version': '1', 'updater_id': '1', 'steps': [{'step_number': '1', 'active': '1', 'id': '68', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'author_id': '1', 'is_open': '1', 'summary': '', 'active': '1', 'status': '1', 'node_order': '1000', 'estimated_exec_duration': '', 'layout': '1', 'execution_type': '1', 'author_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'modification_ts': '2017-04-09 15:39:38', 'testcase_id': '66'}]
2017-04-09 15:44:13,267 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:44:13,267 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:44:13,267 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:44:13,714 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:44:13,714 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154412', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:44:13,716 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:44:13,716 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:44:13,716 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:44:13,895 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:44:13,895 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:44:13,895 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:44:13,895 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154413', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:44:13,898 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:44:13,898 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:44:13,898 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:44:13,899 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:44:13,899 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:44:13,899 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[0]
2017-04-09 15:44:13,899 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}}]
2017-04-09 15:44:13,899 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:44:13,900 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:44:13,900 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:44:13,900 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:44:13,900 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:44:14,238 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:44:14,238 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:44:14,239 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:44:15 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:44:14,239 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:44:14,239 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 15:44:14,242 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:44:14,242 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:44:14,242 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:44:14,243 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 15:44:14,243 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:44:14,243 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 15:44:14,243 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x031EDFC0>]
2017-04-09 15:44:14,244 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:44:14,244 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:44:14,244 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:44:14,244 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:44:14,244 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 15:44:14,244 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:44:14,244 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[0]/{http://xxx.com}orderCode
2017-04-09 15:44:14,245 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x031E6450>]
2017-04-09 15:44:14,245 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:44:14,246 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:44:14,247 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:44:14,247 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError: DDT201704071845403738 != DDT201704071952057186- DDT201704071845403738+ DDT201704071952057186 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 15:44:13",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409154413 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:44:14,249 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:44:14,249 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:44:13", case_exec_history_id="20170409154413" WHERE executed_history_id = 20170409154412 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:44:14,250 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:44:14,251 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'DDT201704071845403738\' != \'DDT201704071952057186\'\n- DDT201704071845403738\n+ DDT201704071952057186\n : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 15:44:14,251 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:44:37,021 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:44:37,022 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:44:37,038 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:44:37,043 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:44:37,109 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:44:37,109 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:44:37,111 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:44:37,111 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:44:37,114 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:44:37,116 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:44:37,116 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:44:37,116 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:44:37,322 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'layout': '1', 'node_order': '1000', 'author_last_name': 'Administrator', 'author_login': 'admin', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'execution_type': '1', 'is_open': '1', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'creation_ts': '2016-04-06 21:14:49', 'status': '1', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'id': '67', 'active': '1', 'modification_ts': '2017-04-09 15:39:38', 'updater_first_name': 'Testlink', 'summary': '', 'updater_id': '1', 'estimated_exec_duration': '', 'tc_external_id': '12', 'testsuite_id': '65', 'author_id': '1', 'testcase_id': '66', 'importance': '2', 'updater_last_name': 'Administrator', 'version': '1'}]
2017-04-09 15:44:37,661 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:44:37,661 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:44:37,661 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:44:38,110 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:44:38,110 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154437', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:44:38,112 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:44:38,112 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:44:38,112 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:44:38,305 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:44:38,306 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:44:38,306 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:44:38,306 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154438', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:44:38,308 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:44:38,308 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:44:38,309 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:44:38,309 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:44:38,309 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:44:38,309 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[0]
2017-04-09 15:44:38,310 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}}]
2017-04-09 15:44:38,310 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:44:38,310 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:44:38,310 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:44:38,311 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:44:38,311 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:44:38,614 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:44:38,615 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:44:38,615 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:44:39 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:44:38,615 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:44:38,615 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 15:44:38,617 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:44:38,617 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:44:38,617 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:44:38,618 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 15:44:38,618 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:44:38,618 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 15:44:38,618 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x032D3FC0>]
2017-04-09 15:44:38,618 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:44:38,619 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 15:44:38,619 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 15:44:38,619 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:44:38,619 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:44:38,619 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:44:38,619 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 15:44:38,619 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:44:38,619 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[0]/{http://xxx.com}orderCode
2017-04-09 15:44:38,620 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x032CC450>]
2017-04-09 15:44:38,620 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:44:38,620 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 15:44:38,620 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 15:44:38,622 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:44:38,622 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:44:38,622 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError: DDT201704071845403738 != DDT201704071952057186- DDT201704071845403738+ DDT201704071952057186 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 15:44:38",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[0]/xmlns:orderCode': 'DDT201704071952057186'}}]}" WHERE executed_history_id = 20170409154438 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:44:38,625 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:44:38,625 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:44:38", case_exec_history_id="20170409154438" WHERE executed_history_id = 20170409154437 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:44:38,626 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:44:38,627 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'DDT201704071845403738\' != \'DDT201704071952057186\'\n- DDT201704071845403738\n+ DDT201704071952057186\n : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 15:44:38,627 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:46:58,700 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:46:58,700 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:46:58,715 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:46:58,719 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:46:58,786 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:46:58,786 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:46:58,788 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:46:58,788 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:46:58,789 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:46:58,791 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:46:58,791 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:46:58,792 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:46:58,979 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'tc_external_id': '12', 'author_last_name': 'Administrator', 'updater_last_name': 'Administrator', 'modification_ts': '2017-04-09 15:46:54', 'estimated_exec_duration': '', 'testsuite_id': '65', 'summary': '', 'active': '1', 'execution_type': '1', 'updater_login': 'admin', 'id': '67', 'status': '1', 'full_tc_external_id': 'tc-12', 'is_open': '1', 'importance': '2', 'layout': '1', 'node_order': '1000', 'version': '1', 'author_login': 'admin', 'author_id': '1', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_id': '1', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'name': '获取天气服务', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1', 'execution_type': '1'}]}]
2017-04-09 15:46:59,348 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:46:59,348 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:46:59,348 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:46:59,799 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:46:59,799 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154658', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:46:59,801 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:46:59,801 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:46:59,801 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:46:59,984 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:46:59,984 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:46:59,984 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:46:59,985 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409154659', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:46:59,987 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:46:59,987 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:46:59,987 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:46:59,988 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:46:59,988 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 15:46:59,988 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:46:59,988 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}]
2017-04-09 15:46:59,988 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:46:59,989 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:46:59,989 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:46:59,989 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:46:59,989 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:47:00,358 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:47:00,358 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 15:47:00,359 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:47:01 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:47:00,359 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:47:00,359 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 15:47:00,361 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:47:00,361 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 15:47:00,361 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:47:00,362 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}'}
2017-04-09 15:47:00,362 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:47:00,362 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 15:47:00,362 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x034CC810>]
2017-04-09 15:47:00,362 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 15:47:00,362 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 15:47:00,363 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 15:47:00,364 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:47:00,364 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:47:00,365 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError: DDT201704071945408575 != DDT201704071952057186- DDT201704071945408575?              - ^ -  ^+ DDT201704071952057186?               ^   ^^^ : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 15:46:59",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409154659 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:47:00,367 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:47:00,367 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:46:59", case_exec_history_id="20170409154659" WHERE executed_history_id = 20170409154658 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:47:00,368 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:47:00,369 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'DDT201704071945408575\' != \'DDT201704071952057186\'\n- DDT201704071945408575\n?              - ^ -  ^\n+ DDT201704071952057186\n?               ^   ^^^\n : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 15:47:00,369 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:53:46,417 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:53:46,418 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:53:46,434 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:53:46,438 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:53:46,514 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:53:46,515 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:53:46,519 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:53:46,520 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:53:46,522 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:53:46,524 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:53:46,524 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:53:46,524 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:53:46,804 global_function.py[line: 18] INFO: 获取测试用例信息 [{'creation_ts': '2016-04-06 21:14:49', 'testsuite_id': '65', 'id': '67', 'active': '1', 'author_first_name': 'Testlink', 'updater_first_name': 'Testlink', 'updater_id': '1', 'estimated_exec_duration': '', 'node_order': '1000', 'updater_login': 'admin', 'testcase_id': '66', 'author_id': '1', 'importance': '2', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'author_last_name': 'Administrator', 'status': '1', 'modification_ts': '2017-04-09 15:46:54', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'summary': '', 'author_login': 'admin', 'tc_external_id': '12', 'execution_type': '1', 'is_open': '1', 'updater_last_name': 'Administrator', 'layout': '1', 'version': '1'}]
2017-04-09 15:53:47,199 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:53:47,199 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:53:47,199 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:53:47,667 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:53:47,667 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409155346', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:53:47,669 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:53:47,670 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:53:47,670 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:53:47,874 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:53:47,875 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:53:47,875 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:53:47,875 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409155347', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:53:47,880 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:53:47,880 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:53:47,881 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:53:47,881 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:53:47,881 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:53:47,881 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 15:53:47,882 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}}]
2017-04-09 15:53:47,882 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:53:47,882 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:53:47,883 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:53:47,883 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:53:47,884 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:53:48,346 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:53:48,348 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:53:48,348 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 15:53:48,348 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 247, in test_interface_of_xml    body = body.decode(unicode_escape)AttributeError: str object has no attribute decode", protocol_method="post", runtime="2017-04-09 15:53:47",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}}]}" WHERE executed_history_id = 20170409155347 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 15:53:48,350 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:53:48,350 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 15:53:47", case_exec_history_id="20170409155347" WHERE executed_history_id = 20170409155346 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:53:48,352 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:53:48,352 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 247, in test_interface_of_xml\n    body = body.decode(\'unicode_escape\')\nAttributeError: \'str\' object has no attribute \'decode\'\n')])
2017-04-09 15:53:48,352 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 15:57:36,055 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 15:57:36,055 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 15:57:36,069 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 15:57:36,073 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 15:57:36,143 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 15:57:36,143 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 15:57:36,145 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 15:57:36,145 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 15:57:36,147 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 15:57:36,149 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 15:57:36,149 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 15:57:36,149 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 15:57:36,362 global_function.py[line: 18] INFO: 获取测试用例信息 [{'is_open': '1', 'status': '1', 'author_last_name': 'Administrator', 'creation_ts': '2016-04-06 21:14:49', 'testsuite_id': '65', 'id': '67', 'author_id': '1', 'steps': [{'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:</span><span style="color:#008000;font-weight:bold;">copeWith</span>&quot;:&quot;1.00&quot;,&quot;<span style="color:#008000;font-weight:bold;">./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:</span>orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'active': '1', 'step_number': '1'}], 'active': '1', 'name': '获取天气服务', 'updater_login': 'admin', 'tc_external_id': '12', 'execution_type': '1', 'modification_ts': '2017-04-09 15:46:54', 'importance': '2', 'version': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'updater_last_name': 'Administrator', 'author_login': 'admin', 'estimated_exec_duration': '', 'updater_first_name': 'Testlink', 'layout': '1', 'author_first_name': 'Testlink', 'updater_id': '1', 'summary': '', 'full_tc_external_id': 'tc-12', 'testcase_id': '66'}]
2017-04-09 15:57:36,787 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 15:57:36,787 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 15:57:36,787 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 15:57:37,278 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 15:57:37,279 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409155736', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 15:57:37,280 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 15:57:37,280 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 15:57:37,281 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 15:57:37,478 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 15:57:37,478 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 15:57:37,479 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 15:57:37,479 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409155737', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 15:57:37,481 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 15:57:37,481 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 15:57:37,482 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:57:37,482 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:57:37,483 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 15:57:37,483 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 15:57:37,483 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 15:57:37,484 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 15:57:37,484 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 15:57:37,484 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 15:57:37,485 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 15:57:37,485 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 15:57:37,854 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 15:57:37,854 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 15:57:37,855 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 07:57:39 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 15:57:37,855 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 15:57:37,855 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 15:57:37,855 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 15:57:37,856 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 15:57:37,856 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 15:57:37,856 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 15:57:37,856 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 15:57:37,856 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'ns1' not found in prefix map
2017-04-09 15:57:37,922 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 15:57:37,922 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 15:57:37,923 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWithDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix ns1 not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix ns1 not found in prefix map", protocol_method="post", runtime="2017-04-09 15:57:37",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409155737 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 15:57:37,928 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 15:57:37,928 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 15:57:37", case_exec_history_id="20170409155737" WHERE executed_history_id = 20170409155736 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 15:57:37,931 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 15:57:37,931 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'ns1\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'ns1\' not found in prefix map\n')])
2017-04-09 15:57:37,931 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:00:47,693 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:00:47,693 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:00:47,708 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:00:47,712 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:00:47,778 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:00:47,779 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:00:47,780 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:00:47,781 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:00:47,782 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:00:47,785 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:00:47,785 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:00:47,785 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:00:48,005 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'summary': '', 'status': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_last_name': 'Administrator', 'layout': '1', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'node_order': '1000', 'active': '1', 'execution_type': '1', 'steps': [{'step_number': '1', 'active': '1', 'execution_type': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'author_id': '1', 'id': '67', 'is_open': '1', 'estimated_exec_duration': '', 'tc_external_id': '12', 'importance': '2', 'name': '获取天气服务', 'version': '1', 'author_last_name': 'Administrator', 'author_login': 'admin', 'updater_login': 'admin', 'modification_ts': '2017-04-09 16:00:43', 'updater_id': '1', 'full_tc_external_id': 'tc-12', 'author_first_name': 'Testlink', 'testsuite_id': '65'}]
2017-04-09 16:00:48,386 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:00:48,386 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:00:48,386 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:00:48,840 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:00:48,840 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160047', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:00:48,842 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:00:48,842 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:00:48,843 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:00:49,049 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:00:49,050 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:00:49,050 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:00:49,050 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160048', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:00:49,067 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:00:49,067 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:00:49,068 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:00:49,068 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:00:49,068 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:00:49,068 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:00:49,068 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:00:49,069 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:00:49,069 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:00:49,069 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:00:49,069 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:00:49,070 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:00:49,413 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:00:49,414 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:00:49,414 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:00:50 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:00:49,414 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:00:49,414 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 16:00:49,414 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:00:49,415 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:00:49,415 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:00:49,415 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:00:49,416 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:00:49,416 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:00:49,419 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:00:49,419 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:00:49,420 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:00:49",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409160048 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:00:49,422 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:00:49,423 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:00:48", case_exec_history_id="20170409160048" WHERE executed_history_id = 20170409160047 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:00:49,425 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:00:49,425 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:00:49,425 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:04:26,081 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:04:26,082 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:04:26,095 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:04:26,103 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:04:26,296 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:04:26,297 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:04:26,305 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:04:26,306 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:04:26,312 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:04:26,325 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:04:26,326 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:04:26,327 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:04:26,632 global_function.py[line: 18] INFO: 获取测试用例信息 [{'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'id': '68', 'active': '1', 'execution_type': '1'}], 'active': '1', 'is_open': '1', 'author_login': 'admin', 'layout': '1', 'execution_type': '1', 'modification_ts': '2017-04-09 16:00:43', 'testcase_id': '66', 'author_first_name': 'Testlink', 'author_id': '1', 'tc_external_id': '12', 'id': '67', 'testsuite_id': '65', 'updater_id': '1', 'summary': '', 'estimated_exec_duration': '', 'version': '1', 'importance': '2', 'full_tc_external_id': 'tc-12', 'status': '1', 'creation_ts': '2016-04-06 21:14:49', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'author_last_name': 'Administrator'}]
2017-04-09 16:04:27,082 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:04:27,083 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:04:27,084 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:04:27,644 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:04:27,645 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160426', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:04:27,650 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:04:27,650 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:04:27,651 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:04:27,860 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:04:27,862 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:04:27,863 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:04:27,864 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160427', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:04:27,870 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:04:27,871 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:04:27,872 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:04:27,873 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:04:27,875 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:04:27,875 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:04:27,876 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:04:27,878 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:04:27,880 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:04:27,882 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:04:27,882 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:04:27,883 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:04:28,405 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:04:28,406 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:04:28,406 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:04:29 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:04:28,407 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:04:28,409 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:04:32,444 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:06:02,636 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:06:02,636 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:06:02,652 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:06:02,657 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:06:02,728 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:06:02,729 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:06:02,730 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:06:02,730 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:06:02,732 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:06:02,734 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:06:02,735 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:06:02,735 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:06:02,953 global_function.py[line: 18] INFO: 获取测试用例信息 [{'importance': '2', 'is_open': '1', 'modification_ts': '2017-04-09 16:00:43', 'name': '获取天气服务', 'author_last_name': 'Administrator', 'full_tc_external_id': 'tc-12', 'author_login': 'admin', 'status': '1', 'updater_login': 'admin', 'author_id': '1', 'updater_last_name': 'Administrator', 'summary': '', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'active': '1', 'step_number': '1', 'id': '68', 'execution_type': '1'}], 'creation_ts': '2016-04-06 21:14:49', 'testsuite_id': '65', 'node_order': '1000', 'version': '1', 'execution_type': '1', 'layout': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_first_name': 'Testlink', 'testcase_id': '66', 'updater_id': '1', 'estimated_exec_duration': '', 'updater_first_name': 'Testlink', 'active': '1', 'id': '67', 'tc_external_id': '12'}]
2017-04-09 16:06:03,345 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:06:03,346 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:06:03,346 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:06:03,827 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:06:03,828 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160602', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:06:03,829 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:06:03,829 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:06:03,829 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:06:04,011 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:06:04,011 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:06:04,012 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:06:04,012 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160603', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:06:04,017 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:06:04,018 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:06:04,018 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:04,018 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:04,018 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:06:04,018 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:06:04,019 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:06:04,019 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:04,019 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:06:04,020 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:06:04,020 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:06:04,020 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:06:04,343 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:06:04,343 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:06:04,343 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:06:05 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:06:04,343 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:06:04,344 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:06:04,344 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:06:04,387 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:06:04,387 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 16:06:04,387 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 239, in assert_result    match_result_list = re.findall(xmlns[^:]*=(*+?) , response_to_check)  File D:\Program Files (x86)\python33\lib\re.py, line 201, in findall    return _compile(pattern, flags).findall(string)  File D:\Program Files (x86)\python33\lib\re.py, line 281, in _compile    p = sre_compile.compile(pattern, flags)  File D:\Program Files (x86)\python33\lib\sre_compile.py, line 494, in compile    p = sre_parse.parse(p, flags)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 748, in parse    p = _parse_sub(source, pattern, 0)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 696, in _parse    p = _parse_sub(source, state)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 569, in _parse    raise error(nothing to repeat)sre_constants.error: nothing to repeat", protocol_method="post", runtime="2017-04-09 16:06:04",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409160603 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 16:06:04,390 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:06:04,390 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 16:06:03", case_exec_history_id="20170409160603" WHERE executed_history_id = 20170409160602 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:06:04,392 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:06:04,393 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 239, in assert_result\n    match_result_list = re.findall(\'xmlns[^:]*=(*+?) \', response_to_check)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 201, in findall\n    return _compile(pattern, flags).findall(string)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 281, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_compile.py", line 494, in compile\n    p = sre_parse.parse(p, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 748, in parse\n    p = _parse_sub(source, pattern, 0)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 696, in _parse\n    p = _parse_sub(source, state)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 569, in _parse\n    raise error("nothing to repeat")\nsre_constants.error: nothing to repeat\n')])
2017-04-09 16:06:04,393 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:06:28,556 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:06:28,557 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:06:28,573 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:06:28,577 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:06:28,645 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:06:28,645 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:06:28,647 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:06:28,647 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:06:28,649 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:06:28,651 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:06:28,652 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:06:28,652 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:06:28,869 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_id': '1', 'active': '1', 'node_order': '1000', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'author_id': '1', 'updater_last_name': 'Administrator', 'testcase_id': '66', 'updater_first_name': 'Testlink', 'estimated_exec_duration': '', 'tc_external_id': '12', 'id': '67', 'layout': '1', 'execution_type': '1', 'author_first_name': 'Testlink', 'version': '1', 'is_open': '1', 'importance': '2', 'status': '1', 'author_login': 'admin', 'updater_login': 'admin', 'modification_ts': '2017-04-09 16:00:43', 'creation_ts': '2016-04-06 21:14:49', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'summary': '', 'testsuite_id': '65', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_last_name': 'Administrator'}]
2017-04-09 16:06:29,267 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:06:29,267 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:06:29,267 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:06:29,742 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:06:29,743 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160628', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:06:29,744 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:06:29,745 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:06:29,745 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:06:29,926 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:06:29,927 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:06:29,927 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:06:29,927 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160629', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:06:29,929 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:06:29,929 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:06:29,930 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:29,930 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:29,930 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:06:29,930 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:06:29,930 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:06:29,931 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:29,931 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:06:29,931 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:06:29,931 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:06:29,931 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:06:30,243 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:06:30,244 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:06:30,244 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:06:31 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:06:30,244 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:06:30,244 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 16:06:30,245 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:06:30,247 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:06:30,249 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 16:06:30,249 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 239, in assert_result    match_result_list = re.findall(xmlns[^:]*=(*?) , response_to_check)  File D:\Program Files (x86)\python33\lib\re.py, line 201, in findall    return _compile(pattern, flags).findall(string)  File D:\Program Files (x86)\python33\lib\re.py, line 281, in _compile    p = sre_compile.compile(pattern, flags)  File D:\Program Files (x86)\python33\lib\sre_compile.py, line 494, in compile    p = sre_parse.parse(p, flags)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 748, in parse    p = _parse_sub(source, pattern, 0)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 696, in _parse    p = _parse_sub(source, state)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 569, in _parse    raise error(nothing to repeat)sre_constants.error: nothing to repeat", protocol_method="post", runtime="2017-04-09 16:06:29",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409160629 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 16:06:30,251 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:06:30,252 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 16:06:29", case_exec_history_id="20170409160629" WHERE executed_history_id = 20170409160628 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:06:30,254 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:06:30,254 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 239, in assert_result\n    match_result_list = re.findall(\'xmlns[^:]*=(*?) \', response_to_check)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 201, in findall\n    return _compile(pattern, flags).findall(string)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 281, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_compile.py", line 494, in compile\n    p = sre_parse.parse(p, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 748, in parse\n    p = _parse_sub(source, pattern, 0)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 696, in _parse\n    p = _parse_sub(source, state)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 569, in _parse\n    raise error("nothing to repeat")\nsre_constants.error: nothing to repeat\n')])
2017-04-09 16:06:30,254 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:06:42,931 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:06:42,931 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:06:42,946 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:06:42,951 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:06:43,021 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:06:43,021 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:06:43,023 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:06:43,023 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:06:43,024 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:06:43,026 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:06:43,026 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:06:43,027 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:06:43,214 global_function.py[line: 18] INFO: 获取测试用例信息 [{'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'summary': '', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator', 'execution_type': '1', 'author_login': 'admin', 'name': '获取天气服务', 'importance': '2', 'modification_ts': '2017-04-09 16:00:43', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'step_number': '1', 'execution_type': '1', 'active': '1'}], 'updater_login': 'admin', 'version': '1', 'author_first_name': 'Testlink', 'layout': '1', 'updater_id': '1', 'testsuite_id': '65', 'is_open': '1', 'tc_external_id': '12', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'author_id': '1', 'id': '67', 'status': '1', 'updater_first_name': 'Testlink', 'estimated_exec_duration': '', 'active': '1'}]
2017-04-09 16:06:43,589 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:06:43,589 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:06:43,589 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:06:44,075 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:06:44,075 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160642', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:06:44,077 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:06:44,077 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:06:44,077 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:06:44,255 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:06:44,255 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:06:44,255 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:06:44,255 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160644', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:06:44,257 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:06:44,257 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:06:44,258 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:44,258 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:44,258 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:06:44,258 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:06:44,258 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:06:44,259 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:44,259 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:06:44,259 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:06:44,260 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:06:44,260 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:06:44,725 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:06:44,725 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:06:44,725 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:06:45 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:06:44,725 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:06:44,726 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:06:44,726 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:06:44,729 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:06:44,729 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 16:06:44,729 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 239, in assert_result    match_result_list = re.findall(xmlns[^:]*=(*) , response_to_check)  File D:\Program Files (x86)\python33\lib\re.py, line 201, in findall    return _compile(pattern, flags).findall(string)  File D:\Program Files (x86)\python33\lib\re.py, line 281, in _compile    p = sre_compile.compile(pattern, flags)  File D:\Program Files (x86)\python33\lib\sre_compile.py, line 494, in compile    p = sre_parse.parse(p, flags)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 748, in parse    p = _parse_sub(source, pattern, 0)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 696, in _parse    p = _parse_sub(source, state)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 569, in _parse    raise error(nothing to repeat)sre_constants.error: nothing to repeat", protocol_method="post", runtime="2017-04-09 16:06:44",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409160644 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 16:06:44,738 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:06:44,738 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 16:06:44", case_exec_history_id="20170409160644" WHERE executed_history_id = 20170409160642 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:06:44,740 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:06:44,740 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 239, in assert_result\n    match_result_list = re.findall(\'xmlns[^:]*=(*) \', response_to_check)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 201, in findall\n    return _compile(pattern, flags).findall(string)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 281, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_compile.py", line 494, in compile\n    p = sre_parse.parse(p, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 748, in parse\n    p = _parse_sub(source, pattern, 0)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 696, in _parse\n    p = _parse_sub(source, state)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 569, in _parse\n    raise error("nothing to repeat")\nsre_constants.error: nothing to repeat\n')])
2017-04-09 16:06:44,740 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:06:58,346 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:06:58,347 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:06:58,361 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:06:58,365 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:06:58,434 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:06:58,435 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:06:58,436 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:06:58,437 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:06:58,438 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:06:58,440 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:06:58,440 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:06:58,441 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:06:58,633 global_function.py[line: 18] INFO: 获取测试用例信息 [{'node_order': '1000', 'summary': '', 'layout': '1', 'author_first_name': 'Testlink', 'updater_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:00:43', 'version': '1', 'tc_external_id': '12', 'creation_ts': '2016-04-06 21:14:49', 'author_login': 'admin', 'is_open': '1', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1'}], 'execution_type': '1', 'active': '1', 'updater_login': 'admin', 'author_last_name': 'Administrator', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'importance': '2', 'status': '1', 'testcase_id': '66', 'estimated_exec_duration': '', 'testsuite_id': '65', 'id': '67', 'updater_last_name': 'Administrator', 'author_id': '1', 'updater_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n'}]
2017-04-09 16:06:59,018 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:06:59,018 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:06:59,019 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:06:59,492 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:06:59,493 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160658', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:06:59,495 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:06:59,495 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:06:59,495 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:06:59,673 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:06:59,673 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:06:59,673 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:06:59,673 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160659', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:06:59,675 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:06:59,676 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:06:59,676 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:59,676 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:59,676 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:06:59,676 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:06:59,677 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:06:59,677 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:06:59,677 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:06:59,677 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:06:59,678 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:06:59,678 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:06:59,998 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:06:59,999 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:07:00,000 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:07:01 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:07:00,000 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:07:00,000 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:07:00,000 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:07:00,001 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:07:00,001 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:07:00,001 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:07:00,002 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 16:07:00,002 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'ns1' not found in prefix map
2017-04-09 16:07:00,004 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:07:00,004 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:07:00,004 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCodeDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix ns1 not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix ns1 not found in prefix map", protocol_method="post", runtime="2017-04-09 16:06:59",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409160659 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:07:00,010 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:07:00,010 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:06:59", case_exec_history_id="20170409160659" WHERE executed_history_id = 20170409160658 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:07:00,011 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:07:00,012 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'ns1\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'ns1\' not found in prefix map\n')])
2017-04-09 16:07:00,012 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:07:44,314 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:07:44,314 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:07:44,330 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:07:44,335 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:07:44,404 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:07:44,405 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:07:44,407 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:07:44,407 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:07:44,408 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:07:44,411 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:07:44,411 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:07:44,411 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:07:44,621 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_login': 'admin', 'author_login': 'admin', 'active': '1', 'updater_last_name': 'Administrator', 'modification_ts': '2017-04-09 16:00:43', 'steps': [{'step_number': '1', 'active': '1', 'id': '68', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'testsuite_id': '65', 'version': '1', 'importance': '2', 'testcase_id': '66', 'author_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'estimated_exec_duration': '', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'updater_id': '1', 'layout': '1', 'author_id': '1', 'id': '67', 'tc_external_id': '12', 'summary': '', 'status': '1', 'node_order': '1000', 'creation_ts': '2016-04-06 21:14:49', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'execution_type': '1', 'is_open': '1'}]
2017-04-09 16:07:44,971 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:07:44,971 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:07:44,971 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:07:45,443 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:07:45,444 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160744', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:07:45,445 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:07:45,445 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:07:45,446 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:07:45,632 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:07:45,632 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:07:45,632 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:07:45,632 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160745', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:07:45,635 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:07:45,635 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:07:45,636 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:07:45,636 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:07:45,636 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:07:45,636 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:07:45,637 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:07:45,637 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:07:45,637 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:07:45,637 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:07:45,638 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:07:45,638 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:07:45,951 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:07:45,951 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:07:45,952 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:07:47 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:07:45,952 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:07:45,952 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:07:45,952 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:07:45,953 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:07:45,953 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:07:45,953 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:07:45,953 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 16:07:45,953 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'ns1' not found in prefix map
2017-04-09 16:07:45,956 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:07:45,956 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:07:45,957 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCodeDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix ns1 not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix ns1 not found in prefix map", protocol_method="post", runtime="2017-04-09 16:07:45",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409160745 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:07:45,959 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:07:45,959 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:07:45", case_exec_history_id="20170409160745" WHERE executed_history_id = 20170409160744 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:07:45,960 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:07:45,961 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'ns1\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'ns1\' not found in prefix map\n')])
2017-04-09 16:07:45,961 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:09:17,783 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:09:17,784 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:09:17,801 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:09:17,805 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:09:17,888 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:09:17,888 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:09:17,890 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:09:17,891 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:09:17,892 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:09:17,896 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:09:17,896 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:09:17,896 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:09:18,114 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'name': '获取天气服务', 'estimated_exec_duration': '', 'is_open': '1', 'importance': '2', 'modification_ts': '2017-04-09 16:00:43', 'full_tc_external_id': 'tc-12', 'author_id': '1', 'summary': '', 'author_last_name': 'Administrator', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'status': '1', 'node_order': '1000', 'execution_type': '1', 'version': '1', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'id': '68', 'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'creation_ts': '2016-04-06 21:14:49', 'testsuite_id': '65', 'tc_external_id': '12', 'id': '67', 'active': '1', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'layout': '1', 'updater_id': '1', 'testcase_id': '66'}]
2017-04-09 16:09:18,530 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:09:18,530 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:09:18,530 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:09:18,996 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:09:18,997 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160917', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:09:18,998 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:09:18,998 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:09:18,998 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:09:19,178 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:09:19,178 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:09:19,178 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:09:19,179 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409160918', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:09:19,181 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:09:19,182 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:09:19,182 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:09:19,182 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:09:19,182 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 16:09:19,182 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:09:19,183 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:09:19,183 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:09:19,183 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:09:19,183 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:09:19,184 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:09:19,184 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:09:19,506 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:09:19,506 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:09:19,506 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:09:20 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:09:19,506 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:09:19,507 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:09:19,507 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:09:19,507 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:09:19,508 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:09:19,508 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:09:19,508 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 16:09:19,508 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'ns1' not found in prefix map
2017-04-09 16:09:19,510 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:09:19,511 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:09:19,511 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCodeDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix ns1 not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix ns1 not found in prefix map", protocol_method="post", runtime="2017-04-09 16:09:19",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409160918 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:09:19,517 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:09:19,517 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:09:18", case_exec_history_id="20170409160918" WHERE executed_history_id = 20170409160917 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:09:19,520 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:09:19,520 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'ns1\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'ns1\' not found in prefix map\n')])
2017-04-09 16:09:19,520 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:10:04,689 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:10:04,690 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:10:04,706 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:10:04,710 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:10:04,773 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:10:04,773 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:10:04,774 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:10:04,775 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:10:04,776 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:10:04,778 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:10:04,778 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:10:04,778 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:10:04,979 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_first_name': 'Testlink', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'execution_type': '1', 'active': '1'}], 'testcase_id': '66', 'modification_ts': '2017-04-09 16:09:59', 'status': '1', 'tc_external_id': '12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'estimated_exec_duration': '', 'id': '67', 'updater_login': 'admin', 'version': '1', 'updater_first_name': 'Testlink', 'execution_type': '1', 'creation_ts': '2016-04-06 21:14:49', 'author_login': 'admin', 'full_tc_external_id': 'tc-12', 'updater_last_name': 'Administrator', 'name': '获取天气服务', 'layout': '1', 'summary': '', 'author_last_name': 'Administrator', 'importance': '2', 'author_id': '1', 'active': '1', 'node_order': '1000', 'testsuite_id': '65', 'updater_id': '1', 'is_open': '1'}]
2017-04-09 16:10:05,528 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:10:05,528 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:10:05,528 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:10:05,996 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:10:05,996 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161004', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:10:05,998 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:10:05,998 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:10:05,998 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:10:06,168 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:10:06,168 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:10:06,169 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:10:06,169 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161005', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区", "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:10:06,171 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 173 (char 172),停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:10:06,172 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 16:10:06,172 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting ',' delimiter: line 1 column 173 (char 172)", protocol_method="post", runtime="2017-04-09 16:10:06" WHERE executed_history_id = 20170409161005 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 16:10:06,174 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:10:06,174 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 16:10:05", case_exec_history_id="20170409161005" WHERE executed_history_id = 20170409161004 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:10:06,175 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:10:06,175 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', "步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 173 (char 172),停止执行用例[id=66, name=获取天气服务]")])
2017-04-09 16:10:06,176 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:10:40,652 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:10:40,652 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:10:40,668 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:10:40,672 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:10:40,738 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:10:40,738 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:10:40,740 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:10:40,741 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:10:40,745 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:10:40,748 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:10:40,748 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:10:40,748 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:10:40,941 global_function.py[line: 18] INFO: 获取测试用例信息 [{'node_order': '1000', 'updater_login': 'admin', 'status': '1', 'author_login': 'admin', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'steps': [{'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'execution_type': '1'}], 'author_id': '1', 'execution_type': '1', 'updater_first_name': 'Testlink', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'importance': '2', 'modification_ts': '2017-04-09 16:10:36', 'active': '1', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'id': '67', 'testsuite_id': '65', 'updater_id': '1', 'tc_external_id': '12', 'is_open': '1', 'summary': '', 'full_tc_external_id': 'tc-12', 'version': '1', 'layout': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'name': '获取天气服务'}]
2017-04-09 16:10:41,285 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:10:41,285 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:10:41,285 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:10:41,738 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:10:41,739 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161040', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:10:41,741 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:10:41,741 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:10:41,742 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:10:41,913 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:10:41,914 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:10:41,914 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:10:41,914 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161041', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:10:41,916 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:10:41,917 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:10:41,917 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:10:41,917 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:10:41,917 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:10:41,918 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:10:41,918 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:10:41,918 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:10:41,918 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:10:41,918 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:10:41,919 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:10:42,249 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:10:42,249 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:10:42,249 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:10:43 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:10:42,249 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:10:42,250 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:10:42,250 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:10:42,250 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:10:42,251 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 16:10:42,251 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:10:42,251 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:10:42,251 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:10:42,253 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:10:42,253 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:10:42,253 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:10:41",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409161041 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:10:42,260 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:10:42,260 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:10:41", case_exec_history_id="20170409161041" WHERE executed_history_id = 20170409161040 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:10:42,261 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:10:42,261 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:10:42,261 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:13:33,398 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:13:33,398 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:13:33,415 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:13:33,420 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:13:33,490 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:13:33,490 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:13:33,492 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:13:33,493 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:13:33,495 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:13:33,497 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:13:33,497 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:13:33,497 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:13:33,903 global_function.py[line: 18] INFO: 获取测试用例信息 [{'node_order': '1000', 'id': '67', 'status': '1', 'author_login': 'admin', 'testcase_id': '66', 'estimated_exec_duration': '', 'steps': [{'step_number': '1', 'id': '68', 'active': '1', 'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'author_id': '1', 'importance': '2', 'active': '1', 'name': '获取天气服务', 'updater_login': 'admin', 'updater_id': '1', 'version': '1', 'testsuite_id': '65', 'tc_external_id': '12', 'full_tc_external_id': 'tc-12', 'creation_ts': '2016-04-06 21:14:49', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_first_name': 'Testlink', 'layout': '1', 'execution_type': '1', 'summary': '', 'modification_ts': '2017-04-09 16:10:36', 'author_last_name': 'Administrator', 'is_open': '1'}]
2017-04-09 16:13:34,255 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:13:34,256 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:13:34,256 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:13:34,730 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:13:34,730 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161333', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:13:34,732 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:13:34,733 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:13:34,733 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:13:34,904 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:13:34,904 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:13:34,905 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:13:34,905 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161334', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:13:34,907 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:13:34,907 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:13:34,908 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:13:34,908 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:13:34,908 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:13:34,908 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:13:34,908 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:13:34,909 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:13:34,909 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:13:34,909 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:13:34,909 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:13:35,259 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:13:35,259 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:13:35,259 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:13:36 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:13:35,259 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:13:35,260 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:13:35,260 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:13:35,260 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:13:35,261 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 16:13:35,261 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:13:35,261 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:13:35,261 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:13:35,264 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:13:35,264 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:13:35,264 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:13:34",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409161334 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:13:35,266 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:13:35,267 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:13:34", case_exec_history_id="20170409161334" WHERE executed_history_id = 20170409161333 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:13:35,268 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:13:35,268 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:13:35,268 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:15:11,449 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:15:11,449 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:15:11,467 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:15:11,472 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:15:11,553 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:15:11,553 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:15:11,555 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:15:11,555 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:15:11,557 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:15:11,559 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:15:11,559 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:15:11,559 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:15:11,775 global_function.py[line: 18] INFO: 获取测试用例信息 [{'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'active': '1', 'execution_type': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'id': '67', 'status': '1', 'execution_type': '1', 'node_order': '1000', 'active': '1', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'updater_last_name': 'Administrator', 'author_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'summary': '', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'full_tc_external_id': 'tc-12', 'testsuite_id': '65', 'updater_id': '1', 'updater_login': 'admin', 'modification_ts': '2017-04-09 16:10:36', 'author_login': 'admin', 'author_last_name': 'Administrator', 'version': '1', 'layout': '1', 'name': '获取天气服务', 'importance': '2', 'tc_external_id': '12', 'is_open': '1', 'estimated_exec_duration': ''}]
2017-04-09 16:15:12,168 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:15:12,168 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:15:12,168 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:15:12,722 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:15:12,723 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161511', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:15:12,725 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:15:12,725 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:15:12,725 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:15:12,975 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:15:12,975 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:15:12,976 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:15:12,976 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161512', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:15:12,980 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:15:12,980 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:15:12,980 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:15:12,980 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:15:12,981 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:15:12,981 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:15:12,981 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:15:12,981 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:15:12,981 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:15:12,982 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:15:12,982 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:15:13,380 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:15:13,380 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:15:13,381 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:15:14 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:15:13,381 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:15:13,381 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:15:13,381 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:15:13,382 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:15:13,382 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 16:15:13,382 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:15:13,382 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:15:13,382 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:15:13,385 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:15:13,385 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:15:13,385 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:15:12",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409161512 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:15:13,388 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:15:13,388 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:15:12", case_exec_history_id="20170409161512" WHERE executed_history_id = 20170409161511 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:15:13,390 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:15:13,390 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:15:13,391 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:16:31,114 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:16:31,114 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:16:31,130 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:16:31,135 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:16:31,205 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:16:31,205 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:16:31,207 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:16:31,208 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:16:31,209 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:16:31,211 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:16:31,211 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:16:31,212 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:16:31,412 global_function.py[line: 18] INFO: 获取测试用例信息 [{'tc_external_id': '12', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'is_open': '1', 'execution_type': '1', 'summary': '', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'updater_login': 'admin', 'version': '1', 'importance': '2', 'estimated_exec_duration': '', 'author_last_name': 'Administrator', 'status': '1', 'author_login': 'admin', 'author_id': '1', 'name': '获取天气服务', 'modification_ts': '2017-04-09 16:10:36', 'updater_id': '1', 'testsuite_id': '65', 'updater_first_name': 'Testlink', 'layout': '1', 'author_first_name': 'Testlink', 'active': '1', 'steps': [{'execution_type': '1', 'active': '1', 'step_number': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'id': '67', 'full_tc_external_id': 'tc-12', 'updater_last_name': 'Administrator'}]
2017-04-09 16:16:31,886 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:16:31,887 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:16:31,887 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:16:32,390 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:16:32,390 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161631', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:16:32,392 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:16:32,392 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:16:32,392 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:16:32,578 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:16:32,578 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:16:32,578 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:16:32,578 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161632', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:16:32,580 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:16:32,581 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:16:32,581 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:16:32,581 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:16:32,581 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:16:32,582 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:16:32,582 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:16:32,582 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:16:32,582 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:16:32,582 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:16:32,583 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:16:33,035 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:16:33,035 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:16:33,035 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:16:34 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:16:33,035 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:16:33,036 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:16:33,036 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:16:33,036 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:16:33,036 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:16:33,037 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:16:33,037 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:16:33,037 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:16:33,039 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:16:33,039 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:16:33,039 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:16:32",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409161632 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:16:33,041 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:16:33,042 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:16:32", case_exec_history_id="20170409161632" WHERE executed_history_id = 20170409161631 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:16:33,043 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:16:33,043 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:16:33,043 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:17:26,490 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:17:26,490 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:17:26,505 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:17:26,509 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:17:26,582 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:17:26,583 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:17:26,584 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:17:26,585 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:17:26,586 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:17:26,588 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:17:26,588 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:17:26,588 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:17:26,855 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'updater_last_name': 'Administrator', 'steps': [{'active': '1', 'execution_type': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'summary': '', 'active': '1', 'updater_id': '1', 'node_order': '1000', 'is_open': '1', 'modification_ts': '2017-04-09 16:10:36', 'author_last_name': 'Administrator', 'version': '1', 'full_tc_external_id': 'tc-12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'testcase_id': '66', 'author_id': '1', 'name': '获取天气服务', 'updater_first_name': 'Testlink', 'importance': '2', 'status': '1', 'creation_ts': '2016-04-06 21:14:49', 'updater_login': 'admin', 'tc_external_id': '12', 'estimated_exec_duration': '', 'execution_type': '1', 'author_first_name': 'Testlink', 'id': '67', 'testsuite_id': '65', 'author_login': 'admin'}]
2017-04-09 16:17:27,222 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:17:27,222 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:17:27,222 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:17:27,720 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:17:27,720 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161726', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:17:27,722 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:17:27,722 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:17:27,722 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:17:27,911 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:17:27,911 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:17:27,911 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:17:27,911 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161727', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:17:27,914 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:17:27,914 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:17:27,915 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:17:27,915 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:17:27,915 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:17:27,915 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:17:27,915 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:17:27,916 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:17:27,916 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:17:27,916 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:17:27,916 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:17:28,277 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:17:28,277 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:17:28,277 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:17:29 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:17:28,278 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:17:28,278 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:17:28,278 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:17:28,279 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:17:28,279 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:17:28,279 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:17:28,279 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:17:28,280 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:17:28,283 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:17:28,283 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:17:28,283 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:17:27",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409161727 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:17:28,290 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:17:28,290 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:17:27", case_exec_history_id="20170409161727" WHERE executed_history_id = 20170409161726 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:17:28,292 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:17:28,292 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:17:28,292 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:19:57,130 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:19:57,131 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:19:57,146 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:19:57,150 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:19:57,220 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:19:57,220 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:19:57,222 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:19:57,222 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:19:57,224 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:19:57,226 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:19:57,227 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:19:57,227 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:19:57,431 global_function.py[line: 18] INFO: 获取测试用例信息 [{'importance': '2', 'testsuite_id': '65', 'name': '获取天气服务', 'author_id': '1', 'is_open': '1', 'author_first_name': 'Testlink', 'summary': '', 'updater_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'status': '1', 'full_tc_external_id': 'tc-12', 'updater_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'tc_external_id': '12', 'layout': '1', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'testcase_id': '66', 'execution_type': '1', 'updater_last_name': 'Administrator', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'version': '1', 'updater_id': '1', 'estimated_exec_duration': '', 'author_login': 'admin', 'id': '67', 'author_last_name': 'Administrator', 'node_order': '1000'}]
2017-04-09 16:19:57,797 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:19:57,816 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:19:57,817 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:19:58,278 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:19:58,279 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161957', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:19:58,281 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:19:58,282 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:19:58,282 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:19:58,459 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:19:58,459 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:19:58,460 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:19:58,460 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409161958', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:19:58,462 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:19:58,462 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:19:58,463 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:19:58,463 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:19:58,463 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:19:58,463 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:19:58,463 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:19:58,464 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:19:58,464 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:19:58,464 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:19:58,464 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:19:58,779 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:19:58,779 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:19:58,779 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:19:59 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:19:58,779 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:19:58,780 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:19:58,780 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:19:58,780 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:19:58,781 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:19:58,781 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:19:58,781 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:19:58,781 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:19:58,783 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:19:58,784 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:19:58,784 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:19:58",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]}" WHERE executed_history_id = 20170409161958 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:19:58,857 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:19:58,858 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:19:58", case_exec_history_id="20170409161958" WHERE executed_history_id = 20170409161957 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:19:58,865 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:19:58,866 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:19:58,867 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:38:01,723 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:38:01,723 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:38:01,737 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:38:01,741 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:38:01,908 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:38:01,908 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:38:01,910 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:38:01,910 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:38:01,912 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:38:01,914 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:38:01,915 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:38:01,915 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:38:02,198 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'full_tc_external_id': 'tc-12', 'creation_ts': '2016-04-06 21:14:49', 'modification_ts': '2017-04-09 16:10:36', 'updater_login': 'admin', 'updater_id': '1', 'author_id': '1', 'testsuite_id': '65', 'summary': '', 'version': '1', 'author_first_name': 'Testlink', 'status': '1', 'testcase_id': '66', 'estimated_exec_duration': '', 'updater_first_name': 'Testlink', 'active': '1', 'id': '67', 'tc_external_id': '12', 'author_last_name': 'Administrator', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1'}], 'node_order': '1000', 'is_open': '1', 'execution_type': '1', 'importance': '2', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_login': 'admin', 'name': '获取天气服务', 'updater_last_name': 'Administrator'}]
2017-04-09 16:38:02,565 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:38:02,565 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:38:02,565 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:38:03,084 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:38:03,084 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409163801', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:38:03,086 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:38:03,086 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:38:03,086 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:38:03,272 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:38:03,273 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:38:03,273 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:38:03,273 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409163803', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:38:03,275 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:38:03,275 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:38:03,276 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:38:03,276 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:38:03,276 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:38:03,276 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:38:03,276 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:38:03,277 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:38:03,277 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:38:03,277 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:38:03,277 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:38:03,718 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:38:03,718 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:38:03,718 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:38:04 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:38:03,719 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:38:03,719 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:38:03,719 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:38:03,719 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:38:03,720 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 16:38:03,720 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:38:03,720 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:38:03,720 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:38:03,723 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:38:03,723 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:38:03,723 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:38:03",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '检查': 'body', '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409163803 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:38:03,726 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:38:03,726 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:38:03", case_exec_history_id="20170409163803" WHERE executed_history_id = 20170409163801 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:38:03,728 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:38:03,728 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:38:03,728 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:38:31,126 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:38:31,126 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:38:31,141 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:38:31,145 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:38:31,214 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:38:31,214 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:38:31,216 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:38:31,216 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:38:31,217 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:38:31,219 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:38:31,220 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:38:31,220 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:38:31,419 global_function.py[line: 18] INFO: 获取测试用例信息 [{'status': '1', 'author_last_name': 'Administrator', 'node_order': '1000', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'modification_ts': '2017-04-09 16:10:36', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'version': '1', 'is_open': '1', 'execution_type': '1', 'updater_last_name': 'Administrator', 'summary': '', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'id': '67', 'active': '1', 'updater_first_name': 'Testlink', 'layout': '1', 'updater_id': '1', 'testsuite_id': '65', 'author_first_name': 'Testlink', 'estimated_exec_duration': '', 'author_login': 'admin', 'importance': '2', 'updater_login': 'admin', 'author_id': '1', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'tc_external_id': '12'}]
2017-04-09 16:38:31,911 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:38:31,911 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:38:31,911 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:38:32,398 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:38:32,398 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409163831', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:38:32,401 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:38:32,401 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:38:32,401 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:38:32,606 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:38:32,607 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:38:32,607 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:38:32,608 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409163832', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:38:32,611 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:38:32,611 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:38:32,611 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:38:32,612 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:38:32,612 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:38:32,612 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:38:32,612 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:38:32,613 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:38:32,613 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:38:32,613 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:38:32,613 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:38:33,004 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:38:33,004 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:38:33,004 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:38:34 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:38:33,004 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:38:33,004 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:38:33,005 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:38:33,005 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:38:33,005 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:38:33,005 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:38:33,006 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:38:33,006 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:38:33,008 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:38:33,008 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:38:33,008 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:38:32",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '检查': 'body', '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409163832 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:38:33,014 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:38:33,015 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:38:32", case_exec_history_id="20170409163832" WHERE executed_history_id = 20170409163831 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:38:33,016 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:38:33,016 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:38:33,017 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:39:07,499 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:39:07,500 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:39:07,515 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:39:07,519 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:39:07,591 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:39:07,591 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:39:07,593 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:39:07,593 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:39:07,595 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:39:07,597 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:39:07,597 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:39:07,597 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:39:07,881 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'updater_id': '1', 'version': '1', 'full_tc_external_id': 'tc-12', 'summary': '', 'estimated_exec_duration': '', 'is_open': '1', 'name': '获取天气服务', 'node_order': '1000', 'testsuite_id': '65', 'updater_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'importance': '2', 'creation_ts': '2016-04-06 21:14:49', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'execution_type': '1', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'id': '67', 'author_last_name': 'Administrator', 'active': '1', 'testcase_id': '66', 'steps': [{'execution_type': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'active': '1', 'step_number': '1'}], 'author_first_name': 'Testlink', 'status': '1', 'author_login': 'admin', 'tc_external_id': '12', 'author_id': '1'}]
2017-04-09 16:39:08,270 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:39:08,270 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:39:08,270 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:39:08,753 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:39:08,753 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409163907', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:39:08,755 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:39:08,755 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:39:08,755 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:39:08,953 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:39:08,954 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:39:08,954 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:39:08,954 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409163908', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:39:08,957 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:39:08,957 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:39:08,958 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:39:08,958 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:39:08,958 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:39:08,959 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:39:08,959 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:39:08,960 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:39:08,960 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:39:08,960 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:39:08,960 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:39:09,391 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:39:09,391 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:39:09,391 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:39:10 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:39:09,391 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:39:09,392 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:39:09,392 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:39:09,392 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:39:09,392 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:39:09,393 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:39:09,393 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:39:09,393 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:39:09,396 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:39:09,396 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:39:09,396 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:39:08",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '检查': 'body'}" WHERE executed_history_id = 20170409163908 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:39:09,398 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:39:09,398 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:39:08", case_exec_history_id="20170409163908" WHERE executed_history_id = 20170409163907 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:39:09,400 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:39:09,400 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:39:09,400 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:41:06,884 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:41:06,885 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:41:06,901 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:41:06,905 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:41:07,225 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:41:07,226 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:41:07,229 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:41:07,229 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:41:07,233 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:41:07,236 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:41:07,236 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:41:07,236 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:41:07,481 global_function.py[line: 18] INFO: 获取测试用例信息 [{'testcase_id': '66', 'importance': '2', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'version': '1', 'active': '1', 'tc_external_id': '12', 'full_tc_external_id': 'tc-12', 'modification_ts': '2017-04-09 16:10:36', 'updater_id': '1', 'layout': '1', 'author_last_name': 'Administrator', 'summary': '', 'testsuite_id': '65', 'updater_first_name': 'Testlink', 'author_id': '1', 'status': '1', 'author_login': 'admin', 'is_open': '1', 'updater_last_name': 'Administrator', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'active': '1', 'execution_type': '1', 'step_number': '1'}], 'name': '获取天气服务', 'estimated_exec_duration': '', 'id': '67', 'updater_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'execution_type': '1', 'node_order': '1000'}]
2017-04-09 16:41:07,878 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:41:07,878 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:41:07,878 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:41:08,352 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:41:08,352 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164106', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:41:08,354 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:41:08,354 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:41:08,354 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:41:08,539 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:41:08,539 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:41:08,539 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:41:08,539 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164108', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:41:08,541 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:41:08,542 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:41:08,542 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:41:08,542 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:41:08,542 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:41:08,543 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:41:08,543 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:41:08,543 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:41:08,543 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:41:08,543 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:41:08,544 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:41:08,910 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:41:08,911 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:41:08,911 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:41:10 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:41:08,911 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:41:08,911 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:41:08,911 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:41:08,912 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:41:08,912 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:41:08,912 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:41:08,913 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:41:08,913 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:41:08,945 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:41:08,945 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:41:08,945 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:41:08",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409164108 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:41:08,959 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:41:08,959 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:41:08", case_exec_history_id="20170409164108" WHERE executed_history_id = 20170409164106 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:41:08,969 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:41:08,970 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:41:08,970 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:44:58,118 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:44:58,119 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:44:58,134 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:44:58,138 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:44:58,211 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:44:58,212 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:44:58,214 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:44:58,214 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:44:58,215 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:44:58,217 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:44:58,218 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:44:58,218 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:44:58,493 global_function.py[line: 18] INFO: 获取测试用例信息 [{'testsuite_id': '65', 'id': '67', 'importance': '2', 'full_tc_external_id': 'tc-12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'summary': '', 'version': '1', 'tc_external_id': '12', 'is_open': '1', 'active': '1', 'updater_id': '1', 'author_id': '1', 'author_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'updater_login': 'admin', 'node_order': '1000', 'estimated_exec_duration': '', 'execution_type': '1', 'author_last_name': 'Administrator', 'status': '1', 'name': '获取天气服务', 'testcase_id': '66', 'updater_first_name': 'Testlink', 'layout': '1', 'updater_last_name': 'Administrator', 'author_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'steps': [{'id': '68', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}]}]
2017-04-09 16:44:58,840 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:44:58,841 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:44:58,841 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:44:59,327 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:44:59,328 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164458', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:44:59,329 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:44:59,330 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:44:59,330 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:44:59,505 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:44:59,505 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:44:59,505 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:44:59,505 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164459', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:44:59,508 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:44:59,508 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:44:59,508 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:44:59,508 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:44:59,508 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:44:59,509 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:44:59,509 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:44:59,509 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:44:59,509 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:44:59,510 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:44:59,510 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:44:59,851 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:44:59,851 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:44:59,851 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:45:01 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:44:59,851 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:44:59,852 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:44:59,852 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:44:59,852 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:44:59,853 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:44:59,853 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:44:59,853 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:44:59,853 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:44:59,855 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:44:59,855 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:44:59,856 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:44:59",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409164459 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:44:59,862 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:44:59,862 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:44:59", case_exec_history_id="20170409164459" WHERE executed_history_id = 20170409164458 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:44:59,864 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:44:59,865 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:44:59,865 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:46:09,568 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:46:09,568 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:46:09,582 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:46:09,587 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:46:09,653 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:46:09,654 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:46:09,655 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:46:09,656 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:46:09,658 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:46:09,660 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:46:09,661 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:46:09,661 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:46:09,872 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'is_open': '1', 'status': '1', 'node_order': '1000', 'active': '1', 'summary': '', 'testsuite_id': '65', 'modification_ts': '2017-04-09 16:10:36', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'tc_external_id': '12', 'author_last_name': 'Administrator', 'id': '67', 'name': '获取天气服务', 'steps': [{'step_number': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'updater_id': '1', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_id': '1', 'updater_login': 'admin', 'author_login': 'admin', 'execution_type': '1', 'version': '1', 'importance': '2', 'layout': '1'}]
2017-04-09 16:46:10,263 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:46:10,263 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:46:10,263 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:46:10,740 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:46:10,740 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164609', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:46:10,742 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:46:10,742 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:46:10,742 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:46:10,975 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:46:10,976 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:46:10,976 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:46:10,976 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164610', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:46:10,979 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:46:10,979 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:46:10,980 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:46:10,980 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:46:10,980 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:46:10,980 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:46:10,981 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:46:10,981 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:46:10,981 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:46:10,981 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:46:10,981 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:46:11,376 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:46:11,376 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:46:11,376 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:46:12 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:46:11,377 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:46:11,377 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:46:11,377 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:46:11,378 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:46:11,378 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 16:46:11,378 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:46:11,378 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:46:11,378 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:46:11,380 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:46:11,380 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:46:11,381 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:46:10",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409164610 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:46:11,383 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:46:11,383 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:46:10", case_exec_history_id="20170409164610" WHERE executed_history_id = 20170409164609 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:46:11,385 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:46:11,386 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:46:11,386 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:46:59,256 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:46:59,256 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:46:59,272 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:46:59,276 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:46:59,356 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:46:59,356 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:46:59,358 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:46:59,358 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:46:59,360 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:46:59,362 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:46:59,362 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:46:59,362 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:46:59,567 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'node_order': '1000', 'importance': '2', 'execution_type': '1', 'author_login': 'admin', 'author_id': '1', 'updater_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_first_name': 'Testlink', 'creation_ts': '2016-04-06 21:14:49', 'updater_login': 'admin', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'active': '1', 'step_number': '1'}], 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'version': '1', 'author_last_name': 'Administrator', 'tc_external_id': '12', 'id': '67', 'estimated_exec_duration': '', 'modification_ts': '2017-04-09 16:10:36', 'updater_last_name': 'Administrator', 'summary': '', 'testsuite_id': '65', 'active': '1', 'status': '1', 'is_open': '1', 'updater_first_name': 'Testlink', 'testcase_id': '66'}]
2017-04-09 16:46:59,941 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:46:59,942 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:46:59,942 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:47:00,411 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:47:00,411 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164659', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:47:00,413 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:47:00,413 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:47:00,413 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:47:00,717 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:47:00,717 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:47:00,717 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:47:00,717 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164700', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:47:00,720 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:47:00,720 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:47:00,720 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:47:00,720 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:47:00,721 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:47:00,721 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:47:00,721 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:47:00,722 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:47:00,722 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:47:00,722 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:47:00,722 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:47:01,046 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:47:01,047 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:47:01,047 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:47:02 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:47:01,047 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:47:01,047 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:47:01,047 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:47:01,050 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:47:01,050 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 16:47:01,050 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 239, in assert_result    match_result_list = re.findall(*xmlns[^:]?=(.+) , response_to_check)  File D:\Program Files (x86)\python33\lib\re.py, line 201, in findall    return _compile(pattern, flags).findall(string)  File D:\Program Files (x86)\python33\lib\re.py, line 281, in _compile    p = sre_compile.compile(pattern, flags)  File D:\Program Files (x86)\python33\lib\sre_compile.py, line 494, in compile    p = sre_parse.parse(p, flags)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 748, in parse    p = _parse_sub(source, pattern, 0)  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 360, in _parse_sub    itemsappend(_parse(source, state))  File D:\Program Files (x86)\python33\lib\sre_parse.py, line 569, in _parse    raise error(nothing to repeat)sre_constants.error: nothing to repeat", protocol_method="post", runtime="2017-04-09 16:47:00",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409164700 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 16:47:01,052 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:47:01,053 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 16:47:00", case_exec_history_id="20170409164700" WHERE executed_history_id = 20170409164659 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:47:01,054 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:47:01,054 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 239, in assert_result\n    match_result_list = re.findall(\'*xmlns[^:]?=(.+) \', response_to_check)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 201, in findall\n    return _compile(pattern, flags).findall(string)\n  File "D:\\Program Files (x86)\\python33\\lib\\re.py", line 281, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_compile.py", line 494, in compile\n    p = sre_parse.parse(p, flags)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 748, in parse\n    p = _parse_sub(source, pattern, 0)\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 360, in _parse_sub\n    itemsappend(_parse(source, state))\n  File "D:\\Program Files (x86)\\python33\\lib\\sre_parse.py", line 569, in _parse\n    raise error("nothing to repeat")\nsre_constants.error: nothing to repeat\n')])
2017-04-09 16:47:01,054 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:48:33,752 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:48:33,753 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:48:33,768 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:48:33,772 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:48:33,844 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:48:33,844 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:48:33,846 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:48:33,846 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:48:33,848 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:48:33,850 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:48:33,850 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:48:33,850 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:48:34,044 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_last_name': 'Administrator', 'summary': '', 'author_last_name': 'Administrator', 'is_open': '1', 'testcase_id': '66', 'tc_external_id': '12', 'execution_type': '1', 'steps': [{'active': '1', 'execution_type': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'modification_ts': '2017-04-09 16:10:36', 'author_login': 'admin', 'status': '1', 'importance': '2', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_id': '1', 'author_first_name': 'Testlink', 'testsuite_id': '65', 'node_order': '1000', 'estimated_exec_duration': '', 'updater_id': '1', 'updater_first_name': 'Testlink', 'active': '1', 'updater_login': 'admin', 'id': '67', 'creation_ts': '2016-04-06 21:14:49', 'version': '1', 'layout': '1'}]
2017-04-09 16:48:34,398 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:48:34,399 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:48:34,399 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:48:34,886 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:48:34,886 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164833', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:48:34,888 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:48:34,888 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:48:34,888 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:48:35,077 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:48:35,077 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:48:35,078 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:48:35,078 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409164834', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:48:35,080 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:48:35,081 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:48:35,081 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:48:35,081 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:48:35,082 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:48:35,082 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:48:35,082 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:48:35,082 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:48:35,083 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:48:35,083 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:48:35,083 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:48:35,492 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:48:35,492 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:48:35,492 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:48:36 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:48:35,493 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:48:35,493 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:48:35,493 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:48:35,493 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:48:35,494 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:48:35,494 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:48:35,494 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:48:35,494 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:48:35,496 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:48:35,497 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:48:35,497 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:48:35",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409164834 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:48:35,503 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:48:35,503 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:48:34", case_exec_history_id="20170409164834" WHERE executed_history_id = 20170409164833 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:48:35,504 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:48:35,505 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:48:35,505 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:50:30,669 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:50:30,670 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:50:30,685 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:50:30,694 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:50:30,884 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:50:30,885 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:50:30,888 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:50:30,889 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:50:30,893 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:50:30,900 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:50:30,901 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:50:30,902 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:50:31,114 global_function.py[line: 18] INFO: 获取测试用例信息 [{'steps': [{'execution_type': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'updater_last_name': 'Administrator', 'version': '1', 'is_open': '1', 'testsuite_id': '65', 'author_login': 'admin', 'author_id': '1', 'name': '获取天气服务', 'layout': '1', 'updater_first_name': 'Testlink', 'updater_login': 'admin', 'updater_id': '1', 'tc_external_id': '12', 'estimated_exec_duration': '', 'summary': '', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'id': '67', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-04-06 21:14:49', 'author_first_name': 'Testlink', 'testcase_id': '66', 'full_tc_external_id': 'tc-12', 'execution_type': '1', 'importance': '2', 'modification_ts': '2017-04-09 16:10:36', 'status': '1'}]
2017-04-09 16:50:31,491 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:50:31,492 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:50:31,493 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:50:32,076 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:50:32,077 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165030', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:50:32,081 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:50:32,082 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:50:32,083 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:50:32,282 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:50:32,284 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:50:32,285 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:50:32,286 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165032', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:50:32,295 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:50:32,297 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:50:32,299 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:50:32,300 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:50:32,301 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:50:32,302 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:50:32,303 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:50:32,305 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:50:32,306 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:50:32,307 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:50:32,308 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:50:32,900 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:50:32,901 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:50:32,903 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:50:33 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:50:32,904 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:50:32,905 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:50:32,906 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:51:49,080 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:51:49,080 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:51:49,095 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:51:49,099 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:51:49,174 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:51:49,174 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:51:49,176 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:51:49,176 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:51:49,177 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:51:49,179 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:51:49,180 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:51:49,180 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:51:49,379 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_last_name': 'Administrator', 'full_tc_external_id': 'tc-12', 'active': '1', 'author_id': '1', 'estimated_exec_duration': '', 'status': '1', 'author_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'importance': '2', 'id': '67', 'author_login': 'admin', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'name': '获取天气服务', 'updater_first_name': 'Testlink', 'summary': '', 'layout': '1', 'testcase_id': '66', 'updater_login': 'admin', 'tc_external_id': '12', 'author_last_name': 'Administrator', 'updater_id': '1', 'creation_ts': '2016-04-06 21:14:49', 'is_open': '1', 'execution_type': '1', 'testsuite_id': '65', 'version': '1', 'node_order': '1000', 'steps': [{'active': '1', 'execution_type': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}]}]
2017-04-09 16:51:49,743 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:51:49,743 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:51:49,743 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:51:50,241 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:51:50,241 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165149', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:51:50,244 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:51:50,244 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:51:50,244 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:51:50,532 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:51:50,532 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:51:50,533 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:51:50,533 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165150', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:51:50,535 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:51:50,536 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:51:50,536 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:51:50,536 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:51:50,536 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:51:50,537 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:51:50,537 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:51:50,537 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:51:50,537 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:51:50,538 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:51:50,538 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:51:50,919 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:51:50,920 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:51:50,920 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:51:52 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:51:50,920 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:51:50,920 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:51:50,921 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:51:50,921 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"}
2017-04-09 16:51:50,921 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:51:50,921 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xmlns': '{"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:51:50,922 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:51:50,922 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/{}getSupportProvinceResponse/{}getSupportProvinceResult/string[1]
2017-04-09 16:51:50,922 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 16:51:50,922 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 16:51:50,922 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 16:51:50,922 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 16:51:50,924 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:51:50,924 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:51:50,924 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 特别行政区+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 16:51:50",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409165150 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:51:50,927 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:51:50,927 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:51:50", case_exec_history_id="20170409165150" WHERE executed_history_id = 20170409165149 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:51:50,929 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:51:50,929 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'特别行政区\'\n+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 16:51:50,929 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:52:06,025 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:52:06,025 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:52:06,041 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:52:06,047 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:52:06,115 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:52:06,116 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:52:06,117 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:52:06,118 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:52:06,119 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:52:06,122 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:52:06,122 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:52:06,123 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:52:06,320 global_function.py[line: 18] INFO: 获取测试用例信息 [{'importance': '2', 'node_order': '1000', 'layout': '1', 'author_id': '1', 'id': '67', 'version': '1', 'author_login': 'admin', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_id': '1', 'name': '获取天气服务', 'steps': [{'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'active': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'updater_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'estimated_exec_duration': '', 'execution_type': '1', 'tc_external_id': '12', 'author_last_name': 'Administrator', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'testsuite_id': '65', 'summary': '', 'full_tc_external_id': 'tc-12', 'status': '1', 'active': '1', 'is_open': '1'}]
2017-04-09 16:52:06,681 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:52:06,682 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:52:06,682 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:52:07,158 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:52:07,158 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165206', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:52:07,160 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:52:07,160 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:52:07,160 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:52:07,332 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:52:07,332 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:52:07,333 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:52:07,333 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165207', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:52:07,335 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:52:07,336 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:52:07,336 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:52:07,336 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:52:07,336 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:52:07,337 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:52:07,337 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:52:07,337 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:52:07,337 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:52:07,337 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:52:07,338 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:52:07,636 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:52:07,636 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:52:07,636 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:52:08 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:52:07,637 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:52:07,637 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:52:07,637 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:52:07,637 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:52:07,638 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:52:07,638 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:52:07,638 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:52:07,638 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:52:07,640 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:52:07,641 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:52:07,641 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:52:07",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409165207 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:52:07,647 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:52:07,648 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:52:07", case_exec_history_id="20170409165207" WHERE executed_history_id = 20170409165206 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:52:07,650 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:52:07,650 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:52:07,650 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:52:22,719 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:52:22,720 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:52:22,734 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:52:22,738 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:52:22,815 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:52:22,815 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:52:22,817 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:52:22,817 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:52:22,819 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:52:22,821 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:52:22,821 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:52:22,821 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:52:23,038 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'author_last_name': 'Administrator', 'testsuite_id': '65', 'updater_id': '1', 'importance': '2', 'modification_ts': '2017-04-09 16:10:36', 'updater_last_name': 'Administrator', 'full_tc_external_id': 'tc-12', 'id': '67', 'execution_type': '1', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'active': '1'}], 'author_first_name': 'Testlink', 'active': '1', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'summary': '', 'is_open': '1', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'tc_external_id': '12', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'author_id': '1', 'author_login': 'admin', 'status': '1', 'estimated_exec_duration': '', 'version': '1', 'updater_login': 'admin'}]
2017-04-09 16:52:23,399 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:52:23,399 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:52:23,399 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:52:23,866 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:52:23,866 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165222', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:52:23,868 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:52:23,868 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:52:23,869 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:52:24,056 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:52:24,056 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:52:24,056 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:52:24,056 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165223', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:52:24,060 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:52:24,060 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:52:24,060 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:52:24,060 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:52:24,061 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:52:24,061 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:52:24,061 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:52:24,061 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:52:24,062 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:52:24,062 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:52:24,062 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:52:24,415 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:52:24,415 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:52:24,415 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:52:25 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:52:24,415 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:52:24,416 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:52:24,416 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:52:24,417 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:52:24,417 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:52:24,417 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:52:24,417 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:52:24,417 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:52:24,420 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:52:24,421 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:52:24,421 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:52:24",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409165223 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:52:24,425 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:52:24,425 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:52:23", case_exec_history_id="20170409165223" WHERE executed_history_id = 20170409165222 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:52:24,427 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:52:24,428 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:52:24,428 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:53:31,556 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:53:31,556 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:53:31,573 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:53:31,576 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:53:31,650 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:53:31,650 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:53:31,652 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:53:31,653 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:53:31,654 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:53:31,656 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:53:31,656 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:53:31,657 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:53:32,021 global_function.py[line: 18] INFO: 获取测试用例信息 [{'status': '1', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'author_first_name': 'Testlink', 'importance': '2', 'modification_ts': '2017-04-09 16:10:36', 'full_tc_external_id': 'tc-12', 'execution_type': '1', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'active': '1', 'creation_ts': '2016-04-06 21:14:49', 'summary': '', 'id': '67', 'author_last_name': 'Administrator', 'updater_login': 'admin', 'layout': '1', 'name': '获取天气服务', 'estimated_exec_duration': '', 'tc_external_id': '12', 'updater_last_name': 'Administrator', 'version': '1', 'steps': [{'active': '1', 'step_number': '1', 'execution_type': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'is_open': '1', 'author_id': '1', 'author_login': 'admin', 'testsuite_id': '65', 'updater_id': '1'}]
2017-04-09 16:53:32,382 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:53:32,382 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:53:32,383 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:53:32,870 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:53:32,870 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165331', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:53:32,871 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:53:32,872 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:53:32,872 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:53:33,049 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:53:33,049 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:53:33,049 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:53:33,050 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165332', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:53:33,052 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:53:33,052 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:53:33,053 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:53:33,053 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:53:33,053 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:53:33,053 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:53:33,054 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:53:33,054 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:53:33,054 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:53:33,054 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:53:33,054 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:53:33,386 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:53:33,386 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:53:33,386 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:53:34 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:53:33,386 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:53:33,387 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:53:33,387 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:53:33,387 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:53:33,388 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:53:33,388 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:53:33,388 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:53:33,388 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:53:33,390 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:53:33,391 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:53:33,391 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:53:33",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409165332 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:53:33,397 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:53:33,397 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:53:32", case_exec_history_id="20170409165332" WHERE executed_history_id = 20170409165331 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:53:33,398 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:53:33,398 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:53:33,399 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:53:48,213 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:53:48,214 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:53:48,226 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:53:48,235 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:53:48,419 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:53:48,420 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:53:48,425 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:53:48,426 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:53:48,429 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:53:48,437 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:53:48,438 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:53:48,439 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:53:48,648 global_function.py[line: 18] INFO: 获取测试用例信息 [{'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'id': '68', 'active': '1'}], 'execution_type': '1', 'version': '1', 'node_order': '1000', 'updater_id': '1', 'testcase_id': '66', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'layout': '1', 'tc_external_id': '12', 'id': '67', 'active': '1', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'modification_ts': '2017-04-09 16:10:36', 'testsuite_id': '65', 'is_open': '1', 'importance': '2', 'author_last_name': 'Administrator', 'name': '获取天气服务', 'updater_first_name': 'Testlink', 'updater_login': 'admin', 'status': '1', 'author_login': 'admin', 'summary': '', 'author_id': '1'}]
2017-04-09 16:53:49,022 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:53:49,023 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:53:49,024 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:53:49,564 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:53:49,565 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165348', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:53:49,570 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:53:49,571 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:53:49,572 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:53:49,754 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:53:49,755 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:53:49,756 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:53:49,757 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165349', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:53:49,763 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:53:49,764 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:53:49,765 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:53:49,766 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:53:49,767 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:53:49,768 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:53:49,769 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:53:49,772 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:53:49,773 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:53:49,774 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:53:49,776 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:53:50,312 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:53:50,313 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:53:50,315 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:53:51 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:53:50,315 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:53:50,317 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:53:50,318 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:53:50,320 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:53:50,323 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:53:50,324 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:53:50,325 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:53:50,326 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:53:50,331 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:53:50,332 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:53:50,333 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:/project/interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:/project/interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:/project/interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:53:49",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409165349 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:53:50,337 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:53:50,338 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:53:49", case_exec_history_id="20170409165349" WHERE executed_history_id = 20170409165348 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:53:50,341 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:53:50,342 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:/project/interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:/project/interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:/project/interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:53:50,343 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:56:29,154 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:56:29,154 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:56:29,169 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:56:29,172 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:56:29,243 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:56:29,244 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:56:29,246 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:56:29,246 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:56:29,248 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:56:29,250 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:56:29,250 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:56:29,250 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:56:29,508 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_last_name': 'Administrator', 'creation_ts': '2016-04-06 21:14:49', 'tc_external_id': '12', 'full_tc_external_id': 'tc-12', 'is_open': '1', 'modification_ts': '2017-04-09 16:10:36', 'summary': '', 'execution_type': '1', 'testsuite_id': '65', 'layout': '1', 'author_first_name': 'Testlink', 'importance': '2', 'author_id': '1', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'estimated_exec_duration': '', 'author_login': 'admin', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'id': '68', 'active': '1', 'step_number': '1'}], 'id': '67', 'status': '1', 'node_order': '1000', 'active': '1', 'author_last_name': 'Administrator', 'version': '1', 'updater_login': 'admin', 'name': '获取天气服务', 'updater_id': '1'}]
2017-04-09 16:56:29,839 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:56:29,840 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:56:29,840 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:56:30,310 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:56:30,310 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165629', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:56:30,312 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:56:30,312 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:56:30,312 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:56:30,481 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:56:30,482 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:56:30,482 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:56:30,482 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165630', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:56:30,485 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:56:30,485 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:56:30,485 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:56:30,485 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:56:30,486 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:56:30,486 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:56:30,486 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:56:30,486 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:56:30,487 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:56:30,487 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:56:30,487 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:56:30,861 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:56:30,861 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:56:30,861 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:56:32 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:56:30,862 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:56:30,862 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:56:30,862 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:56:30,862 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:56:30,863 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:56:30,863 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:56:30,863 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:56:30,863 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:56:30,865 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:56:30,865 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:56:30,865 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:56:30",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409165630 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:56:30,872 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:56:30,872 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:56:30", case_exec_history_id="20170409165630" WHERE executed_history_id = 20170409165629 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:56:30,873 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:56:30,873 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:56:30,874 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:57:07,787 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:57:07,787 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:57:07,804 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:57:07,808 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:57:07,877 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:57:07,877 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:57:07,880 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:57:07,881 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:57:07,882 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:57:07,884 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:57:07,884 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:57:07,885 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:57:08,159 global_function.py[line: 18] INFO: 获取测试用例信息 [{'is_open': '1', 'execution_type': '1', 'version': '1', 'modification_ts': '2017-04-09 16:10:36', 'layout': '1', 'author_last_name': 'Administrator', 'name': '获取天气服务', 'steps': [{'active': '1', 'execution_type': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'full_tc_external_id': 'tc-12', 'status': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'testcase_id': '66', 'id': '67', 'updater_last_name': 'Administrator', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'author_id': '1', 'summary': '', 'importance': '2', 'testsuite_id': '65', 'tc_external_id': '12', 'active': '1', 'creation_ts': '2016-04-06 21:14:49', 'node_order': '1000', 'author_first_name': 'Testlink', 'updater_id': '1', 'updater_login': 'admin', 'estimated_exec_duration': ''}]
2017-04-09 16:57:08,566 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:57:08,566 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:57:08,566 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:57:09,050 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:57:09,051 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165707', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:57:09,052 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:57:09,053 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:57:09,053 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:57:09,231 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:57:09,232 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:57:09,232 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:57:09,232 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165709', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:57:09,235 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:57:09,235 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:57:09,235 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:57:09,236 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:57:09,236 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:57:09,236 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:57:09,236 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:57:09,237 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:57:09,237 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:57:09,237 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:57:09,237 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:57:09,737 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:57:09,737 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:57:09,737 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:57:10 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:57:09,738 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:57:09,738 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:57:09,739 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:57:09,740 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:57:09,740 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:57:09,741 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:57:09,741 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:57:09,741 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:57:09,745 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:57:09,745 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:57:09,745 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:57:09",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409165709 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:57:09,767 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:57:09,767 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:57:09", case_exec_history_id="20170409165709" WHERE executed_history_id = 20170409165707 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:57:09,774 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:57:09,774 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:57:09,774 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:57:52,856 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:57:52,857 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:57:52,871 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:57:52,875 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:57:52,950 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:57:52,951 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:57:52,953 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:57:52,953 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:57:52,956 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:57:52,959 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:57:52,959 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:57:52,959 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:57:53,276 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_id': '1', 'status': '1', 'updater_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'tc_external_id': '12', 'updater_last_name': 'Administrator', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_first_name': 'Testlink', 'name': '获取天气服务', 'testsuite_id': '65', 'author_id': '1', 'is_open': '1', 'summary': '', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'author_login': 'admin', 'estimated_exec_duration': '', 'id': '67', 'version': '1', 'node_order': '1000', 'author_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'layout': '1', 'importance': '2', 'execution_type': '1', 'full_tc_external_id': 'tc-12', 'modification_ts': '2017-04-09 16:10:36'}]
2017-04-09 16:57:53,654 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:57:53,654 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:57:53,654 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:57:54,130 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:57:54,130 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165752', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:57:54,132 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:57:54,132 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:57:54,132 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:57:54,305 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:57:54,305 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:57:54,305 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:57:54,305 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165754', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:57:54,307 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:57:54,308 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:57:54,308 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:57:54,308 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:57:54,308 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:57:54,309 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:57:54,309 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:57:54,309 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:57:54,309 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:57:54,309 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:57:54,310 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:57:54,640 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:57:54,640 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:57:54,641 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:57:55 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:57:54,641 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:57:54,641 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:57:54,641 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:57:54,642 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:57:54,642 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:57:54,642 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:57:54,642 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:57:54,642 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:57:54,644 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:57:54,644 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:57:54,645 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:57:54",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409165754 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:57:54,651 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:57:54,651 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:57:54", case_exec_history_id="20170409165754" WHERE executed_history_id = 20170409165752 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:57:54,653 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:57:54,654 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:57:54,654 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:58:05,061 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:58:05,062 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:58:05,077 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:58:05,081 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:58:05,151 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:58:05,151 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:58:05,153 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:58:05,153 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:58:05,155 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:58:05,156 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:58:05,157 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:58:05,157 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:58:06,753 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_id': '1', 'testsuite_id': '65', 'tc_external_id': '12', 'estimated_exec_duration': '', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'author_id': '1', 'updater_last_name': 'Administrator', 'status': '1', 'creation_ts': '2016-04-06 21:14:49', 'id': '67', 'active': '1', 'is_open': '1', 'updater_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'version': '1', 'author_login': 'admin', 'author_last_name': 'Administrator', 'execution_type': '1', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'summary': '', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'importance': '2', 'layout': '1', 'testcase_id': '66'}]
2017-04-09 16:58:07,145 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:58:07,145 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:58:07,145 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:58:07,614 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:58:07,614 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165805', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:58:07,617 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:58:07,617 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:58:07,618 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:58:07,790 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:58:07,790 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:58:07,790 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:58:07,791 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165807', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:58:07,793 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:58:07,793 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:58:07,793 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:58:07,794 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:58:07,794 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:58:07,794 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 16:58:07,794 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:58:07,795 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:58:07,795 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:58:07,795 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:58:07,795 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:58:08,099 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:58:08,099 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:58:08,099 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:58:09 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:58:08,100 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:58:08,100 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:58:08,100 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:58:08,110 unittesttestcase.py[line: 244] INFO: xmlns定义为：{xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}
2017-04-09 16:58:08,110 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:58:08,111 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xmlns': '{xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 16:58:08,111 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:58:08,111 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/{xmlns:xsd=http://www.w3.org/2001/XMLSchema><soap:Body><getSupportProvinceResponse}getSupportProvinceResponse/{xmlns:xsd=http://www.w3.org/2001/XMLSchema><soap:Body><getSupportProvinceResponse}getSupportProvinceResult/string[1]
2017-04-09 16:58:08,111 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 16:58:08,111 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 16:58:08,111 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 16:58:08,112 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 16:58:08,113 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:58:08,113 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:58:08,114 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 特别行政区+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 16:58:07",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409165807 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:58:08,116 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:58:08,116 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:58:07", case_exec_history_id="20170409165807" WHERE executed_history_id = 20170409165805 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:58:08,118 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:58:08,118 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'特别行政区\'\n+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 16:58:08,118 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 16:58:47,803 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 16:58:47,803 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 16:58:47,818 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 16:58:47,822 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 16:58:47,889 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 16:58:47,889 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 16:58:47,891 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 16:58:47,891 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 16:58:47,893 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 16:58:47,895 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 16:58:47,895 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 16:58:47,895 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 16:58:48,077 global_function.py[line: 18] INFO: 获取测试用例信息 [{'is_open': '1', 'updater_first_name': 'Testlink', 'updater_login': 'admin', 'id': '67', 'status': '1', 'summary': '', 'tc_external_id': '12', 'testsuite_id': '65', 'active': '1', 'execution_type': '1', 'author_last_name': 'Administrator', 'modification_ts': '2017-04-09 16:10:36', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'step_number': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1'}], 'updater_id': '1', 'version': '1', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'author_login': 'admin', 'author_id': '1', 'layout': '1', 'node_order': '1000', 'importance': '2'}]
2017-04-09 16:58:48,430 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 16:58:48,430 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 16:58:48,430 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 16:58:48,923 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 16:58:48,923 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165847', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 16:58:48,925 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 16:58:48,925 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 16:58:48,925 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 16:58:49,094 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 16:58:49,094 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 16:58:49,094 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 16:58:49,094 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409165848', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 16:58:49,097 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 16:58:49,097 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 16:58:49,097 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:58:49,098 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:58:49,098 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 16:58:49,098 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 16:58:49,098 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 16:58:49,099 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 16:58:49,099 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 16:58:49,099 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 16:58:49,099 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 16:59:10,106 httpprotocol.py[line: 98] ERROR: 发送请求失败，原因：<urlopen error [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。>,正在进行第二次尝试
2017-04-09 16:59:10,534 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 16:59:10,535 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 16:59:10,535 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 08:59:11 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 16:59:10,535 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 16:59:10,535 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 16:59:10,535 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 16:59:10,536 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 16:59:10,536 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 16:59:10,536 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 16:59:10,536 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 16:59:10,536 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 16:59:10,538 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 16:59:10,539 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 16:59:10,539 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 16:58:49",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409165848 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 16:59:10,545 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 16:59:10,545 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 16:58:48", case_exec_history_id="20170409165848" WHERE executed_history_id = 20170409165847 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 16:59:10,547 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 16:59:10,547 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 16:59:10,547 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:06:09,461 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:06:09,461 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:06:09,476 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:06:09,481 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:06:09,554 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:06:09,554 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:06:09,556 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:06:09,557 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:06:09,558 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:06:09,560 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:06:09,560 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:06:09,561 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:06:09,870 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'author_last_name': 'Administrator', 'node_order': '1000', 'importance': '2', 'modification_ts': '2017-04-09 16:10:36', 'creation_ts': '2016-04-06 21:14:49', 'author_first_name': 'Testlink', 'status': '1', 'full_tc_external_id': 'tc-12', 'author_login': 'admin', 'author_id': '1', 'estimated_exec_duration': '', 'layout': '1', 'updater_id': '1', 'testsuite_id': '65', 'id': '67', 'tc_external_id': '12', 'is_open': '1', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'id': '68', 'step_number': '1'}], 'summary': '', 'testcase_id': '66', 'execution_type': '1', 'active': '1', 'version': '1'}]
2017-04-09 17:06:10,243 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:06:10,243 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:06:10,243 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:06:10,712 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:06:10,713 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170609', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:06:10,715 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:06:10,715 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:06:10,715 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:06:10,898 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:06:10,899 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:06:10,899 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:06:10,899 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170610', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:06:10,901 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:06:10,901 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:06:10,902 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:06:10,902 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:06:10,902 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:06:10,902 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:06:10,902 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:06:10,903 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:06:10,903 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:06:10,903 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:06:10,903 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:06:11,245 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:06:11,245 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:06:11,245 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:06:12 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:06:11,245 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:06:11,245 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:06:11,246 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:06:11,246 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:06:11,246 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 17:06:11,246 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:06:11,247 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:06:11,247 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:06:11,250 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:06:11,250 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:06:11,250 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:06:10",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '检查': 'body'}" WHERE executed_history_id = 20170409170610 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:06:11,252 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:06:11,253 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:06:10", case_exec_history_id="20170409170610" WHERE executed_history_id = 20170409170609 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:06:11,255 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:06:11,255 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:06:11,255 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:08:35,177 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:08:35,177 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:08:35,192 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:08:35,198 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:08:35,272 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:08:35,272 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:08:35,274 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:08:35,275 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:08:35,276 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:08:35,278 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:08:35,279 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:08:35,279 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:08:35,499 global_function.py[line: 18] INFO: 获取测试用例信息 [{'is_open': '1', 'tc_external_id': '12', 'version': '1', 'id': '67', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'author_id': '1', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'layout': '1', 'name': '获取天气服务', 'updater_id': '1', 'execution_type': '1', 'author_last_name': 'Administrator', 'creation_ts': '2016-04-06 21:14:49', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'testsuite_id': '65', 'summary': '', 'steps': [{'step_number': '1', 'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68'}], 'updater_login': 'admin', 'active': '1', 'modification_ts': '2017-04-09 16:10:36', 'importance': '2', 'author_login': 'admin', 'status': '1'}]
2017-04-09 17:08:35,866 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:08:35,866 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:08:35,867 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:08:36,342 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:08:36,342 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170835', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:08:36,343 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:08:36,344 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:08:36,344 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:08:36,527 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:08:36,528 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:08:36,528 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:08:36,528 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170836', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:08:36,530 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:08:36,531 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:08:36,531 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:08:36,531 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:08:36,531 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:08:36,532 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:08:36,532 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:08:36,532 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:08:36,532 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:08:36,532 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:08:36,533 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:08:36,878 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:08:36,878 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:08:36,878 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:08:38 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:08:36,879 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:08:36,879 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:08:36,879 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:08:36,879 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:08:36,880 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 17:08:36,880 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:08:36,880 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:08:36,880 unittesttestcase.py[line: 267] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:08:36,882 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:08:36,882 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:08:36,882 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 265, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 268, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:08:36",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]}" WHERE executed_history_id = 20170409170836 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:08:36,889 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:08:36,889 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:08:36", case_exec_history_id="20170409170836" WHERE executed_history_id = 20170409170835 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:08:36,891 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:08:36,891 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 265, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 268, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:08:36,892 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:09:33,608 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:09:33,608 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:09:33,623 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:09:33,627 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:09:33,698 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:09:33,698 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:09:33,700 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:09:33,700 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:09:33,702 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:09:33,704 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:09:33,704 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:09:33,704 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:09:33,900 global_function.py[line: 18] INFO: 获取测试用例信息 [{'estimated_exec_duration': '', 'node_order': '1000', 'testsuite_id': '65', 'updater_id': '1', 'tc_external_id': '12', 'updater_last_name': 'Administrator', 'author_id': '1', 'testcase_id': '66', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'id': '67', 'creation_ts': '2016-04-06 21:14:49', 'is_open': '1', 'status': '1', 'modification_ts': '2017-04-09 16:10:36', 'importance': '2', 'updater_first_name': 'Testlink', 'active': '1', 'author_last_name': 'Administrator', 'author_login': 'admin', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'summary': '', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'execution_type': '1', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'execution_type': '1', 'active': '1'}], 'version': '1', 'layout': '1'}]
2017-04-09 17:09:34,267 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:09:34,267 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:09:34,267 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:09:34,729 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:09:34,730 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170933', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:09:34,732 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:09:34,732 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:09:34,732 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:09:34,919 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:09:34,920 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:09:34,920 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:09:34,920 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170934', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:09:34,922 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:09:34,923 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:09:34,923 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:09:34,923 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:09:34,923 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:09:34,924 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 17:09:34,924 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:09:34,924 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:09:34,924 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:09:34,924 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:09:34,925 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:09:35,250 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:09:35,251 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:09:35,251 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:09:36 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:09:35,251 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:09:35,251 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:09:35,252 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:09:35,253 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:09:35,253 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 17:09:35,253 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 239, in assert_result    logger(response_to_check)TypeError: Logger object is not callable", protocol_method="post", runtime="2017-04-09 17:09:34",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409170934 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 17:09:35,258 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:09:35,258 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 17:09:34", case_exec_history_id="20170409170934" WHERE executed_history_id = 20170409170933 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:09:35,260 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:09:35,260 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 239, in assert_result\n    logger(response_to_check)\nTypeError: \'Logger\' object is not callable\n')])
2017-04-09 17:09:35,260 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:09:49,198 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:09:49,198 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:09:49,213 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:09:49,217 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:09:49,283 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:09:49,284 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:09:49,287 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:09:49,287 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:09:49,289 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:09:49,291 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:09:49,291 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:09:49,291 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:09:49,488 global_function.py[line: 18] INFO: 获取测试用例信息 [{'status': '1', 'importance': '2', 'testcase_id': '66', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'author_first_name': 'Testlink', 'modification_ts': '2017-04-09 16:10:36', 'tc_external_id': '12', 'testsuite_id': '65', 'id': '67', 'estimated_exec_duration': '', 'creation_ts': '2016-04-06 21:14:49', 'execution_type': '1', 'updater_first_name': 'Testlink', 'version': '1', 'layout': '1', 'updater_last_name': 'Administrator', 'author_login': 'admin', 'active': '1', 'author_id': '1', 'node_order': '1000', 'full_tc_external_id': 'tc-12', 'author_last_name': 'Administrator', 'summary': '', 'updater_id': '1', 'is_open': '1', 'updater_login': 'admin', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'name': '获取天气服务'}]
2017-04-09 17:09:49,905 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:09:49,905 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:09:49,905 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:09:50,364 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:09:50,364 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170949', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:09:50,367 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:09:50,367 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:09:50,367 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:09:50,549 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:09:50,549 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:09:50,549 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:09:50,549 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409170950', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:09:50,552 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:09:50,552 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:09:50,552 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:09:50,552 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:09:50,553 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:09:50,553 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:09:50,553 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:09:50,553 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:09:50,554 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:09:50,554 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:09:50,554 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:09:50,850 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:09:50,851 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:09:50,851 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:09:52 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:09:50,851 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:09:50,851 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:09:50,852 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:09:50,852 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:09:50,852 unittesttestcase.py[line: 248] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:09:50,852 unittesttestcase.py[line: 253] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 17:09:50,853 unittesttestcase.py[line: 255] INFO: 正在转换元素结点前缀
2017-04-09 17:09:50,853 unittesttestcase.py[line: 264] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:09:50,854 unittesttestcase.py[line: 268] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:09:50,856 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:09:50,856 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:09:50,856 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 266, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 269, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:09:50",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409170950 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:09:50,858 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:09:50,859 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:09:50", case_exec_history_id="20170409170950" WHERE executed_history_id = 20170409170949 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:09:50,860 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:09:50,860 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 266, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 269, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:09:50,861 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:10:58,572 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:10:58,572 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:10:58,586 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:10:58,590 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:10:58,661 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:10:58,661 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:10:58,663 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:10:58,663 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:10:58,664 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:10:58,666 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:10:58,667 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:10:58,667 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:10:58,881 global_function.py[line: 18] INFO: 获取测试用例信息 [{'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'active': '1', 'execution_type': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'id': '67', 'status': '1', 'execution_type': '1', 'node_order': '1000', 'active': '1', 'testcase_id': '66', 'creation_ts': '2016-04-06 21:14:49', 'updater_last_name': 'Administrator', 'layout': '1', 'author_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'summary': '', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'full_tc_external_id': 'tc-12', 'testsuite_id': '65', 'updater_id': '1', 'updater_login': 'admin', 'modification_ts': '2017-04-09 16:10:36', 'author_login': 'admin', 'author_last_name': 'Administrator', 'version': '1', 'name': '获取天气服务', 'importance': '2', 'tc_external_id': '12', 'is_open': '1', 'estimated_exec_duration': ''}]
2017-04-09 17:10:59,269 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:10:59,269 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:10:59,269 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:10:59,743 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:10:59,744 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171058', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:10:59,745 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:10:59,746 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:10:59,746 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:10:59,920 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:10:59,921 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:10:59,921 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:10:59,921 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171059', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:10:59,923 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:10:59,923 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:10:59,924 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:10:59,924 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:10:59,924 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:10:59,924 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 17:10:59,925 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:10:59,925 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:10:59,925 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:10:59,925 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:10:59,925 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:11:00,269 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:11:00,269 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:11:00,270 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:11:01 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:11:00,270 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:11:00,270 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:11:00,270 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:11:00,270 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:11:00,271 unittesttestcase.py[line: 248] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:11:00,271 unittesttestcase.py[line: 253] INFO: 最后获取的prefix:uri为：{'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 17:11:00,271 unittesttestcase.py[line: 255] INFO: 正在转换元素结点前缀
2017-04-09 17:11:00,271 unittesttestcase.py[line: 264] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:11:00,273 unittesttestcase.py[line: 268] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:11:00,275 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:11:00,276 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:11:00,276 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 266, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 269, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:10:59",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409171059 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:11:00,284 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:11:00,284 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:10:59", case_exec_history_id="20170409171059" WHERE executed_history_id = 20170409171058 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:11:00,286 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:11:00,287 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 266, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 269, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:11:00,287 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:12:27,484 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:12:27,484 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:12:27,500 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:12:27,504 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:12:27,576 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:12:27,577 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:12:27,579 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:12:27,579 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:12:27,580 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:12:27,582 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:12:27,582 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:12:27,583 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:12:27,777 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_id': '1', 'testsuite_id': '65', 'id': '67', 'updater_first_name': 'Testlink', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'active': '1', 'modification_ts': '2017-04-09 16:10:36', 'name': '获取天气服务', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'layout': '1', 'version': '1', 'summary': '', 'is_open': '1', 'tc_external_id': '12', 'execution_type': '1', 'author_id': '1', 'full_tc_external_id': 'tc-12', 'steps': [{'execution_type': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}], 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_login': 'admin', 'status': '1', 'updater_login': 'admin', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'estimated_exec_duration': ''}]
2017-04-09 17:12:28,118 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:12:28,118 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:12:28,118 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:12:28,611 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:12:28,611 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171227', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:12:28,612 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:12:28,613 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:12:28,613 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:12:28,789 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:12:28,790 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:12:28,790 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:12:28,790 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171228', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:12:28,793 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:12:28,794 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:12:28,794 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:12:28,794 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:12:28,794 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:12:28,795 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:12:28,795 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:12:28,795 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:12:28,795 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:12:28,795 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:12:28,795 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:12:29,125 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:12:29,125 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:12:29,125 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:12:30 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:12:29,125 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:12:29,126 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:12:29,126 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:12:29,126 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:12:29,126 unittesttestcase.py[line: 248] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:12:29,127 unittesttestcase.py[line: 253] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 17:12:29,127 unittesttestcase.py[line: 255] INFO: 正在转换元素结点前缀
2017-04-09 17:12:29,127 unittesttestcase.py[line: 264] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:12:29,127 unittesttestcase.py[line: 268] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:12:29,129 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:12:29,129 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:12:29,130 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 266, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 269, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:12:28",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '检查': 'body'}" WHERE executed_history_id = 20170409171228 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:12:29,136 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:12:29,136 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:12:28", case_exec_history_id="20170409171228" WHERE executed_history_id = 20170409171227 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:12:29,139 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:12:29,139 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 266, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 269, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:12:29,139 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:13:19,924 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:13:19,925 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:13:19,941 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:13:19,946 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:13:20,019 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:13:20,019 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:13:20,021 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:13:20,021 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:13:20,022 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:13:20,024 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:13:20,024 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:13:20,024 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:13:20,280 global_function.py[line: 18] INFO: 获取测试用例信息 [{'version': '1', 'testcase_id': '66', 'full_tc_external_id': 'tc-12', 'summary': '', 'estimated_exec_duration': '', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'layout': '1', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'importance': '2', 'modification_ts': '2017-04-09 16:10:36', 'steps': [{'step_number': '1', 'active': '1', 'id': '68', 'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'execution_type': '1', 'tc_external_id': '12', 'status': '1', 'name': '获取天气服务', 'updater_first_name': 'Testlink', 'active': '1', 'author_id': '1', 'id': '67', 'testsuite_id': '65', 'updater_id': '1', 'updater_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'is_open': '1'}]
2017-04-09 17:13:20,638 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:13:20,638 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:13:20,638 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:13:21,112 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:13:21,112 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171319', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:13:21,114 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:13:21,114 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:13:21,115 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:13:21,288 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:13:21,289 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:13:21,289 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:13:21,289 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171321', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:13:21,293 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:13:21,293 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:13:21,294 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:13:21,294 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:13:21,294 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:13:21,294 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:13:21,295 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:13:21,295 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:13:21,295 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:13:21,296 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:13:21,296 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:13:21,621 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:13:21,621 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:13:21,621 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:13:22 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:13:21,621 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:13:21,622 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:13:21,622 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:13:21,622 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:13:21,622 unittesttestcase.py[line: 248] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:13:21,623 unittesttestcase.py[line: 253] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 17:13:21,623 unittesttestcase.py[line: 255] INFO: 正在转换元素结点前缀
2017-04-09 17:13:21,623 unittesttestcase.py[line: 264] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:13:21,624 unittesttestcase.py[line: 268] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:13:21,626 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:13:21,626 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:13:21,626 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 266, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 269, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:13:21",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409171321 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:13:21,628 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:13:21,629 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:13:21", case_exec_history_id="20170409171321" WHERE executed_history_id = 20170409171319 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:13:21,630 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:13:21,631 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 266, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 269, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:13:21,631 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:14:16,500 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:14:16,500 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:14:16,514 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:14:16,518 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:14:16,587 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:14:16,587 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:14:16,589 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:14:16,589 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:14:16,591 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:14:16,593 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:14:16,593 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:14:16,593 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:14:16,773 global_function.py[line: 18] INFO: 获取测试用例信息 [{'summary': '', 'creation_ts': '2016-04-06 21:14:49', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'execution_type': '1', 'author_last_name': 'Administrator', 'author_login': 'admin', 'name': '获取天气服务', 'updater_login': 'admin', 'version': '1', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'active': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}], 'updater_id': '1', 'testsuite_id': '65', 'layout': '1', 'tc_external_id': '12', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'importance': '2', 'is_open': '1', 'updater_last_name': 'Administrator', 'id': '67', 'status': '1', 'full_tc_external_id': 'tc-12', 'author_id': '1', 'author_first_name': 'Testlink', 'active': '1', 'modification_ts': '2017-04-09 16:10:36', 'estimated_exec_duration': ''}]
2017-04-09 17:14:17,123 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:14:17,124 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:14:17,124 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:14:17,599 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:14:17,600 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171416', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:14:17,602 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:14:17,602 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:14:17,602 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:14:17,781 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:14:17,781 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:14:17,781 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:14:17,781 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171417', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:14:17,784 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:14:17,784 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:14:17,784 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:14:17,784 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:14:17,785 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:14:17,785 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 17:14:17,785 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:14:17,786 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:14:17,786 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:14:17,786 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:14:17,787 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:14:18,209 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:14:18,210 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:14:18,210 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:14:19 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:14:18,210 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:14:18,210 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:14:18,211 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:14:18,211 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:14:18,211 unittesttestcase.py[line: 249] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:14:18,211 unittesttestcase.py[line: 254] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 17:14:18,212 unittesttestcase.py[line: 256] INFO: 正在转换元素结点前缀
2017-04-09 17:14:18,212 unittesttestcase.py[line: 265] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:14:18,213 unittesttestcase.py[line: 269] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:14:18,215 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:14:18,215 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:14:18,215 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 267, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 270, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:14:17",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body'}" WHERE executed_history_id = 20170409171417 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:14:18,218 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:14:18,218 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:14:17", case_exec_history_id="20170409171417" WHERE executed_history_id = 20170409171416 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:14:18,220 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:14:18,220 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 267, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 270, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:14:18,221 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:15:23,324 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:15:23,325 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:15:23,339 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:15:23,343 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:15:23,417 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:15:23,418 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:15:23,420 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:15:23,420 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:15:23,422 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:15:23,495 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:15:23,496 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:15:23,497 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:15:23,720 global_function.py[line: 18] INFO: 获取测试用例信息 [{'summary': '', 'execution_type': '1', 'testsuite_id': '65', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'modification_ts': '2017-04-09 16:10:36', 'creation_ts': '2016-04-06 21:14:49', 'tc_external_id': '12', 'full_tc_external_id': 'tc-12', 'is_open': '1', 'updater_last_name': 'Administrator', 'layout': '1', 'name': '获取天气服务', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'active': '1', 'updater_first_name': 'Testlink', 'version': '1', 'author_login': 'admin', 'updater_login': 'admin', 'testcase_id': '66', 'estimated_exec_duration': '', 'updater_id': '1', 'id': '67', 'status': '1', 'node_order': '1000', 'importance': '2', 'author_id': '1', 'steps': [{'execution_type': '1', 'id': '68', 'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n'}]}]
2017-04-09 17:15:24,084 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:15:24,085 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:15:24,085 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:15:24,571 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:15:24,571 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171523', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:15:24,575 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:15:24,575 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:15:24,575 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:15:24,744 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:15:24,745 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:15:24,745 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:15:24,745 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171524', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:15:24,747 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:15:24,747 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:15:24,748 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:15:24,748 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:15:24,748 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:15:24,748 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:15:24,749 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:15:24,749 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:15:24,749 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:15:24,749 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:15:24,749 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:15:25,058 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:15:25,058 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:15:25,058 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:15:26 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:15:25,058 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:15:25,059 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:15:25,059 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:15:25,059 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:15:25,059 unittesttestcase.py[line: 249] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:15:25,060 unittesttestcase.py[line: 254] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}'}
2017-04-09 17:15:25,060 unittesttestcase.py[line: 256] INFO: 正在转换元素结点前缀
2017-04-09 17:15:25,060 unittesttestcase.py[line: 265] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]
2017-04-09 17:15:25,063 unittesttestcase.py[line: 269] ERROR: 查找元素出错：prefix 'xmlns' not found in prefix map
2017-04-09 17:15:25,065 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:15:25,065 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:15:25,065 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 252, in iterfind    selector = _cache[path]KeyError: ./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]During handling of the above exception, another exception occurred:Traceback (most recent call last):  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 80, in xpath_tokenizer    raise KeyErrorKeyErrorDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\unittesttestcase.py, line 267, in assert_result    elements_list = root.findall(key)  File D:\Program Files (x86)\python33\lib\xml\etree\ElementPath.py, line 293, in findall    return list(iterfind(elem, path, namespaces))  File <string>, line NoneSyntaxError: prefix xmlns not found in prefix mapDuring handling of the above exception, another exception occurred:Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 270, in assert_result    self.assertEqual(1, 0, msg=%s % e)AssertionError: 1 != 0 : prefix xmlns not found in prefix map", protocol_method="post", runtime="2017-04-09 17:15:24",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409171524 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:15:25,072 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:15:25,072 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:15:24", case_exec_history_id="20170409171524" WHERE executed_history_id = 20170409171523 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:15:25,074 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:15:25,074 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 252, in iterfind\n    selector = _cache[path]\nKeyError: \'./{http://www.w3.org/2003/05/soap-envelope}Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]\'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 80, in xpath_tokenizer\n    raise KeyError\nKeyError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 267, in assert_result\n    elements_list = root.findall(key)\n  File "D:\\Program Files (x86)\\python33\\lib\\xml\\etree\\ElementPath.py", line 293, in findall\n    return list(iterfind(elem, path, namespaces))\n  File "<string>", line None\nSyntaxError: prefix \'xmlns\' not found in prefix map\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 270, in assert_result\n    self.assertEqual(1, 0, msg=\'%s\' % e)\nAssertionError: 1 != 0 : prefix \'xmlns\' not found in prefix map\n')])
2017-04-09 17:15:25,074 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:18:40,998 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:18:40,998 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:18:41,014 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:18:41,018 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:18:41,093 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:18:41,093 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:18:41,096 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:18:41,096 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:18:41,098 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:18:41,101 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:18:41,101 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:18:41,101 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:18:41,310 global_function.py[line: 18] INFO: 获取测试用例信息 [{'summary': '', 'updater_first_name': 'Testlink', 'author_id': '1', 'is_open': '1', 'testsuite_id': '65', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'importance': '2', 'version': '1', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'updater_login': 'admin', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_last_name': 'Administrator', 'modification_ts': '2017-04-09 16:10:36', 'author_first_name': 'Testlink', 'execution_type': '1', 'tc_external_id': '12', 'layout': '1', 'updater_id': '1', 'author_last_name': 'Administrator', 'node_order': '1000', 'status': '1', 'estimated_exec_duration': '', 'author_login': 'admin', 'id': '67', 'testcase_id': '66', 'steps': [{'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1'}]}]
2017-04-09 17:18:41,679 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:18:41,680 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:18:41,680 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:18:42,146 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:18:42,146 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171841', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:18:42,152 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:18:42,152 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:18:42,152 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:18:42,322 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:18:42,322 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:18:42,322 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:18:42,322 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409171842', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:18:42,325 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:18:42,325 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:18:42,325 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:18:42,325 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:18:42,325 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:18:42,326 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 17:18:42,326 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:18:42,326 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:18:42,326 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:18:42,326 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:18:42,327 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:18:42,630 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:18:42,630 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:18:42,631 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:18:43 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:18:42,631 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:18:42,631 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:18:42,631 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:18:42,631 unittesttestcase.py[line: 239] INFO: <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:18:42,633 unittesttestcase.py[line: 246] INFO: xmlns定义为：{"http://WebXml.com.cn/"}
2017-04-09 17:18:42,633 unittesttestcase.py[line: 249] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:18:42,633 unittesttestcase.py[line: 254] INFO: 最后获取的prefix:uri为：{'xmlns': '{"http://WebXml.com.cn/"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 17:18:42,633 unittesttestcase.py[line: 256] INFO: 正在转换元素结点前缀
2017-04-09 17:18:42,633 unittesttestcase.py[line: 265] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/{http://WebXml.com.cn/}getSupportProvinceResponse/{http://WebXml.com.cn/}getSupportProvinceResult/string[1]
2017-04-09 17:18:42,634 unittesttestcase.py[line: 271] INFO: 查找到的元素为：[]
2017-04-09 17:18:42,634 unittesttestcase.py[line: 273] INFO: 正在进行断言
2017-04-09 17:18:42,634 unittesttestcase.py[line: 279] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:18:42,634 unittesttestcase.py[line: 280] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:18:42,636 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:18:42,636 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:18:42,636 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 281, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 特别行政区+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:18:42",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]}" WHERE executed_history_id = 20170409171842 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:18:42,638 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:18:42,639 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:18:42", case_exec_history_id="20170409171842" WHERE executed_history_id = 20170409171841 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:18:42,641 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:18:42,642 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 281, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'特别行政区\'\n+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:18:42,642 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:22:44,492 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:22:44,492 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:22:44,508 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:22:44,513 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:22:44,590 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:22:44,590 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:22:44,592 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:22:44,592 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:22:44,594 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:22:44,596 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:22:44,596 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:22:44,596 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:22:44,881 global_function.py[line: 18] INFO: 获取测试用例信息 [{'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'version': '1', 'updater_login': 'admin', 'author_id': '1', 'name': '获取天气服务', 'author_login': 'admin', 'status': '1', 'layout': '1', 'is_open': '1', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'execution_type': '1', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'node_order': '1000', 'summary': '', 'updater_last_name': 'Administrator', 'steps': [{'step_number': '1', 'active': '1', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68'}], 'active': '1', 'author_last_name': 'Administrator', 'full_tc_external_id': 'tc-12', 'id': '67', 'tc_external_id': '12', 'importance': '2', 'updater_id': '1', 'testsuite_id': '65', 'modification_ts': '2017-04-09 16:10:36'}]
2017-04-09 17:22:45,267 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:22:45,268 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:22:45,268 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:22:45,786 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:22:45,786 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409172244', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:22:45,788 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:22:45,788 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:22:45,788 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:22:45,975 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:22:45,975 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:22:45,975 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:22:45,976 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409172245', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:22:45,979 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:22:45,979 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:22:45,979 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:22:45,980 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:22:45,980 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:22:45,980 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}]
2017-04-09 17:22:45,980 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:22:45,981 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:22:45,981 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:22:45,981 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:22:45,981 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:22:46,373 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:22:46,374 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:22:46,374 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:22:47 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:22:46,374 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:22:46,374 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:22:46,375 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:22:46,375 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://WebXml.com.cn/"}
2017-04-09 17:22:46,375 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:22:46,375 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xmlns': '{"http://WebXml.com.cn/"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"}'}
2017-04-09 17:22:46,375 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:22:46,376 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance xmlns:xsd=http://www.w3.org/2001/XMLSchema}Body/{http://WebXml.com.cn/}getSupportProvinceResponse/{http://WebXml.com.cn/}getSupportProvinceResult/string[1]
2017-04-09 17:22:46,376 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 17:22:46,376 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:22:46,376 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:22:46,376 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:22:46,379 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:22:46,379 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:22:46,379 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 特别行政区+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:22:45",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409172245 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:22:46,383 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:22:46,384 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:22:45", case_exec_history_id="20170409172245" WHERE executed_history_id = 20170409172244 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:22:46,387 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:22:46,388 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'特别行政区\'\n+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:22:46,388 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:25:34,747 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:25:34,747 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:25:34,763 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:25:34,767 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:25:34,838 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:25:34,838 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:25:34,840 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:25:34,840 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:25:34,842 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:25:34,844 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:25:34,844 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:25:34,844 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:25:35,047 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_id': '1', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'status': '1', 'version': '1', 'is_open': '1', 'steps': [{'execution_type': '1', 'step_number': '1', 'active': '1', 'id': '68', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}], 'importance': '2', 'layout': '1', 'estimated_exec_duration': '', 'author_id': '1', 'updater_last_name': 'Administrator', 'execution_type': '1', 'summary': '', 'active': '1', 'updater_login': 'admin', 'tc_external_id': '12', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'id': '67', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'testsuite_id': '65', 'name': '获取天气服务', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'modification_ts': '2017-04-09 16:10:36'}]
2017-04-09 17:25:35,463 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:25:35,463 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:25:35,463 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:25:35,980 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:25:35,980 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409172534', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:25:35,984 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:25:35,984 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:25:35,984 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:25:36,233 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:25:36,234 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:25:36,234 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:25:36,234 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409172535', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:25:36,237 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:25:36,237 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:25:36,238 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:25:36,238 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:25:36,238 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:25:36,239 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 17:25:36,239 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:25:36,239 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:25:36,239 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:25:36,240 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:25:36,240 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:25:36,566 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:25:36,566 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:25:36,566 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:25:37 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:25:36,566 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:25:36,567 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}
2017-04-09 17:25:36,567 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:25:36,567 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://WebXml.com.cn/"}
2017-04-09 17:25:36,568 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:25:36,568 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}', 'xmlns': '{"http://WebXml.com.cn/"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"}', 'soap': '{"http://www.w3.org/2003/05/soap-envelope"}'}
2017-04-09 17:25:36,569 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:25:36,569 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/{http://WebXml.com.cn/}getSupportProvinceResponse/{http://WebXml.com.cn/}getSupportProvinceResult/string[1]
2017-04-09 17:25:36,569 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 17:25:36,570 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:25:36,570 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:25:36,570 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:25:36,572 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:25:36,572 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:25:36,572 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 特别行政区+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:25:36",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409172535 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:25:36,574 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:25:36,574 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:25:35", case_exec_history_id="20170409172535" WHERE executed_history_id = 20170409172534 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:25:36,576 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:25:36,576 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'特别行政区\'\n+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:25:36,576 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:30:49,378 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:30:49,378 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:30:49,394 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:30:49,398 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:30:49,471 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:30:49,471 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:30:49,472 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:30:49,472 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:30:49,475 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:30:49,477 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:30:49,477 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:30:49,478 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:30:49,695 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'summary': '', 'updater_login': 'admin', 'node_order': '1000', 'active': '1', 'full_tc_external_id': 'tc-12', 'layout': '1', 'author_first_name': 'Testlink', 'is_open': '1', 'author_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'author_id': '1', 'status': '1', 'version': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_id': '1', 'importance': '2', 'estimated_exec_duration': '', 'testsuite_id': '65', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'tc_external_id': '12', 'modification_ts': '2017-04-09 17:30:36', 'execution_type': '1', 'name': '获取天气服务', 'steps': [{'step_number': '1', 'active': '1', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/xmlns:string[1]&quot;:&quot;特别行政区&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68'}], 'updater_last_name': 'Administrator', 'id': '67'}]
2017-04-09 17:30:50,050 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:30:50,051 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:30:50,051 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:30:50,523 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:30:50,523 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409173049', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:30:50,525 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:30:50,525 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:30:50,525 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:30:50,716 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:30:50,717 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/xmlns:string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:30:50,717 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:30:50,717 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409173050', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/xmlns:string[1]":"特别行政区"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:30:50,720 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:30:50,721 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:30:50,721 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:30:50,721 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:30:50,721 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:30:50,722 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/xmlns:string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}]
2017-04-09 17:30:50,722 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:30:50,722 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:30:50,722 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:30:50,723 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:30:50,723 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:30:51,055 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:30:51,056 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><getSupportProvinceResponse xmlns="http://WebXml.com.cn/"><getSupportProvinceResult><string>直辖市</string><string>特别行政区</string><string>黑龙江</string><string>吉林</string><string>辽宁</string><string>内蒙古</string><string>河北</string><string>河南</string><string>山东</string><string>山西</string><string>江苏</string><string>安徽</string><string>陕西</string><string>宁夏</string><string>甘肃</string><string>青海</string><string>湖北</string><string>湖南</string><string>浙江</string><string>江西</string><string>福建</string><string>贵州</string><string>四川</string><string>广东</string><string>广西</string><string>云南</string><string>海南</string><string>新疆</string><string>西藏</string><string>台湾</string><string>亚洲</string><string>欧洲</string><string>非洲</string><string>北美洲</string><string>南美洲</string><string>大洋洲</string></getSupportProvinceResult></getSupportProvinceResponse></soap:Body></soap:Envelope>
2017-04-09 17:30:51,056 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:30:52 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:30:51,056 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:30:51,056 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/xmlns:string[1]': '特别行政区'}
2017-04-09 17:30:51,056 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:30:51,057 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://WebXml.com.cn/"}
2017-04-09 17:30:51,057 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:30:51,057 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap': '{"http://www.w3.org/2003/05/soap-envelope"}', 'xmlns': '{"http://WebXml.com.cn/"}', 'xsd': '{"http://www.w3.org/2001/XMLSchema"}', 'xsi': '{"http://www.w3.org/2001/XMLSchema-instance"}'}
2017-04-09 17:30:51,058 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:30:51,058 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://www.w3.org/2003/05/soap-envelope}Body/{http://WebXml.com.cn/}getSupportProvinceResponse/{http://WebXml.com.cn/}getSupportProvinceResult/{http://WebXml.com.cn/}string[1]
2017-04-09 17:30:51,058 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://WebXml.com.cn/}string' at 0x0312E810>]
2017-04-09 17:30:51,058 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:30:51,058 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:30:51,059 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:30:51,061 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:30:51,061 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:30:51,061 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError: 直辖市 != 特别行政区- 直辖市+ 特别行政区 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:30:50",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'模式': {'./soap:Body/xmlns:getSupportProvinceResponse/xmlns:getSupportProvinceResult/xmlns:string[1]': '特别行政区'}, '消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配'}], '检查': 'body', '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409173050 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:30:51,063 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:30:51,064 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:30:50", case_exec_history_id="20170409173050" WHERE executed_history_id = 20170409173049 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:30:51,065 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:30:51,065 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'直辖市\' != \'特别行政区\'\n- 直辖市\n+ 特别行政区\n : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:30:51,066 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:42:52,706 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:42:52,707 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:42:52,723 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:42:52,726 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:42:52,800 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:42:52,801 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:42:52,803 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:42:52,803 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:42:52,805 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:42:52,807 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:42:52,807 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:42:52,807 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:42:53,013 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'layout': '1', 'updater_id': '1', 'modification_ts': '2017-04-09 17:42:45', 'author_id': '1', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'id': '68', 'active': '1'}], 'summary': '', 'testsuite_id': '65', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'importance': '2', 'testcase_id': '66', 'tc_external_id': '12', 'id': '67', 'active': '1', 'full_tc_external_id': 'tc-12', 'updater_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'node_order': '1000', 'updater_first_name': 'Testlink', 'execution_type': '1', 'author_login': 'admin', 'is_open': '1', 'version': '1', 'status': '1', 'name': '获取天气服务', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator'}]
2017-04-09 17:42:53,392 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:42:53,392 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:42:53,393 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:42:53,867 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:42:53,868 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409174252', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:42:53,870 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:42:53,870 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:42:53,870 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:42:54,064 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:42:54,064 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:42:54,065 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:42:54,065 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409174253', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:42:54,068 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:42:54,068 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:42:54,068 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:42:54,069 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:42:54,069 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 17:42:54,069 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:42:54,069 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}]
2017-04-09 17:42:54,070 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:42:54,070 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:42:54,070 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:42:54,070 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:42:54,070 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:42:54,391 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:42:54,391 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 17:42:54,392 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:42:55 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:42:54,392 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:42:54,392 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 17:42:54,394 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:42:54,394 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt"}
2017-04-09 17:42:54,394 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:42:54,395 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 17:42:54,395 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:42:54,395 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com xmlns:ns1=http://service.rpt.data.platform.ddt.sf.com/ name=tt}return[3]/{http://xxx.com xmlns:ns1=http://service.rpt.data.platform.ddt.sf.com/ name=tt}orderCode
2017-04-09 17:42:54,396 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 17:42:54,396 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:42:54,396 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:42:54,396 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:42:54,398 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:42:54,398 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:42:54,398 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != DDT201704071952057186+ DDT201704071952057186 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:42:54",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409174253 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:42:54,400 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:42:54,400 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:42:53", case_exec_history_id="20170409174253" WHERE executed_history_id = 20170409174252 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:42:54,402 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:42:54,402 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'DDT201704071952057186\'\n+ DDT201704071952057186 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:42:54,402 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:44:57,869 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:44:57,869 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:44:57,884 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:44:57,887 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:44:57,961 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:44:57,961 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:44:57,963 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:44:57,963 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:44:57,964 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:44:57,967 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:44:57,967 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:44:57,967 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:44:58,171 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'importance': '2', 'author_id': '1', 'testcase_id': '66', 'updater_last_name': 'Administrator', 'updater_id': '1', 'testsuite_id': '65', 'estimated_exec_duration': '', 'node_order': '1000', 'active': '1', 'updater_first_name': 'Testlink', 'modification_ts': '2017-04-09 17:42:45', 'status': '1', 'creation_ts': '2016-04-06 21:14:49', 'tc_external_id': '12', 'id': '67', 'execution_type': '1', 'full_tc_external_id': 'tc-12', 'name': '获取天气服务', 'summary': '', 'is_open': '1', 'version': '1', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_login': 'admin', 'layout': '1', 'steps': [{'active': '1', 'execution_type': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n'}]}]
2017-04-09 17:44:58,551 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:44:58,551 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:44:58,551 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:44:59,038 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:44:59,038 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409174457', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:44:59,041 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:44:59,041 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:44:59,041 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:44:59,255 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:44:59,255 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:44:59,256 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:44:59,256 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409174459', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:44:59,259 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:44:59,259 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:44:59,259 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:44:59,260 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:44:59,260 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:44:59,260 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 17:44:59,260 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}}]
2017-04-09 17:44:59,260 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:44:59,261 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:44:59,261 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:44:59,261 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:44:59,261 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:44:59,658 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:44:59,658 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 17:44:59,658 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:45:00 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:44:59,659 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:44:59,659 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 17:44:59,662 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:44:59,663 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http:}
2017-04-09 17:44:59,663 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:44:59,663 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http:}'}
2017-04-09 17:44:59,664 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:44:59,664 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http:}return[1]/{http:}copeWith
2017-04-09 17:44:59,664 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[]
2017-04-09 17:44:59,664 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:44:59,664 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:44:59,664 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:44:59,666 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:44:59,666 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:44:59,666 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError:  != 1.00+ 1.00 : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:44:59",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409174459 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:44:59,670 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:44:59,670 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:44:59", case_exec_history_id="20170409174459" WHERE executed_history_id = 20170409174457 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:44:59,672 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:44:59,672 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'\' != \'1.00\'\n+ 1.00 : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:44:59,672 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:55:50,005 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:55:50,005 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:55:50,021 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:55:50,025 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:55:50,099 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:55:50,100 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:55:50,101 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:55:50,101 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:55:50,103 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:55:50,105 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:55:50,105 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:55:50,106 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:55:50,567 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_login': 'admin', 'author_id': '1', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071952057186&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'active': '1', 'step_number': '1', 'execution_type': '1'}], 'author_first_name': 'Testlink', 'testcase_id': '66', 'status': '1', 'updater_first_name': 'Testlink', 'id': '67', 'author_last_name': 'Administrator', 'tc_external_id': '12', 'active': '1', 'summary': '', 'modification_ts': '2017-04-09 17:42:45', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'execution_type': '1', 'testsuite_id': '65', 'importance': '2', 'creation_ts': '2016-04-06 21:14:49', 'is_open': '1', 'name': '获取天气服务', 'node_order': '1000', 'full_tc_external_id': 'tc-12', 'updater_id': '1', 'estimated_exec_duration': '', 'layout': '1', 'version': '1'}]
2017-04-09 17:55:50,986 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:55:50,986 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:55:50,986 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:55:51,456 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:55:51,456 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409175550', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:55:51,458 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:55:51,458 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:55:51,458 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:55:51,664 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:55:51,664 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:55:51,664 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:55:51,664 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409175551', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071952057186"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:55:51,668 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:55:51,669 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:55:51,669 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:55:51,669 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:55:51,669 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:55:51,670 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 17:55:51,670 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}}]
2017-04-09 17:55:51,670 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:55:51,671 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:55:51,671 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:55:51,671 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:55:51,672 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:55:52,003 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:55:52,003 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 17:55:52,003 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:55:53 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:55:52,003 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:55:52,004 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}
2017-04-09 17:55:52,006 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:55:52,006 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 17:55:52,006 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:55:52,007 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}'}
2017-04-09 17:55:52,007 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:55:52,007 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 17:55:52,007 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03307F90>]
2017-04-09 17:55:52,007 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:55:52,008 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:55:52,008 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:55:52,008 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:55:52,008 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 17:55:52,008 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:55:52,008 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}'}
2017-04-09 17:55:52,008 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:55:52,009 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 17:55:52,009 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x0331CE70>]
2017-04-09 17:55:52,009 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:55:52,009 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:55:52,009 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:55:52,011 testcase.py[line: 174] INFO: 步骤[1]执行失败,停止执行用例[id=66, name=获取天气服务]
2017-04-09 17:55:52,011 testcase.py[line: 181] INFO: 正在更新步骤执行结果
2017-04-09 17:55:52,011 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 261, in test_interface_of_xml    self.assert_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 279, in assert_result    self.assertEqual(content_to_check, expect_value, msg=item[消息])AssertionError: DDT201704071945408575 != DDT201704071952057186- DDT201704071945408575?              - ^ -  ^+ DDT201704071952057186?               ^   ^^^ : 创建储值卡支付订单失败,返回结果和元组模式不匹配", protocol_method="post", runtime="2017-04-09 17:55:51",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071952057186'}}], '匹配规则': 'xpath断言', '检查': 'body'}" WHERE executed_history_id = 20170409175551 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划' AND runtime='0000-00-00 00:00:00'
2017-04-09 17:55:52,014 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:55:52,014 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-04-09 17:55:51", case_exec_history_id="20170409175551" WHERE executed_history_id = 20170409175550 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:55:52,015 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:55:52,016 main.py[line: 208] INFO: 用例[66]运行结果：('Fail', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 261, in test_interface_of_xml\n    self.assert_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 279, in assert_result\n    self.assertEqual(content_to_check, expect_value, msg=item[\'消息\'])\nAssertionError: \'DDT201704071945408575\' != \'DDT201704071952057186\'\n- DDT201704071945408575\n?              - ^ -  ^\n+ DDT201704071952057186\n?               ^   ^^^\n : 创建储值卡支付订单失败,返回结果和元组模式不匹配\n')])
2017-04-09 17:55:52,016 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 17:57:07,061 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 17:57:07,061 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 17:57:07,076 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 17:57:07,080 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 17:57:07,143 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 17:57:07,143 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 17:57:07,145 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 17:57:07,145 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 17:57:07,147 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 17:57:07,149 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 17:57:07,149 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 17:57:07,149 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 17:57:07,360 global_function.py[line: 18] INFO: 获取测试用例信息 [{'status': '1', 'estimated_exec_duration': '', 'author_id': '1', 'active': '1', 'author_first_name': 'Testlink', 'full_tc_external_id': 'tc-12', 'updater_last_name': 'Administrator', 'author_login': 'admin', 'id': '67', 'importance': '2', 'modification_ts': '2017-04-09 17:57:02', 'tc_external_id': '12', 'creation_ts': '2016-04-06 21:14:49', 'updater_id': '1', 'author_last_name': 'Administrator', 'node_order': '1000', 'updater_login': 'admin', 'testcase_id': '66', 'layout': '1', 'summary': '', 'updater_first_name': 'Testlink', 'name': '获取天气服务', 'version': '1', 'testsuite_id': '65', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;创建储值卡支付订单失败,返回结果和元组模式不匹配&quot;}]<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'execution_type': '1', 'is_open': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n'}]
2017-04-09 17:57:07,743 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 17:57:07,743 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 17:57:07,743 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 17:57:08,220 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 17:57:08,220 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409175707', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 17:57:08,222 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 17:57:08,222 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 17:57:08,222 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 17:57:08,414 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 17:57:08,414 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}
2017-04-09 17:57:08,414 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 17:57:08,414 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409175708', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"创建储值卡支付订单失败,返回结果和元组模式不匹配"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 17:57:08,417 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 17:57:08,417 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 17:57:08,417 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:57:08,418 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:57:08,418 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 17:57:08,418 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 17:57:08,418 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}}]
2017-04-09 17:57:08,418 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 17:57:08,419 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 17:57:08,419 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 17:57:08,419 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 17:57:08,419 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 17:57:08,779 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 17:57:08,779 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 17:57:08,779 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 09:57:09 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 17:57:08,780 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 17:57:08,780 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}
2017-04-09 17:57:08,783 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:57:08,783 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 17:57:08,784 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:57:08,784 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 17:57:08,784 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:57:08,784 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 17:57:08,785 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x037B3900>]
2017-04-09 17:57:08,785 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:57:08,785 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:57:08,785 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:57:08,785 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 17:57:08,785 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 17:57:08,786 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 17:57:08,786 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 17:57:08,786 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 17:57:08,786 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 17:57:08,786 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x0353F7E0>]
2017-04-09 17:57:08,787 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 17:57:08,787 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 17:57:08,787 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 17:57:08,787 unittesttestcase.py[line: 413] WARNING: 未检测到从服务器返回中提取内容的要求，请检查是否正确填写预期结果
2017-04-09 17:57:08,787 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 17:57:08,788 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 17:57:08",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '匹配规则': 'xpath断言', '条件': [{'消息': '创建储值卡支付订单失败,返回结果和元组模式不匹配', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}}]}" WHERE executed_history_id = 20170409175708 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 17:57:08,790 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 17:57:08,790 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 17:57:08,790 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 17:57:08", case_exec_history_id="20170409175708" WHERE executed_history_id = 20170409175707 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 17:57:08,792 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 17:57:08,792 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 17:57:08,792 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:04:21,152 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:04:21,153 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:04:21,168 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:04:21,172 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:04:21,246 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:04:21,246 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:04:21,248 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:04:21,248 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:04:21,249 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:04:21,252 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:04:21,252 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:04:21,252 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:04:21,449 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'author_first_name': 'Testlink', 'execution_type': '1', 'status': '1', 'modification_ts': '2017-04-09 18:04:05', 'updater_id': '1', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;}}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'author_login': 'admin', 'estimated_exec_duration': '', 'id': '67', 'version': '1', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'author_last_name': 'Administrator', 'testcase_id': '66', 'importance': '2', 'name': '获取天气服务', 'testsuite_id': '65', 'author_id': '1', 'is_open': '1', 'summary': '', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'creation_ts': '2016-04-06 21:14:49', 'active': '1', 'tc_external_id': '12'}]
2017-04-09 18:04:21,800 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:04:21,800 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:04:21,800 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:04:22,416 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:04:22,416 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409180421', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:04:22,419 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:04:22,419 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:04:22,420 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:04:22,669 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:04:22,670 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"}}}
2017-04-09 18:04:22,670 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:04:22,670 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409180422', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"}}}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:04:22,672 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:04:22,673 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:04:22,673 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:04:22,673 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:04:22,674 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 18:04:22,674 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 18:04:22,674 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}]
2017-04-09 18:04:22,674 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:04:22,675 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 18:04:22,675 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:04:22,675 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:04:22,675 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:04:23,003 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 18:04:23,003 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:04:23,004 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:04:24 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:04:23,004 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:04:23,004 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 18:04:23,007 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:04:23,007 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:04:23,007 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:04:23,008 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:04:23,008 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:04:23,008 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:04:23,009 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x03465E70>]
2017-04-09 18:04:23,009 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:04:23,009 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:04:23,009 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:04:23,009 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:04:23,010 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:04:23,010 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:04:23,010 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:04:23,010 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:04:23,010 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:04:23,010 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x0345EF90>]
2017-04-09 18:04:23,010 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:04:23,011 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:04:23,011 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:04:23,011 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:04:23,011 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:04:23,011 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:04:23,013 testcase.py[line: 159] ERROR: 步骤[1]执行出错,停止执行用例[id=66, name=获取天气服务]
2017-04-09 18:04:23,013 testcase.py[line: 166] INFO: 正在更新步骤执行结果
2017-04-09 18:04:23,013 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File F:\project\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 263, in test_interface_of_xml    self.save_result(body)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 405, in save_result    value_get = self.extrator(xpath, extrator, response_to_check)  File F:\project\interface_project_for_dev\unittesttestcase.py, line 333, in extrator    logger.info(xmlns定义为：% % xmlns)ValueError: incomplete format", protocol_method="post", runtime="2017-04-09 18:04:22",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}], '输出': {'xpath': {'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith', 'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode'}}, '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409180422 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00' 
2017-04-09 18:04:23,015 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:04:23,015 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 18:04:22", case_exec_history_id="20170409180422" WHERE executed_history_id = 20170409180421 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:04:23,017 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:04:23,017 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [(<interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase testMethod=test_interface_of_xml>, 'Traceback (most recent call last):\n  File "F:\\project\\interface_project_for_dev\\interface\\InterfaceUnittestTestCase.py", line 263, in test_interface_of_xml\n    self.save_result(body)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 405, in save_result\n    value_get = self.extrator(\'xpath\', extrator, response_to_check)\n  File "F:\\project\\interface_project_for_dev\\unittesttestcase.py", line 333, in extrator\n    logger.info(\'xmlns定义为：%\' % xmlns)\nValueError: incomplete format\n')])
2017-04-09 18:04:23,017 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:04:35,185 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:04:35,186 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:04:35,201 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:04:35,205 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:04:35,276 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:04:35,277 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:04:35,278 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:04:35,279 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:04:35,280 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:04:35,282 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:04:35,282 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:04:35,283 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:04:35,492 global_function.py[line: 18] INFO: 获取测试用例信息 [{'layout': '1', 'full_tc_external_id': 'tc-12', 'creation_ts': '2016-04-06 21:14:49', 'execution_type': '1', 'active': '1', 'version': '1', 'steps': [{'id': '68', 'active': '1', 'step_number': '1', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;}}<br />\n\t}</p>\n'}], 'id': '67', 'tc_external_id': '12', 'updater_first_name': 'Testlink', 'node_order': '1000', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'status': '1', 'testcase_id': '66', 'author_login': 'admin', 'summary': '', 'modification_ts': '2017-04-09 18:04:05', 'importance': '2', 'is_open': '1', 'testsuite_id': '65', 'author_first_name': 'Testlink', 'name': '获取天气服务', 'estimated_exec_duration': '', 'updater_id': '1', 'author_id': '1', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'author_last_name': 'Administrator'}]
2017-04-09 18:04:35,844 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:04:35,844 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:04:35,845 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:04:36,329 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:04:36,329 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409180435', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:04:36,330 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:04:36,331 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:04:36,331 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:04:36,504 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:04:36,504 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"}}}
2017-04-09 18:04:36,504 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:04:36,505 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409180436', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"}}}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:04:36,507 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:04:36,507 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:04:36,508 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:04:36,508 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:04:36,508 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 18:04:36,508 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 18:04:36,508 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}]
2017-04-09 18:04:36,509 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:04:36,509 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 18:04:36,509 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:04:36,509 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:04:36,509 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:04:36,823 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 18:04:36,823 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:04:36,823 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:04:38 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:04:36,823 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:04:36,824 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 18:04:36,826 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:04:36,826 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:04:36,827 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:04:36,827 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:04:36,827 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:04:36,827 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:04:36,828 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x031BDE70>]
2017-04-09 18:04:36,828 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:04:36,828 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:04:36,828 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:04:36,828 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:04:36,829 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:04:36,829 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:04:36,829 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:04:36,829 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:04:36,829 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:04:36,829 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x031B6F90>]
2017-04-09 18:04:36,829 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:04:36,830 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:04:36,830 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:04:36,830 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:04:36,830 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:04:36,830 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:04:36,830 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:04:36,830 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:04:36,831 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:04:36,831 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:04:36,831 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:04:36,831 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x031B6D20>]
2017-04-09 18:04:36,831 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:04:36,831 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:04:36,831 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:04:36,832 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:04:36,832 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:04:36,832 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:04:36,832 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:04:36,832 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:04:36,832 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:04:36,832 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:04:36,833 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x031BD570>]
2017-04-09 18:04:36,833 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:04:36,833 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:04:36,833 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:04:36,834 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:04:36",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'输出': {'xpath': {'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode', 'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith'}}, '检查': 'body', '条件': [{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409180436 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:04:36,836 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:04:36,836 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:04:36,836 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:04:36", case_exec_history_id="20170409180436" WHERE executed_history_id = 20170409180435 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:04:36,838 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:04:36,839 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:04:36,839 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:13:10,975 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:13:10,976 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:13:10,992 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:13:10,996 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:13:11,063 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:13:11,064 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:13:11,066 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:13:11,066 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:13:11,068 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:13:11,070 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:13:11,071 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:13:11,071 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:13:11,262 global_function.py[line: 18] INFO: 获取测试用例信息 [{'author_id': '1', 'active': '1', 'summary': '', 'author_last_name': 'Administrator', 'tc_external_id': '12', 'layout': '1', 'node_order': '1000', 'importance': '2', 'modification_ts': '2017-04-09 18:12:54', 'id': '67', 'updater_last_name': 'Administrator', 'author_first_name': 'Testlink', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'status': '1', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'active': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n', 'execution_type': '1'}], 'full_tc_external_id': 'tc-12', 'author_login': 'admin', 'testsuite_id': '65', 'updater_first_name': 'Testlink', 'updater_login': 'admin', 'execution_type': '1', 'estimated_exec_duration': '', 'version': '1', 'is_open': '1', 'name': '获取天气服务', 'updater_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n'}]
2017-04-09 18:13:11,626 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:13:11,626 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:13:11,626 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:13:12,099 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:13:12,099 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409181310', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:13:12,101 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:13:12,101 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:13:12,101 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:13:12,281 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:13:12,282 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith(.+?)<"} }}
2017-04-09 18:13:12,282 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:13:12,282 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409181312', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:13:12,286 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:13:12,286 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:13:12,286 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:13:12,286 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:13:12,287 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 18:13:12,287 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 18:13:12,287 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}]
2017-04-09 18:13:12,287 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:13:12,287 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 18:13:12,288 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:13:12,288 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:13:12,288 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:13:12,877 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 18:13:12,877 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:13:12,878 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:13:14 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:13:12,878 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:13:12,878 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}
2017-04-09 18:13:12,880 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:13:12,880 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:12,880 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:12,881 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:13:12,881 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:13:12,881 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:13:12,881 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03377900>]
2017-04-09 18:13:12,882 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:13:12,882 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:13:12,882 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:13:12,882 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:13:12,882 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:12,882 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:12,883 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:13:12,883 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:13:12,883 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:13:12,883 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x032E77E0>]
2017-04-09 18:13:12,883 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:13:12,884 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:13:12,884 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:13:12,884 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:13:12,884 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:13:12,884 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:13:12,884 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:12,885 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:12,885 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:13:12,885 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:13:12,885 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:13:12,885 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x033188A0>]
2017-04-09 18:13:12,885 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:13:12,885 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:13:12,886 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:13:12,886 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:13:12,886 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:13:12,886 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:12,886 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:12,886 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:13:12,886 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:13:12,887 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:13:12,887 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03318DE0>]
2017-04-09 18:13:12,887 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:13:12,887 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:13:12,887 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 18:13:12,888 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:12,888 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_1->1.00
2017-04-09 18:13:12,888 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:12,888 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_2->1.00
2017-04-09 18:13:12,888 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:12,888 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_3->1.00
2017-04-09 18:13:12,888 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:12,888 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_4->1.00
2017-04-09 18:13:12,889 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:13:12,889 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:13:12",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '输出': {'xpath': {'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode', 'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith'}, 're': {'copeWith2': 'copeWith(.+?)<'}}, '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}], '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409181312 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:13:12,891 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:13:12,892 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:13:12,892 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:13:12", case_exec_history_id="20170409181312" WHERE executed_history_id = 20170409181310 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:13:12,894 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:13:12,894 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:13:12,894 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:13:50,337 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:13:50,337 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:13:50,354 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:13:50,358 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:13:50,423 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:13:50,423 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:13:50,425 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:13:50,425 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:13:50,426 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:13:50,429 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:13:50,429 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:13:50,429 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:13:50,630 global_function.py[line: 18] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_first_name': 'Testlink', 'updater_last_name': 'Administrator', 'is_open': '1', 'creation_ts': '2016-04-06 21:14:49', 'tc_external_id': '12', 'full_tc_external_id': 'tc-12', 'author_last_name': 'Administrator', 'modification_ts': '2017-04-09 18:13:45', 'execution_type': '1', 'summary': '', 'author_first_name': 'Testlink', 'testsuite_id': '65', 'importance': '2', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&gt;&quot;:&quot;copeWith(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'id': '68', 'active': '1'}], 'author_id': '1', 'author_login': 'admin', 'testcase_id': '66', 'estimated_exec_duration': '', 'node_order': '1000', 'id': '67', 'status': '1', 'updater_id': '1', 'updater_login': 'admin', 'version': '1', 'name': '获取天气服务', 'layout': '1', 'active': '1'}]
2017-04-09 18:13:50,980 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:13:50,980 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:13:50,980 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:13:51,474 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:13:51,474 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409181350', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:13:51,476 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:13:51,476 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:13:51,476 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:13:51,667 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:13:51,667 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2>":"copeWith(.+?)<"} }}
2017-04-09 18:13:51,667 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:13:51,667 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409181351', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2>":"copeWith(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:13:51,670 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:13:51,670 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:13:51,670 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:13:51,671 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:13:51,671 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 18:13:51,671 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 18:13:51,671 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}]
2017-04-09 18:13:51,672 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:13:51,672 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 18:13:51,672 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:13:51,672 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:13:51,672 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:13:52,304 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 18:13:52,304 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:13:52,304 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:13:53 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:13:52,304 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:13:52,305 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}
2017-04-09 18:13:52,309 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:13:52,309 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:52,309 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:52,310 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:13:52,310 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:13:52,310 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:13:52,311 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x034FD900>]
2017-04-09 18:13:52,311 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:13:52,311 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:13:52,311 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:13:52,311 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:13:52,311 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:52,311 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:52,312 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:13:52,312 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:13:52,312 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:13:52,312 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x034067E0>]
2017-04-09 18:13:52,312 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:13:52,313 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:13:52,313 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:13:52,313 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:13:52,313 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:13:52,313 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:13:52,313 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:52,314 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:52,314 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:13:52,314 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:13:52,314 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:13:52,314 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x034FDE70>]
2017-04-09 18:13:52,314 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:13:52,314 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:13:52,315 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:13:52,315 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:13:52,315 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:13:52,315 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:13:52,315 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:13:52,315 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:13:52,316 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:13:52,316 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:13:52,316 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x0349F8A0>]
2017-04-09 18:13:52,316 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:13:52,316 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:13:52,316 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 18:13:52,317 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:52,317 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2>_1->1.00
2017-04-09 18:13:52,317 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:52,317 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2>_2->1.00
2017-04-09 18:13:52,317 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:52,317 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2>_3->1.00
2017-04-09 18:13:52,317 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['>1.00', '>1.00', '>1.00', '>1.00']
2017-04-09 18:13:52,317 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2>_4->1.00
2017-04-09 18:13:52,318 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:13:52,318 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:13:51",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '检查': 'body', '输出': {'xpath': {'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith', 'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode'}, 're': {'copeWith2>': 'copeWith(.+?)<'}}, '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}]}" WHERE executed_history_id = 20170409181351 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:13:52,321 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:13:52,321 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:13:52,321 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:13:51", case_exec_history_id="20170409181351" WHERE executed_history_id = 20170409181350 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:13:52,323 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:13:52,323 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:13:52,323 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:14:24,710 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:14:24,710 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:14:24,726 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:14:24,730 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:14:24,801 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:14:24,802 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:14:24,804 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:14:24,804 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:14:24,805 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:14:24,808 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:14:24,808 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:14:24,808 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:14:24,991 global_function.py[line: 18] INFO: 获取测试用例信息 [{'id': '67', 'author_first_name': 'Testlink', 'author_login': 'admin', 'estimated_exec_duration': '', 'testcase_id': '66', 'node_order': '1000', 'author_last_name': 'Administrator', 'tc_external_id': '12', 'layout': '1', 'full_tc_external_id': 'tc-12', 'modification_ts': '2017-04-09 18:14:20', 'updater_id': '1', 'execution_type': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_login': 'admin', 'status': '1', 'steps': [{'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith&gt;(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'version': '1', 'active': '1', 'creation_ts': '2016-04-06 21:14:49', 'name': '获取天气服务', 'testsuite_id': '65', 'importance': '2', 'updater_first_name': 'Testlink', 'summary': '', 'is_open': '1', 'updater_last_name': 'Administrator', 'author_id': '1'}]
2017-04-09 18:14:25,329 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:14:25,329 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:14:25,329 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:14:25,820 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:14:25,821 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409181424', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:14:25,822 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:14:25,822 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:14:25,823 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:14:26,002 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:14:26,002 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}
2017-04-09 18:14:26,003 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:14:26,003 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409181425', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:14:26,005 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:14:26,005 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:14:26,006 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:14:26,006 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:14:26,006 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[3]
2017-04-09 18:14:26,006 casestep.py[line: 135] INFO: 从字符串中找到待替换的非全局动态参数：[1]
2017-04-09 18:14:26,006 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}]
2017-04-09 18:14:26,007 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:14:26,007 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 18:14:26,007 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:14:26,008 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:14:26,008 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:14:29,795 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 18:14:29,796 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:14:29,796 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:14:27 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:14:29,796 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:14:29,797 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 18:14:29,798 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:14:29,798 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:14:29,798 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:14:29,799 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:14:29,799 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:14:29,799 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:14:29,800 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x033697E0>]
2017-04-09 18:14:29,800 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:14:29,800 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:14:29,800 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:14:29,800 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:14:29,800 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:14:29,800 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:14:29,801 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:14:29,801 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:14:29,801 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:14:29,801 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x0311D900>]
2017-04-09 18:14:29,801 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:14:29,801 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:14:29,801 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:14:29,802 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 18:14:29,802 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:14:29,802 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_1-1.00
2017-04-09 18:14:29,802 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:14:29,802 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_2-1.00
2017-04-09 18:14:29,802 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:14:29,802 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_3-1.00
2017-04-09 18:14:29,803 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:14:29,803 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_4-1.00
2017-04-09 18:14:29,803 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:14:29,803 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:14:29,803 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:14:29,803 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:14:29,803 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:14:29,804 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:14:29,804 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:14:29,804 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:14:29,804 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x03369720>]
2017-04-09 18:14:29,804 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:14:29,804 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:14:29,804 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:14:29,805 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:14:29,805 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:14:29,805 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:14:29,805 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:14:29,805 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:14:29,805 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:14:29,806 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:14:29,806 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03369240>]
2017-04-09 18:14:29,806 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:14:29,806 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:14:29,806 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:14:29,807 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:14:26",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'匹配规则': 'xpath断言', '输出': {'re': {'copeWith2': 'copeWith>(.+?)<'}, 'xpath': {'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode', 'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith'}}, '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}], '检查': 'body'}" WHERE executed_history_id = 20170409181425 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:14:29,809 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:14:29,810 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:14:29,810 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:14:25", case_exec_history_id="20170409181425" WHERE executed_history_id = 20170409181424 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:14:29,812 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:14:29,812 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:14:29,812 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:38:14,204 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:38:14,204 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:38:14,220 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:38:14,224 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:38:14,297 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:38:14,297 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:38:14,299 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:38:14,299 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:38:14,300 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:38:14,303 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:38:14,303 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:38:14,303 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:38:14,589 global_function.py[line: 18] INFO: 获取测试用例信息 [{'status': '1', 'testsuite_id': '65', 'modification_ts': '2017-04-09 18:14:20', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith&gt;(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'id': '68', 'execution_type': '1', 'active': '1'}], 'testcase_id': '66', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'tc_external_id': '12', 'execution_type': '1', 'is_open': '1', 'summary': '', 'version': '1', 'creation_ts': '2016-04-06 21:14:49', 'importance': '2', 'id': '67', 'active': '1', 'full_tc_external_id': 'tc-12', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'updater_id': '1', 'node_order': '1000', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'updater_login': 'admin', 'author_id': '1', 'layout': '1', 'author_login': 'admin', 'name': '获取天气服务', 'author_last_name': 'Administrator'}]
2017-04-09 18:38:14,983 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:38:14,983 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:38:14,984 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:38:15,440 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:38:15,440 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409183814', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:38:15,442 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:38:15,442 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:38:15,442 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:38:15,645 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:38:15,646 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}
2017-04-09 18:38:15,646 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:38:15,646 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409183815', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:38:15,651 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:38:15,651 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:38:15,651 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:38:15,651 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:38:15,652 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}]
2017-04-09 18:38:15,652 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:38:15,653 InterfaceUnittestTestCase.py[line: 156] INFO: 正在发起POST请求...
2017-04-09 18:38:15,653 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:38:15,653 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:38:15,654 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:38:16,122 InterfaceUnittestTestCase.py[line: 168] INFO: 正在对服务器返回body进行解码
2017-04-09 18:38:16,122 InterfaceUnittestTestCase.py[line: 250] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:38:16,122 InterfaceUnittestTestCase.py[line: 251] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:38:17 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:38:16,123 InterfaceUnittestTestCase.py[line: 252] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:38:16,123 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}
2017-04-09 18:38:16,126 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:38:16,126 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:38:16,126 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:38:16,127 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:38:16,127 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:38:16,127 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:38:16,128 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x03236C90>]
2017-04-09 18:38:16,128 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:38:16,128 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:38:16,128 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:38:16,128 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:38:16,128 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:38:16,129 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:38:16,129 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:38:16,129 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:38:16,129 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:38:16,129 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03228DB0>]
2017-04-09 18:38:16,129 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:38:16,129 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:38:16,130 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:38:16,130 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:38:16,130 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:38:16,130 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:38:16,130 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:38:16,130 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:38:16,131 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:38:16,131 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:38:16,131 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:38:16,131 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03228B70>]
2017-04-09 18:38:16,131 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:38:16,131 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:38:16,131 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:38:16,132 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:38:16,132 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:38:16,132 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:38:16,132 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:38:16,133 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'xmlns': '{"http://xxx.com"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 18:38:16,133 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:38:16,133 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:38:16,133 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x03549210>]
2017-04-09 18:38:16,133 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:38:16,134 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:38:16,134 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 18:38:16,134 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:38:16,134 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_1-1.00
2017-04-09 18:38:16,134 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:38:16,134 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_2-1.00
2017-04-09 18:38:16,135 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:38:16,135 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_3-1.00
2017-04-09 18:38:16,135 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:38:16,135 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_4-1.00
2017-04-09 18:38:16,135 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:38:16,135 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:38:15",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'检查': 'body', '条件': [{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00'}}], '输出': {'xpath': {'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith', 'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode'}, 're': {'copeWith2': 'copeWith>(.+?)<'}}, '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409183815 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:38:16,138 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:38:16,138 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:38:16,138 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:38:15", case_exec_history_id="20170409183815" WHERE executed_history_id = 20170409183814 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:38:16,140 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:38:16,140 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:38:16,140 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:45:30,925 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:45:30,925 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:45:30,942 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:45:30,946 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:45:31,076 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:45:31,076 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:45:31,078 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:45:31,078 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:45:31,080 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:45:31,083 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:45:31,083 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:45:31,083 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:45:31,309 global_function.py[line: 18] INFO: 获取测试用例信息 [{'name': '获取天气服务', 'updater_login': 'admin', 'version': '1', 'testsuite_id': '65', 'execution_type': '1', 'summary': '', 'active': '1', 'is_open': '1', 'importance': '2', 'steps': [{'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith&gt;(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'active': '1', 'id': '68'}], 'layout': '1', 'author_id': '1', 'updater_last_name': 'Administrator', 'updater_id': '1', 'creation_ts': '2016-04-06 21:14:49', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'status': '1', 'author_last_name': 'Administrator', 'estimated_exec_duration': '', 'modification_ts': '2017-04-09 18:14:20', 'author_first_name': 'Testlink', 'tc_external_id': '12', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'id': '67'}]
2017-04-09 18:45:31,679 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:45:31,679 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:45:31,679 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:45:32,171 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:45:32,172 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409184530', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:45:32,174 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:45:32,174 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:45:32,174 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:45:32,353 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:45:32,353 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}
2017-04-09 18:45:32,353 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:45:32,354 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409184532', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:45:32,358 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:45:32,358 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:45:32,358 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:45:32,359 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:45:32,359 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}]
2017-04-09 18:45:32,359 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:45:32,360 InterfaceUnittestTestCase.py[line: 162] INFO: 正在发起POST请求...
2017-04-09 18:45:32,360 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:45:32,360 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:45:32,360 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:45:32,688 InterfaceUnittestTestCase.py[line: 174] INFO: 正在对服务器返回body进行解码
2017-04-09 18:45:32,688 InterfaceUnittestTestCase.py[line: 258] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:45:32,688 InterfaceUnittestTestCase.py[line: 259] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:45:33 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:45:32,688 InterfaceUnittestTestCase.py[line: 260] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:45:32,689 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}
2017-04-09 18:45:32,691 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:45:32,691 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:45:32,691 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:45:32,692 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:45:32,692 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:45:32,692 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:45:32,692 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x04044F30>]
2017-04-09 18:45:32,693 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:45:32,693 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:45:32,693 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:45:32,693 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:45:32,693 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:45:32,693 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:45:32,693 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:45:32,694 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:45:32,694 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:45:32,694 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x04041E10>]
2017-04-09 18:45:32,694 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:45:32,694 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:45:32,694 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:45:32,694 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:45:32,695 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:45:32,695 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:45:32,695 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:45:32,695 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:45:32,695 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:45:32,695 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:45:32,696 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:45:32,696 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x04041DE0>]
2017-04-09 18:45:32,696 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:45:32,696 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:45:32,696 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:45:32,696 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:45:32,697 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:45:32,697 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:45:32,697 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:45:32,697 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:45:32,697 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:45:32,697 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:45:32,698 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x04041F60>]
2017-04-09 18:45:32,698 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:45:32,698 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:45:32,698 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 18:45:32,698 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:45:32,698 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_1-1.00
2017-04-09 18:45:32,698 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:45:32,699 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_2-1.00
2017-04-09 18:45:32,699 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:45:32,699 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_3-1.00
2017-04-09 18:45:32,699 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:45:32,699 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_4-1.00
2017-04-09 18:45:32,700 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:45:32,700 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:45:32",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'输出': {'xpath': {'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith', 'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode'}, 're': {'copeWith2': 'copeWith>(.+?)<'}}, '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}], '检查': 'body', '匹配规则': 'xpath断言'}" WHERE executed_history_id = 20170409184532 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:45:32,702 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:45:32,702 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:45:32,702 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:45:32", case_exec_history_id="20170409184532" WHERE executed_history_id = 20170409184530 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:45:32,704 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:45:32,704 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:45:32,704 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:53:35,418 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:53:35,418 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:53:35,434 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:53:35,439 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:53:35,519 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:53:35,519 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:53:35,521 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:53:35,521 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:53:35,523 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:53:35,525 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:53:35,525 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:53:35,525 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:53:35,731 global_function.py[line: 18] INFO: 获取测试用例信息 [{'is_open': '1', 'name': '获取天气服务', 'execution_type': '1', 'node_order': '1000', 'testsuite_id': '65', 'updater_first_name': 'Testlink', 'importance': '2', 'creation_ts': '2016-04-06 21:14:49', 'layout': '1', 'version': '1', 'full_tc_external_id': 'tc-12', 'updater_id': '1', 'estimated_exec_duration': '', 'steps': [{'execution_type': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./[2]/[1]/[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith&gt;(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n', 'active': '1', 'step_number': '1'}], 'author_first_name': 'Testlink', 'summary': '', 'status': '1', 'tc_external_id': '12', 'author_login': 'admin', 'author_id': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'updater_login': 'admin', 'updater_last_name': 'Administrator', 'id': '67', 'author_last_name': 'Administrator', 'testcase_id': '66', 'active': '1', 'modification_ts': '2017-04-09 18:53:17'}]
2017-04-09 18:53:36,113 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:53:36,113 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:53:36,114 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:53:36,616 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:53:36,617 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409185335', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:53:36,618 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:53:36,619 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:53:36,619 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:53:36,813 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:53:36,813 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","xpath":{"copeWith": "./[2]/[1]/[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}
2017-04-09 18:53:36,813 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:53:36,814 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409185336', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","xpath":{"copeWith": "./[2]/[1]/[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:53:36,816 testcase.py[line: 113] ERROR: 步骤[1]信息填写错误: Expecting object: line 1 column 564 (char 563),停止执行用例[id=66, name=获取天气服务]
2017-04-09 18:53:36,816 testcase.py[line: 120] INFO: 正在更新步骤执行结果
2017-04-09 18:53:36,817 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Block",reason="Expecting object: line 1 column 564 (char 563)", protocol_method="post", runtime="2017-04-09 18:53:36" WHERE executed_history_id = 20170409185336 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'
2017-04-09 18:53:36,819 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:53:36,820 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-04-09 18:53:36", case_exec_history_id="20170409185336" WHERE executed_history_id = 20170409185335 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:53:36,822 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:53:36,823 main.py[line: 208] INFO: 用例[66]运行结果：('Error', [('TestCase', '步骤[1]信息填写错误: Expecting object: line 1 column 564 (char 563),停止执行用例[id=66, name=获取天气服务]')])
2017-04-09 18:53:36,823 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 18:54:29,898 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 18:54:29,898 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 18:54:29,915 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 18:54:29,919 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 18:54:29,995 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 18:54:29,995 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 18:54:29,997 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 18:54:29,998 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 18:54:29,999 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 18:54:30,001 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 18:54:30,001 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 18:54:30,001 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 18:54:30,196 global_function.py[line: 18] INFO: 获取测试用例信息 [{'steps': [{'active': '1', 'step_number': '1', 'id': '68', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'execution_type': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;copeWith_bak&quot;: &quot;./[2]/[1]/[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith&gt;(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n'}], 'name': '获取天气服务', 'creation_ts': '2016-04-06 21:14:49', 'testcase_id': '66', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'author_first_name': 'Testlink', 'updater_id': '1', 'author_id': '1', 'tc_external_id': '12', 'author_login': 'admin', 'importance': '2', 'updater_first_name': 'Testlink', 'node_order': '1000', 'layout': '1', 'id': '67', 'full_tc_external_id': 'tc-12', 'updater_login': 'admin', 'version': '1', 'is_open': '1', 'status': '1', 'active': '1', 'testsuite_id': '65', 'summary': '', 'updater_last_name': 'Administrator', 'estimated_exec_duration': '', 'modification_ts': '2017-04-09 18:54:24', 'author_last_name': 'Administrator', 'execution_type': '1'}]
2017-04-09 18:54:30,568 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 18:54:30,568 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 18:54:30,568 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 18:54:31,059 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 18:54:31,059 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409185429', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 18:54:31,061 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 18:54:31,061 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 18:54:31,061 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 18:54:31,242 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 18:54:31,242 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","copeWith_bak": "./[2]/[1]/[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}
2017-04-09 18:54:31,243 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 18:54:31,243 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409185431', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","copeWith_bak": "./[2]/[1]/[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 18:54:31,245 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 18:54:31,245 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 18:54:31,246 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:54:31,246 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:54:31,246 casestep.py[line: 168] INFO: 转换后的参数体为：[{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}}]
2017-04-09 18:54:31,246 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 18:54:31,247 InterfaceUnittestTestCase.py[line: 162] INFO: 正在发起POST请求...
2017-04-09 18:54:31,247 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 18:54:31,247 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 18:54:31,247 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 18:54:31,665 InterfaceUnittestTestCase.py[line: 174] INFO: 正在对服务器返回body进行解码
2017-04-09 18:54:31,666 InterfaceUnittestTestCase.py[line: 258] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 18:54:31,666 InterfaceUnittestTestCase.py[line: 259] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 10:54:32 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 18:54:31,666 InterfaceUnittestTestCase.py[line: 260] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 18:54:31,667 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}
2017-04-09 18:54:31,670 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:54:31,671 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:54:31,671 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:54:31,671 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:54:31,672 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:54:31,672 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:54:31,672 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x03671930>]
2017-04-09 18:54:31,673 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:54:31,673 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:54:31,673 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:54:31,673 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 18:54:31,674 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:54:31,674 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:54:31,674 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:54:31,674 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 18:54:31,674 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:54:31,675 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x0355A810>]
2017-04-09 18:54:31,675 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 18:54:31,675 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 18:54:31,675 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 18:54:31,676 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:54:31,676 unittesttestcase.py[line: 322] INFO: xpath表达式为：./[2]/[1]/[1]/xmlns:copeWith
2017-04-09 18:54:31,676 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:54:31,676 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:54:31,676 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:54:31,677 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:54:31,677 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:54:31,677 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./[2]/[1]/[1]/{http://xxx.com}copeWith
2017-04-09 18:54:31,677 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[]
2017-04-09 18:54:31,677 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：
2017-04-09 18:54:31,678 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith_bak-
2017-04-09 18:54:31,678 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:54:31,678 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 18:54:31,678 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:54:31,678 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:54:31,679 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:54:31,679 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:54:31,679 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:54:31,679 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 18:54:31,680 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x0355D8D0>]
2017-04-09 18:54:31,680 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 18:54:31,680 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 18:54:31,680 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 18:54:31,681 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 18:54:31,681 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 18:54:31,681 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 18:54:31,681 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 18:54:31,681 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}'}
2017-04-09 18:54:31,681 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 18:54:31,681 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 18:54:31,682 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x0355DDB0>]
2017-04-09 18:54:31,682 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 18:54:31,682 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 18:54:31,682 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 18:54:31,683 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:54:31,683 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_1-1.00
2017-04-09 18:54:31,683 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:54:31,683 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_2-1.00
2017-04-09 18:54:31,683 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:54:31,683 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_3-1.00
2017-04-09 18:54:31,683 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 18:54:31,684 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_4-1.00
2017-04-09 18:54:31,684 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 18:54:31,684 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 18:54:31",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'输出': {'xpath': {'copeWith_bak': './[2]/[1]/[1]/xmlns:copeWith', 'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode', 'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith'}, 're': {'copeWith2': 'copeWith>(.+?)<'}}, '匹配规则': 'xpath断言', '条件': [{'消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误', '模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}}], '检查': 'body'}" WHERE executed_history_id = 20170409185431 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 18:54:31,686 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 18:54:31,686 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 18:54:31,686 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 18:54:31", case_exec_history_id="20170409185431" WHERE executed_history_id = 20170409185429 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 18:54:31,688 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 18:54:31,688 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 18:54:31,688 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
2017-04-09 19:18:35,225 global_var.py[line: 22] INFO: 当前运行环境：测试环境
2017-04-09 19:18:35,226 global_var.py[line: 23] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-04-09 19:18:35,243 global_var.py[line: 30] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-04-09 19:18:35,249 global_var.py[line: 33] INFO: 正在获取testlink
2017-04-09 19:18:35,332 main.py[line: 58] INFO: 正在创建测试用例报告报表
2017-04-09 19:18:35,332 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime,                                          case_exec_history_id varchar(50),                                           tc_external_id varchar(50))
2017-04-09 19:18:35,334 main.py[line: 61] INFO: 正在创建测试步骤报告报表
2017-04-09 19:18:35,335 mydb.py[line: 44] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-04-09 19:18:35,337 main.py[line: 64] INFO: 正在读取运行模式配置
2017-04-09 19:18:35,339 main.py[line: 71] INFO: 正在获取运行全局初始化用例……
2017-04-09 19:18:35,339 main.py[line: 203] INFO: 运行指定用例……
2017-04-09 19:18:35,339 main.py[line: 205] INFO: 待运行用例id列表：[66]
2017-04-09 19:18:35,654 global_function.py[line: 18] INFO: 获取测试用例信息 [{'updater_id': '1', 'layout': '1', 'name': '获取天气服务', 'full_tc_external_id': 'tc-12', 'node_order': '1000', 'updater_first_name': 'Testlink', 'testcase_id': '66', 'updater_last_name': 'Administrator', 'estimated_exec_duration': '', 'id': '67', 'steps': [{'id': '68', 'execution_type': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_xml</span>&quot;,</p>\n<p>\n\t&quot;请求头&quot;:{&quot;Content-Type&quot;:&quot;text/xml; charset=utf-8&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;<span><span>/WebServices/WeatherWebService.asmx</span></span>&quot;,</p>\n<p align="left">\n\t&quot;参数&quot;:&quot;<span><span>&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;</span></span><span><span>&lt;soap12:Envelope xmlns:xsi=\\&quot;http://www.w3.org/2001/XMLSchema-instance\\&quot; xmlns:xsd=\\&quot;http://www.w3.org/2001/XMLSchema\\&quot; xmlns:soap12=\\&quot;http://www.w3.org/2003/05/soap-envelope\\&quot;&gt; </span></span></p>\n<pre>\n<span><span>  &lt;soap12:Body&gt;\n    &lt;getSupportProvince xmlns=\\&quot;http://WebXml.com.cn/\\&quot; /&gt;\n  &lt;/soap12:Body&gt;\n&lt;/soap12:Envelope&gt;&quot;</span></span></pre>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1', 'expected_results': '<p>\n\t{<br />\n\t&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;xpath断言&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;:&quot;1.00&quot;,</p>\n<p>\n\t&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;:&quot;DDT201704071945408575&quot;}, &quot;消息&quot;:&quot;第一个return结点下copeWith或第三return结点下的orderCode值错误&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;xpath&quot;:{&quot;copeWith&quot;: &quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith&quot;,</p>\n<p>\n\t&quot;orderCode&quot;:&quot;./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode&quot;},</p>\n<p>\n\t&quot;re&quot;:{&quot;copeWith2&quot;:&quot;copeWith&gt;(.+?)&lt;&quot;}</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t}<br />\n\t}</p>\n'}], 'version': '1', 'author_id': '1', 'execution_type': '1', 'is_open': '1', 'status': '1', 'tc_external_id': '12', 'author_login': 'admin', 'creation_ts': '2016-04-06 21:14:49', 'modification_ts': '2017-04-09 18:59:20', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'importance': '2', 'testsuite_id': '65', 'active': '1', 'preconditions': '<p>\n\t使用上级配置</p>\n', 'summary': '', 'author_last_name': 'Administrator'}]
2017-04-09 19:18:36,094 global_function.py[line: 81] INFO: 正在读取测项目[project：项目1]的协议，host，端口配置...
2017-04-09 19:18:36,094 global_function.py[line: 84] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2017-04-09 19:18:36,094 global_function.py[line: 98] INFO: 正在构建项目的http对象
2017-04-09 19:18:36,583 global_function.py[line: 50] INFO: 记录测试用例到测试用例报表
2017-04-09 19:18:36,583 mydb.py[line: 58] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime, tc_external_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409191835', 66, '获取天气服务', '天气服务接口', '无计划', '项目1', 'Block', '0000-00-00 00:00:00', 'tc-12')
2017-04-09 19:18:36,585 global_function.py[line: 53] INFO: 开始执行测试用例[id=66，name=获取天气服务]
2017-04-09 19:18:36,585 testcase.py[line: 38] INFO: 用例[name=获取天气服务]使用上级套件的ip配置
2017-04-09 19:18:36,585 testcase.py[line: 39] INFO: 正在读取用例[name=获取天气服务]所在套件的协议，host，端口配置...
2017-04-09 19:18:36,774 testcase.py[line: 76] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">   <soap12:Body>    <getSupportProvince xmlns=\"http://WebXml.com.cn/\" />  </soap12:Body></soap12:Envelope>"}
2017-04-09 19:18:36,821 testcase.py[line: 78] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}
2017-04-09 19:18:36,821 testcase.py[line: 97] INFO: 记录测试步骤到测试步骤报告表
2017-04-09 19:18:36,822 mydb.py[line: 58] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170409191836', 66, '获取天气服务', '无计划', '项目1', 68, 1, '', 'http', 'www.webxml.com.cn', '80', '{"函数":"test_interface_of_xml","请求头":{"Content-Type":"text/xml; charset=utf-8"},"方法":"post","url":"/WebServices/WeatherWebService.asmx","参数":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?><soap12:Envelope xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\" xmlns:soap12=\\"http://www.w3.org/2003/05/soap-envelope\\">   <soap12:Body>    <getSupportProvince xmlns=\\"http://WebXml.com.cn/\\" />  </soap12:Body></soap12:Envelope>"}', '{"检查":"body","匹配规则":"xpath断言","条件":[{"模式":{"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith":"1.00","./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode":"DDT201704071945408575"}, "消息":"第一个return结点下copeWith或第三return结点下的orderCode值错误"}],"输出":{"xpath":{"copeWith": "./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith","orderCode":"./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode"},"re":{"copeWith2":"copeWith>(.+?)<"} }}', 'Block', '', '0000-00-00 00:00:00')
2017-04-09 19:18:36,825 testcase.py[line: 124] INFO: 开始执行步骤操作[第1步]
2017-04-09 19:18:36,825 casestep.py[line: 190] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_xml
2017-04-09 19:18:36,825 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 19:18:36,825 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 19:18:36,826 casestep.py[line: 168] INFO: 转换后的参数体为：[{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}]
2017-04-09 19:18:36,826 casestep.py[line: 124] INFO: 没找到需要替换的动态参数
2017-04-09 19:18:36,826 InterfaceUnittestTestCase.py[line: 162] INFO: 正在发起POST请求...
2017-04-09 19:18:36,826 httpprotocol.py[line: 82] INFO: 发起的请求为：http://www.webxml.com.cn:80/WebServices/WeatherWebService.asmx
2017-04-09 19:18:36,827 httpprotocol.py[line: 83] INFO: 参数为：b'<?xml version="1.0" encoding="utf-8"?><soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">   <soap12:Body>    <getSupportProvince xmlns="http://WebXml.com.cn/" />  </soap12:Body></soap12:Envelope>'
2017-04-09 19:18:36,827 httpprotocol.py[line: 84] INFO: 请求头为：{'Content-Type': 'text/xml; charset=utf-8'}
2017-04-09 19:18:37,314 InterfaceUnittestTestCase.py[line: 174] INFO: 正在对服务器返回body进行解码
2017-04-09 19:18:37,314 InterfaceUnittestTestCase.py[line: 258] INFO: 服务器返回结果"响应体(body)": <soap:Envelope test="ddd" xmlns  =  "http://www.examp.com" xmlns:soap = "http://schemas.xmlsoap.org/soap/envelope/" >
        <soap:td>
            <testd></testd>
        </soap:td>
        <ns1:Body test="ddd" xmlns="http://xxx.com" xmlns:ns1="http://service.rpt.data.platform.ddt.sf.com/" name="tt">
            <ns2:selectByPrimaryKeyResponse  xmlns:ns2="http://service.rpt.data.platform.ddt.sf2.com/" name="tt">
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>144</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071952057186</orderCode>
                    <orderDate>2017-04-07 19:52:06.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>143</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071951065731</orderCode>
                    <orderDate>2017-04-07 19:51:07.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return>
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>142</id>
                    <invoice>2</invoice>
                    <invoiceType></invoiceType>
                    <orderCode>DDT201704071945408575</orderCode>
                    <orderDate>2017-04-07 19:45:40.0</orderDate>
                    <paid>0.01</paid>
                    <payType>pc</payType>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId>2</userId>
                </return>
                <return attr="re">
                    <copeWith>1.00</copeWith>
                    <discount>0.99</discount>
                    <id>141</id>
                    <invoice>1</invoice>
                    <invoiceType>增值税普通发票</invoiceType>
                    <orderCode>DDT201704071845403738</orderCode>
                    <orderDate>2017-04-07 18:45:41.0</orderDate>
                    <paid>0.01</paid>
                    <productName>快递包</productName>
                    <state>0</state>
                    <userId attr="testattr">2</userId>
                </return>
            </ns2:selectByPrimaryKeyResponse>
        </ns1:Body>
        <soap:Body test="ddd">
        </soap:Body>
        <soap:Body2 test="ddd">
        <selectByPrimaryKeyResponse></selectByPrimaryKeyResponse>
        </soap:Body2>
    </soap:Envelope>
2017-04-09 19:18:37,315 InterfaceUnittestTestCase.py[line: 259] INFO: 服务器返回结果"请求头(headers)": [('Connection', 'close'), ('Date', 'Sun, 09 Apr 2017 11:18:38 GMT'), ('Server', 'Microsoft-IIS/6.0'), ('X-Powered-By', 'ASP.NET'), ('X-AspNet-Version', '2.0.50727'), ('Cache-Control', 'private, max-age=0'), ('Content-Type', 'application/soap+xml; charset=utf-8'), ('Content-Length', '1239')]
2017-04-09 19:18:37,315 InterfaceUnittestTestCase.py[line: 260] INFO: 服务器返回结果"状态码(code)": 200
2017-04-09 19:18:37,315 unittesttestcase.py[line: 231] INFO: 要检测的模式为：{'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}
2017-04-09 19:18:37,317 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 19:18:37,318 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 19:18:37,318 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 19:18:37,318 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 19:18:37,318 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 19:18:37,318 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 19:18:37,319 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x033A6DE0>]
2017-04-09 19:18:37,319 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 19:18:37,319 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 19:18:37,319 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 19:18:37,320 unittesttestcase.py[line: 238] INFO: 正在获取xmlns定义
2017-04-09 19:18:37,320 unittesttestcase.py[line: 244] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 19:18:37,320 unittesttestcase.py[line: 247] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 19:18:37,320 unittesttestcase.py[line: 252] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 19:18:37,320 unittesttestcase.py[line: 254] INFO: 正在转换元素结点前缀
2017-04-09 19:18:37,320 unittesttestcase.py[line: 263] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 19:18:37,321 unittesttestcase.py[line: 269] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x033AACC0>]
2017-04-09 19:18:37,321 unittesttestcase.py[line: 271] INFO: 正在进行断言
2017-04-09 19:18:37,321 unittesttestcase.py[line: 277] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2017-04-09 19:18:37,321 unittesttestcase.py[line: 278] INFO: 用户期望值的数据类型：<class 'str'>
2017-04-09 19:18:37,321 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 19:18:37,321 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode
2017-04-09 19:18:37,322 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 19:18:37,322 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 19:18:37,322 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 19:18:37,322 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 19:18:37,322 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 19:18:37,322 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[3]/{http://xxx.com}orderCode
2017-04-09 19:18:37,322 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}orderCode' at 0x033B1D80>]
2017-04-09 19:18:37,323 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：DDT201704071945408575
2017-04-09 19:18:37,323 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:orderCode-DDT201704071945408575
2017-04-09 19:18:37,323 unittesttestcase.py[line: 404] INFO: 使用xpath提取
2017-04-09 19:18:37,323 unittesttestcase.py[line: 322] INFO: xpath表达式为：./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith
2017-04-09 19:18:37,323 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2017-04-09 19:18:37,323 unittesttestcase.py[line: 333] INFO: xmlns定义为：{"http://xxx.com"}
2017-04-09 19:18:37,324 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2017-04-09 19:18:37,324 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap ': '{ "http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.data.platform.ddt.sf2.com/"}', 'xmlns': '{"http://xxx.com"}', 'ns1': '{"http://service.rpt.data.platform.ddt.sf.com/"}'}
2017-04-09 19:18:37,325 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2017-04-09 19:18:37,325 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：./{http://service.rpt.data.platform.ddt.sf.com/}Body/{http://service.rpt.data.platform.ddt.sf2.com/}selectByPrimaryKeyResponse/{http://xxx.com}return[1]/{http://xxx.com}copeWith
2017-04-09 19:18:37,326 unittesttestcase.py[line: 358] INFO: 查找到的元素为：[<Element '{http://xxx.com}copeWith' at 0x033B1EA0>]
2017-04-09 19:18:37,326 unittesttestcase.py[line: 406] INFO: 获取到的变量的值为：1.00
2017-04-09 19:18:37,326 unittesttestcase.py[line: 409] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:copeWith-1.00
2017-04-09 19:18:37,326 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2017-04-09 19:18:37,326 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 19:18:37,326 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_1-1.00
2017-04-09 19:18:37,327 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 19:18:37,327 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_2-1.00
2017-04-09 19:18:37,327 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 19:18:37,327 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_3-1.00
2017-04-09 19:18:37,327 unittesttestcase.py[line: 391] INFO: 获取到的变量的值为：['1.00', '1.00', '1.00', '1.00']
2017-04-09 19:18:37,328 unittesttestcase.py[line: 400] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:copeWith2_4-1.00
2017-04-09 19:18:37,328 testcase.py[line: 203] INFO: 正在更新步骤执行结果
2017-04-09 19:18:37,328 mydb.py[line: 73] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2017-04-09 19:18:36",step_action="{'函数': 'test_interface_of_xml', '请求头': {'Content-Type': 'text/xml; charset=utf-8'}, '方法': 'post', 'url': '/WebServices/WeatherWebService.asmx', '参数': '<?xml version=\'1.0\' encoding=\'utf-8\'?><soap12:Envelope xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:soap12=\'http://www.w3.org/2003/05/soap-envelope\'>   <soap12:Body>    <getSupportProvince xmlns=\'http://WebXml.com.cn/\' />  </soap12:Body></soap12:Envelope>'}", expected_results="{'输出': {'xpath': {'orderCode': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode', 'copeWith': './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith'}, 're': {'copeWith2': 'copeWith>(.+?)<'}}, '匹配规则': 'xpath断言', '条件': [{'模式': {'./ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[1]/xmlns:copeWith': '1.00', './ns1:Body/ns2:selectByPrimaryKeyResponse/xmlns:return[3]/xmlns:orderCode': 'DDT201704071945408575'}, '消息': '第一个return结点下copeWith或第三return结点下的orderCode值错误'}], '检查': 'body'}" WHERE executed_history_id = 20170409191836 AND testcase_id = 66 AND step_id = 68 AND project='项目1' AND testplan='无计划'  AND runtime='0000-00-00 00:00:00'
2017-04-09 19:18:37,332 testcase.py[line: 206] INFO: 测试用例[id=66, name=获取天气服务]执行成功
2017-04-09 19:18:37,332 global_function.py[line: 58] INFO: 正在更新用例执行结果
2017-04-09 19:18:37,332 mydb.py[line: 73] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-04-09 19:18:36", case_exec_history_id="20170409191836" WHERE executed_history_id = 20170409191835 and testcase_id = 66 AND project='项目1' AND testplan='无计划'
2017-04-09 19:18:37,335 global_function.py[line: 66] INFO: 指定用例[获取天气服务]已执行完
2017-04-09 19:18:37,335 main.py[line: 208] INFO: 用例[66]运行结果：('Pass', '')
2017-04-09 19:18:37,336 main.py[line: 210] INFO: 接口测试已执行完成，正在关闭数据库连接
